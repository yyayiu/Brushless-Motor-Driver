(function(a,b){a.fn.prodSlider=function(f,l){var y=a.extend({speed:300,duration:6000,maxFontSize:14},f);
var q=a(this);
var l;
var s=false;
var v=[];
if(!y.dynamicHtml){var o=[];
q.find("> ul > li").each(function(B,C){var A=a(C);
o[B]={promoUrl:A.find("a").attr("href"),entityName:A.find("a img").attr("alt"),graphicPath:A.find("a img").attr("src"),metrics:A.find("a").attr("name"),thumbnailPath:A.find("a img").attr("data-square"),promoHtml:A.find("div.liveText").clone().wrap("<div>").parent().html()}
});
l={FinalPromotionDetails:{personalizedPromoDetails:o}};
q.html("");
x(q,l)
}else{var w=location.href.split(location.search||location.hash||/[?#]/)[0],z,g;
z=window.location.hostname;
var n=window.location.href;
var j=a("#domain").val();
g="";
if(n.indexOf("/zh-cn/")!=-1){g="cn"
}else{if(n.indexOf("/ja-jp/")!=-1){g="jp"
}else{if(n.indexOf("/ko-kr/")!=-1){g="kr"
}else{if(n.indexOf("/de-de/")!=-1){g="de"
}}}}a.ajax({type:"GET",timeout:10000,url:"//"+j+"/promo/"+g+"/docs/promotions/getpromodetails.tsp?playlistId="+y.playListId+"&locationId=4&pageName="+w,dataType:"jsonp",contentType:"application/x-javascript",cache:false}).done(function(B){var A=c(B)
}).fail(function(A,B){console.log("failed")
}).always(function(B,C,A){})
}function c(A){if(typeof A!=="object"){return false
}if(typeof A.FinalPromotionDetails!=="object"){return false
}if(typeof A.FinalPromotionDetails.personalizedPromoDetails!=="object"){return false
}if(A.FinalPromotionDetails.personalizedPromoDetails.length<1){return false
}if(A.FinalPromotionDetails.personalizedPromoDetails.length<=1&&A.FinalPromotionDetails.personalizedPromoDetails[0].promoId<0){return false
}l=A;
x(q,l);
return true
}function d(B){var A={"www.ti.com":"","www.ti.com.cn":"cn/","www.tij.co.jp":"jp/","www.ti.com/ww/kr":"kr/","www.ti.com/ww/de":"de/","www.cn-int.itg.ti.com":"cn/","www.jp-int.itg.ti.com":"jp/","www.cn-uat.itg.ti.com":"cn/","www.jp-uat.itg.ti.com":"jp/","www.cn-sat.itg.ti.com":"cn/","www.jp-sat.itg.ti.com":"jp/","www.ti.com/lsds/ti_ko":"kr/","www.ti.com/lsds/ti_de":"de/"};
if(!A.hasOwnProperty(B)){return""
}return A[B]
}function x(E,A){u(E,A);
var C=E.find(".slides > ul");
C.mouseover(function(){clearInterval(B)
}).mouseout(function(){B=setInterval(function(){t(E)
},y.duration)
});
E.find(".arrow").hover(function(){a(this).stop().animate({opacity:1})
},function(){a(this).stop().animate({opacity:0})
});
var D=y.speed;
if(y.type=="square"){y.speed=D/2
}E.find(".next").add(E.find(".prev")).add(E.find(".prod-control ul li")).click(function(){var F=a(this);
y.speed=D*0.5;
if(F.hasClass("arrow")&&F.hasClass("next")){t(E)
}else{if(F.hasClass("arrow")&&F.hasClass("prev")){t(E,"prev")
}else{t(E,"nav",F)
}}clearInterval(B);
B=setInterval(function(){y.speed=D;
t(E)
},y.duration)
});
E.on("swipeleft",function(F){clearInterval(B);
t(E);
B=setInterval(function(){t(E)
},y.duration)
});
E.on("swiperight",function(F){clearInterval(B);
t(E,"prev");
B=setInterval(function(){t(E)
},y.duration)
});
p();
a(window).resize(function(){var F=A.FinalPromotionDetails;
if(y.type!="square"){h(E,F)
}E.find(".slides > ul > li:not(.selected)").css("left",E.find(".position").width())
});
var B=setInterval(function(){y.speed=D;
t(E)
},y.duration);
return
}function p(){if(!y.dynamicHtml){return
}else{var B=q.find(".prod-control li.selected").index();
var D=q.find(".prod-control li").length;
if(!v[B]){v[B]=true;
if(B<D&&!s){var A=(q.find(".slides li:eq("+B+") a").attr("name")).substring(5);
if(A.search("promo_ppr_pp")>-1){if(window.get_cookie==b||window.s==b){var C=setInterval(function(){if(window.get_cookie!=b&&window.s!=b){clearInterval(C);
setProductPromoIdCount(A)
}},500)
}else{setProductPromoIdCount(A)
}}else{}}else{if(B=D){s=true
}}}}}function t(B,C,G){var F=B.find(".slides > ul"),J=B.find(".prod-control ul"),I=B.find(".next"),H=B.find(".prev"),A=B.find(".position").width()+"px",E="-"+A,D=(C=="prev"?E:A);
if(F.find("> li").is(":animated")&&y.animation!="fade"){return
}if(a(F).find("li").size()==1){return
}F.find("> li").each(function(){if(!a(this).hasClass("selected")){a(this).css("left",D)
}});
switch(C){case"prev":k(B,F,J);
break;
case"nav":r(B,F,J,G);
break;
default:m(B,F,J)
}p()
}function m(D,C,A){var E=C.find("> li").size(),B=C.find("> li.selected").index()+1;
e(A,B);
switch(y.animation){case"fade":if(B<E){C.find("> li").stop().animate({opacity:0},y.speed).removeClass("selected");
C.find("> li:eq("+B+")").stop().animate({opacity:1},y.speed).addClass("selected")
}else{A.find("> li:eq(0)").addClass("selected");
C.find("> li").stop().animate({opacity:0},y.speed).removeClass("selected");
C.find("> li:eq(0)").stop().animate({opacity:1},y.speed).addClass("selected")
}break;
default:if(B<E){C.find("> li:eq("+B+")").animate({left:"0px"},y.speed,function(){a(this).addClass("selected")
});
C.find("> li:eq("+(B-1)+")").animate({left:"-100%"},y.speed,function(){a(this).removeClass("selected")
})
}else{A.find("> li:eq(0)").addClass("selected");
C.find("> li:eq(0)").animate({left:"0px"},y.speed,function(){a(this).addClass("selected")
});
C.find("> li:eq("+(E-1)+")").animate({left:"-100%"},y.speed,function(){a(this).removeClass("selected")
})
}}}function k(D,C,A){var B=C.find("> li.selected").index()-1,E=C.find("> li").size();
e(A,(E-1));
switch(y.animation){case"fade":if(B<0){C.find("> li").stop().animate({opacity:0},y.speed).removeClass("selected");
C.find("> li:eq("+(E-1)+")").stop().animate({opacity:1},y.speed).addClass("selected")
}else{A.find("> li").removeClass("selected");
A.find("> li:eq("+B+")").addClass("selected");
C.find("> li").stop().animate({opacity:0},y.speed).removeClass("selected");
C.find("> li:eq("+B+")").stop().animate({opacity:1},y.speed).addClass("selected")
}break;
default:if(B<0){C.find("> li:eq("+(E-1)+")").animate({left:"0px"},y.speed,function(){a(this).addClass("selected")
});
C.find("> li:eq(0)").animate({left:"100%"},y.speed,function(){a(this).removeClass("selected")
})
}else{A.find("> li").removeClass("selected");
A.find("> li:eq("+B+")").addClass("selected");
C.find("> li.selected").animate({left:"100%"},y.speed,function(){a(this).removeClass("selected")
});
C.find("> li:eq("+B+")").animate({left:"0px"},y.speed,function(){a(this).prev().removeClass("selected");
a(this).addClass("selected")
})
}}}function r(E,C,B,A){if(A.hasClass("selected")){return
}else{var D=A.index();
e(B,D);
switch(y.animation){case"fade":C.find("> li").stop().animate({opacity:0},y.speed).removeClass("selected");
C.find("> li:eq("+D+")").stop().animate({opacity:1},y.speed).addClass("selected");
break;
default:C.find("> li.selected").animate({left:"-100%"},y.speed,function(){a(this).removeClass("selected")
});
C.find("> li:eq("+D+")").animate({left:"0px"},y.speed,function(){a(this).prev().removeClass("selected");
a(this).addClass("selected")
})
}}}function e(A,B){A.find("> li").removeClass("selected");
A.find("> li:eq("+B+")").addClass("selected")
}function h(C,B){if(C.find(".isSmallScreen").is(":visible")||y.type=="square"||(C.parent().closest("div").width()<400&&y.transformed)){C.find(".slides > ul > li").each(function(E,F){a(F).find("img").attr("src","//www.ti.com"+B.personalizedPromoDetails[E].thumbnailPath)
});
C.addClass("square");
C.find(".position img").attr("src","//www.ti.com"+B.personalizedPromoDetails[0].thumbnailPath)
}else{C.removeClass("square");
C.find(".slides > ul > li").each(function(E,F){a(F).find("img").attr("src","//www.ti.com"+B.personalizedPromoDetails[E].graphicPath)
});
C.find(".position img").attr("src","//www.ti.com"+B.personalizedPromoDetails[0].graphicPath)
}if(y.liveText){var A=C.hasClass("square"),D=parseInt(C.css("max-width"));
if(C.width()<D&&A==false){C.find(".liveText").css("font-size",y.maxFontSize*(C.width()/D)+"px")
}else{C.find(".liveText").css("font-size",y.maxFontSize);
C.find(".liveText").css("font-size",y.maxFontSize*(C.width()/D)+"px")
}}}function u(G,B){var A=G,E=B.FinalPromotionDetails;
var F=E.personalizedPromoDetails.length;
if(y.dynamicHtml){var D=(g=="")?D="en":D=g.slice(0,-1)
}if(y.maxWidth){A.css("max-width",y.maxWidth)
}G.append("<div class='isSmallScreen'></div>");
_html="";
_html+=(y.animation=="fade")?"<div class='slides fade'>":"<div class='slides'>";
_html+="<ul>";
for(var C=0;
C<F;
C++){_html+=(C==0)?"<li class='selected'> <a":"<li> <a ";
if(!y.dynamicHtml){_html+=" name="+E.personalizedPromoDetails[C].metrics;
_html+=(E.personalizedPromoDetails[C].promoUrl)?" href='"+E.personalizedPromoDetails[C].promoUrl+" ' >":" >"
}else{_html+=" name=&lid=promo_ppr_";
_html+=(E.personalizedPromoDetails[C].promoTypeId==3)?promotypeMatrics="pp":promotypeMatrics="mm";
_html+="_"+D+"_"+E.personalizedPromoDetails[C].promoId+"_pl"+y.playListId;
_html+=" href='"+E.personalizedPromoDetails[C].promoUrl+" ' >"
}_html+=(y.liveText)?E.personalizedPromoDetails[C].promoHtml:"";
_html+="<img src= ";
_html+=(G.find(".isSmallScreen").is(":visible")||y.type=="square")?"//www.ti.com"+E.personalizedPromoDetails[C].thumbnailPath:"//www.ti.com"+E.personalizedPromoDetails[C].graphicPath;
_html+=" alt='"+E.personalizedPromoDetails[C].entityName+"' /></a></li>"
}_html+="</ul>";
_html+="<a title='Next' class='arrow next'>Next</a>";
_html+="<a title='Prev' class='arrow prev'>Prev</a>";
_html+="<div class='position'> <img src=";
_html+=(G.find(".isSmallScreen").is(":visible")||y.type=="square")?"//www.ti.com"+E.personalizedPromoDetails[0].thumbnailPath:"//www.ti.com"+E.personalizedPromoDetails[0].graphicPath;
_html+=" /> </div>";
_html+="</div>";
_html+="<div class='prod-control'>";
_html+="<ul>";
for(var C=0;
C<F;
C++){if(C==0){_html+="<li title='"+(C+1)+"' class='selected' > "+(C+1)+"</li>"
}else{_html+="<li title='"+(C+1)+"' > "+(C+1)+"</li>"
}}_html+="</ul>";
G.append(_html);
if(!y.border){G.addClass("no-border")
}if(!y.navBg){G.find(".prod-control").css("background","none")
}if(!y.transformed){G.find(".isSmallScreen").css("display","none")
}if(y.position=="center"||y.position=="right"){G.addClass(y.position)
}h(G,E)
}}
})(jQuery);
$(document).ready(function(){$(".js-productTree-collapse").on("click",function(){$(this).closest(".ti_productTree").toggleClass("is-collapsed")
});
$(".js-productTree-expand").on("click",function(){$(this).closest(".ti_productTree").toggleClass("is-collapsed")
});
if($("ti-selection-tool").length&&$("ti-selection-tool").attr("standalone")==null){$("nav.ti_productTree").addClass("is-collapsed")
}});
$(document).ready(function(){var a=0;
if($(".supplementalLinks").length>0){if($(".ti_productTree-container").children("div").children("div").html().trim().length==0){a++
}if($(".productTreeSupplementalLinks").length>0&&$(".productTreeSupplementalLinks").children("div").length==0){a++
}if($(".productTreeSupplementalLinks").length>0&&$(".productTreeSupplementalLinks").children("div").length>0&&$(".productTreeSupplementalLinks").children("div").html().trim().length==0){a++
}if(a>0){$(".supplementalLinks").hide()
}}});
(function(e){var h="TIwebenchPanel2",f=0;
var j=e("#domain").val();
var g=e("#tiPageName").val();
var k=e("#language").val();
var b={ttcreatemulti:"Create a power supply system with multiple Loads",ttcreatesingle:"Create a power supply design with single output",ttcreatefpgaarch:"Create an FPGA power supply system",ttcreateuparch:"Create a processor power supply system",ttcreateclock:"Create a clock design",ttcreateled:"Create an LED power design",ttcreatesensor:"Create a sensor design",ttfindsensor:"Find a temperature sensor part",ttcreatefilter:"Create a filter design",moretools:"More Tools",helphover:"Click for WEBENCH Help",webenchurl:"//"+j+"/design-tools/overview.html",helpurl:"//webench.ti.com/help/",helpurlpower:"//"+j+"/design-tools/webench-power-design/power-designer.html",helpurlfpga:"//"+j+"/design-tools/webench-power-design/power-architect.html",helpurlled:"//"+j+"/design-tools/webench-power-design/led-architect.html",helpurlfilters:"//"+j+"/design-tools/signal-chain-design/webench-filters.html",helpurlclocks:"//"+j+"/design-tools/signal-chain-design/clock-architect.html",helpurlsensors:"//"+j+"/design-tools/signal-chain-design/sensors-overview.html",helpurlinterface:"//"+j+"/design-tools/signal-chain-design/interface.html",helpurlreference:"//"+j+"/design-tools/signal-chain-design/vref.html",helpurlbattery:"//"+j+"/design-tools/webench-power-design/battery-charger.html",helpurlamp:"//"+j+"/design-tools/signal-chain-design/amplifiers.html",architect:"Architect",power:"WEBENCH&#174; Power Designer",sensors:"Sensors",led:"LED",fpga:"FPGA",amplifier:"Amplifier",fpgaup:"Multiple Loads",mfpgaup:"Multiple Loads for FPGA/&#181;P",enterreq:"Enter your power supply requirements:",vin:"Vin",output:"Output",vout:"Vout",iout:"Iout",ambienttemp:"Ambient Temp",min:"Min",max:"Max",multipleloads:"Multiple Loads",powerarch:"Power Architect",startdesign:"Start Design",btnfpgaarch:"FPGA Architect",btnuparch:"&micro;P Architect",configdriver:"Configure Driver Source",dc:"DC",ac:"AC",frequency:"Frequency",optemp:"Op. Temperature",optional:"Optional",desiredlightout:"Optional Light Output",lumens:"Lumens",createfpga:"Create your FPGA Power Supply System",createpower:"Create your Power Supply System",createup:"Create your Processor Power Supply System",step1:"Step 1",selectfpgamfg:"Select FPGA manufacturer",selectupmfg:"Select Processor manufacturer",all:"All",inductivesensing:"Inductive Sensing",positioncoil:"Position (Coil)",sensors:"Sensors",sensordesigner:"Sensor Designer",sensorAFE:"SensorAFE",sensordiscretesolution:"Discrete Solution",sensorintegratedconfig:"Integrated Config.",pressuresensor:"Pressure",thermocouplesensor:"Thermocouple",photosensor:"Photodiode",temperature:"Ambient Temp",rtd:"RTD",thermocouple:"Thermocouple",pressure:"Pressure",load:"Load",voltageoutput:"Voltage Output",gassensor:"Gas Sensor",fpgapower:"FPGA Power",processorpower:"Processor Power",co2:"CO2/Alcohol",ph:"pH",medicalAFE:"Medical AFE",ecg:"ECG",clocks:"Clocks",filters:"Filters",inductivesensing:"Inductive Sensing",positioncoil:"Position (Coil)",useautomotive:"Use Automotive Regulators",enterfreqreq:"Enter your frequency requirements",outputfreq:"Output frequency",tambient:"Tambient",lightoutput:"Light output",startfpgapowproj:"Start your Power Architect Project",startfpgampowproj:"Start your FPGA/&micro;P power project",selectactivefiltertype:"Select your active filter type",lowpass:"Lowpass",highpass:"Highpass",bandpass:"Bandpass",bandstop:"Bandstop",allpass:"Allpass",configsensordesign:"Configure your sensor design",vinrms:"Vin RMS (V)",reference:"Reference",wbinterface:"Interface",enterinterface:"Configure your interface design",enterreference:"Series Voltage Reference Selector",enteramp:"Select a topology",battery:"Battery Chargers",inputfrequency:"Input Frequency",isolatedout:"Isolated Output",selectasensors:"Select a Sensors Tool",inductivesensingdesigner:"Position Sensing",inductivesensingdesigner2:"On/ Off Sensing",sensorafe:"Sensor AFE",medicalafe:"Medical AFE",distance:"Distance",resolution:"Resolution",targetdiameter:"Target Diameter",targetmaterial:"Target Material",copper:"Copper",stainless:"Stainless",generic:"Generic",midchannel:"Mid Channel",timidchannel:"TI Mid Channel SigCon",nomidchannel:"No Mid Channel SigCon",maxdatarate:"Max Data Rate",devicemode:"Device Mode",differential:"Differential",singleended:"Single-Ended",findsolution:"Find Solution",enterbattery:"Enter your Li-Ion battery specifications",cellsinparallel:"Cells in Parallel",cellsinseries:"Cells in Series",cellcapacity:"Cell Capacity",totalcapacity:"Total Capacity",entercharger:"Charger Specifications",chargersource:"Charger Source",acadapter:"AC Adapter",custom:"Custom",vinMin:"VinMin",vinMax:"VinMax",iin:"Iin Max",vchg:"Vchg",ichg:"Ichg",fluidlevel:"Fluid Level Measurement",fluidid:"Fluid Identification",watergasheat:"Water/ Gas/ Heat Metering",poweredby:"Powered by",pbbattery:"Battery",pbplugin:"Plug-in",shape:"Shape",outerdiam:"Outer Diameter",turnsperlayer:"Turns per Layer",layers:"Layers",circular:"Circular",square:"Square",hexagonal:"Hexagonal",octagonal:"Octagonal",inductivepcbdesigner:"Coil Designer",tempsensoric:"Temperature Sensor IC",ultrasonicsensing:"Ultrasonic Sensing",capacitivesensing:"Capactive Sensing",sensordesigner:"Sensor Designer",switchingDist:"Switching Distance",closeTargDist:"Closest Target Distance",maxCoilDia:"Max Coil Dia",supplyVolt:"Supply Voltage",selectDevice:"Select a Device",maxSensDiam:"Max Sensor Diameter",minGroundDiam:"Min Ground Diameter",maxDist:"Max Distance",proxDist:"Proximity Distance",ampTopology:"Amplifier Topology",nonInv:"Non-inverting",inv:"Inverting",transimp:"Transimpedance",hoverMaxSensDiam:"Maximum diameter of sensor (Max W1)",hoverMinGroundDiam:"Minimum ground plate diameter (Min W2)",hoverMaxDist:"Max distance between sensor and ground plate (Max Y)",hoverProxDist:"Target Proximity Distance (Z)",hoverDistance:"Nominal distance at which resolution criteria is to be satisfied",hoverResolution:"Resolution at nominal distance",hoverTargetdiameter:"Diameter of target material"};
var d={lang:"en_US",navBGColor:"#cecece"},a={en_US:b,en_IN:b,es_MX:b,fr_FR:b,vi_VN:b,zh_CN:{ttcreatemulti:"###zh_CN.wbpanel.ttcreatemulti###",ttcreatesingle:"###zh_CN.wbpanel.ttcreatesingle###",ttcreatefpgaarch:"Create your FPGA power supply system",ttcreateuparch:"Create you processor power supply system",ttcreateclock:"Start your clock design",ttcreateled:"Create an LED power design",ttcreatesensor:"Create a Sensor design",ttfindsensor:"Find a temperature sensor part",ttcreatefilter:"Create a Filters design",moretools:"&#26356;&#22810;&#24037;&#20855;",helphover:"&#x70B9;&#x6B64;&#x83B7;&#x53D6;&#x5E2E;&#x52A9;",webenchurl:"//"+j+"/"+k+"/design-tools/overview.html",helpurl:"//webench.ti.com/help/",helpurlpower:"//"+j+"/"+k+"/design-tools/webench-power-design/power-designer.html",helpurlfpga:"//"+j+"/"+k+"/design-tools/webench-power-design/power-architect.html",helpurlled:"//"+j+"/"+k+"/design-tools/webench-power-design/led-architect.html",helpurlfilters:"//"+j+"/"+k+"/design-tools/signal-chain-design/webench-filters.html",helpurlclocks:"//"+j+"/"+k+"/design-tools/signal-chain-design/clock-architect.html",helpurlsensors:"//"+j+"/"+k+"/design-tools/signal-chain-design/sensors-overview.html",helpurlinterface:"//"+j+"/"+k+"/design-tools/signal-chain-design/interface.html",helpurlreference:"//"+j+"/"+k+"/design-tools/signal-chain-design/vref.html",helpurlbattery:"//"+j+"/"+k+"/design-tools/webench-power-design/battery-charger.html",helpurlamp:"//"+j+"/"+k+"/design-tools/signal-chain-design/amplifiers.html",architect:"Architect",power:"&#30005;&#28304;",sensors:"&#20256;&#24863;&#22120;",led:"LED",fpga:"FPGA",amplifier:"&#x653E;&#x5927;&#x5668;",fpgaup:"&#22810;&#20010;&#36127;&#36733;",mfpgaup:"&#36866;&#29992;&#20110; FPGA/&#181;P &#30340;&#22810;&#20010;&#36127;&#36733;",enterreq:"&#36755;&#20837;&#24744;&#30340;&#20379;&#30005;&#35201;&#27714;&#65306;",vin:"&#36755;&#20837;&#30005;&#21387;",output:"&#36755;&#20986;",vout:"Vout",iout:"Iout",ambienttemp:"&#29615;&#22659;&#28201;&#24230;",min:"Min",max:"Max",multipleloads:"&#22810;&#36127;&#36733;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;",powerarch:"&#30005;&#28304;&#26550;&#26500;",startdesign:"&#24320;&#22987;&#35774;&#35745;",btnfpgaarch:"FPGA &#26550;&#26500;",btnuparch:"&micro;P &#26550;&#26500;",configdriver:"&#37197;&#32622;&#39537;&#21160;&#22120;&#30005;&#28304;",dc:"DC",ac:"AC",frequency:"&#39057;&#29575;",optemp:"&#24037;&#20316;&#28201;&#24230;",optional:"&#21487;&#36873;",desiredlightout:"&#21487;&#36873;&#20809;&#36755;&#20986;",lumens:"&#27969;&#26126;",createfpga:"&#21019;&#24314;&#24744;&#30340;FPGA&#20379;&#30005;&#31995;&#32479;",createpower:"Create your Power Supply System",createup:"Create your Processor Power Supply System",step1:"&#31532;&#19968;&#27493;",selectfpgamfg:"&#36873;&#25321;FPGA&#30340;&#21046;&#36896;&#21830;",selectupmfg:"###zh_CN.wbpanel.selectupmfg###",all:"&#25152;&#26377;",inductivesensing:"&#30005;&#24863;&#24335;&#20256;&#24863;",positioncoil:"&#20301;&#32622;&#65288;&#32447;&#22280;&#65289;",sensors:"&#20256;&#24863;&#22120;",sensordesigner:"&#20256;&#24863;&#22120;&#35774;&#35745;&#24037;&#20855;",sensorAFE:"&#20256;&#24863;&#22120;AFE",sensordiscretesolution:"&#31163;&#25955;&#35299;&#20915;&#26041;&#26696;",sensorintegratedconfig:"&#38598;&#25104;&#37197;&#32622;",pressuresensor:"&#21387;&#21147;&#20256;&#24863;&#22120;",thermocouplesensor:"&#28909;&#30005;&#20598;&#20256;&#24863;&#22120;",photosensor:"&#20809;&#20108;&#26497;&#31649;",temperature:"&#28201;&#24230;",rtd:"&#28909;&#30005;&#38459;",thermocouple:"&#28909;&#30005;&#32806;",pressure:"&#21387;&#21147;&#20256;&#24863;&#22120;",load:"&#36127;&#36733;",voltageoutput:"&#30005;&#21387;&#36755;&#20986;",gassensor:"&#27668;&#20307;&#20256;&#24863;&#22120;",fpgapower:"FPGA &#30005;&#28304;",processorpower:"&#22788;&#29702;&#22120;&#30005;&#28304;",co2:"CO2/&#37202;&#31934;",ph:"pH",medicalAFE:"&#21307;&#30103; AFE",ecg:"ECG",clocks:"&#26102;&#38047;",filters:"&#28388;&#27874;&#22120;",inductivesensing:"&#30005;&#24863;&#24335;&#20256;&#24863;",positioncoil:"&#20301;&#32622;&#65288;&#32447;&#22280;&#65289;",useautomotive:"&#20351;&#29992;&#27773;&#36710;&#31283;&#21387;&#22120;",enterfreqreq:"&#36755;&#20837;&#24744;&#30340;&#39057;&#29575;&#35201;&#27714;",outputfreq:"&#36755;&#20986;&#39057;&#29575;",tambient:"&#29615;&#22659;",lightoutput:"&#20809;&#36755;&#20986;",startfpgapowproj:"&#24320;&#22987;&#24744;&#30340;&#30005;&#28304;&#26550;&#26500;&#39033;&#30446;",startfpgampowproj:"&#21551;&#21160;  FPGA/&#956;P &#30005;&#28304;&#39033;&#30446;",selectactivefiltertype:"&#36873;&#25321;&#26377;&#28304;&#28388;&#27874;&#22120;&#31867;&#22411;",lowpass:"&#20302;&#36890;",highpass:"&#39640;&#36890;",bandpass:"&#x5E26;&#x901A;",bandstop:"&#x5E26;&#x963B;",allpass:"&#x5168;&#x901A;",configsensordesign:"&#37197;&#32622;&#24744;&#30340;&#20256;&#24863;&#22120;&#35774;&#35745;",vinrms:"&#36755;&#20837;&#30005;&#21387; RMS (V)",reference:"&#x53C2;&#x8003;",wbinterface:"&#x63A5;&#x53E3;",enterinterface:"&#x8BBE;&#x7F6E;&#x60A8;&#x7684;&#x63A5;&#x53E3;&#x8BBE;&#x8BA1;",enterreference:"&#x4E32;&#x8054;&#x57FA;&#x51C6;&#x7535;&#x538B;&#x9009;&#x62E9;&#x5668;",enteramp:"&#x9009;&#x62E9;&#x4E00;&#x4E2A;&#x62D3;&#x6251;",battery:"&#x7535;&#x6C60;&#x5145;&#x7535;&#x5668;",inputfrequency:"&#x8F93;&#x5165;&#x9891;&#x7387;",isolatedout:"&#x9694;&#x79BB;&#x8F93;&#x51FA;",selectasensors:"&#x9009;&#x62E9;&#x4E00;&#x4E2A;&#x68C0;&#x6D4B;&#x5DE5;&#x5177;",inductivesensingdesigner:"&#x4F4D;&#x7F6E;&#x68C0;&#x6D4B;",inductivesensingdesigner2:"&#x5F00;&#x5173;&#x68C0;&#x6D4B;",sensorafe:"Sensor AFE",medicalafe:"Medical AFE",distance:"&#x8DDD;&#x79BB;",resolution:"&#x5206;&#x8FA8;&#x7387;",targetdiameter:"&#x76EE;&#x6807;&#x76F4;&#x5F84;",targetmaterial:"&#x76EE;&#x6807;&#x6750;&#x6599;",copper:"&#x6577;&#x94DC;",stainless:"&#x4E0D;&#x9508;&#x94A2;",configureinterface:"&#x8BBE;&#x7F6E;&#x4F60;&#x7684;&#x63A5;&#x53E3;&#x8BBE;&#x8BA1;&#x5E08;",generic:"&#x901A;&#x7528;",midchannel:"&#x4E2D;&#x6BB5;&#x901A;&#x9053;",timidchannel:"TI &#x4E2D;&#x6BB5;&#x901A;&#x9053;&#x4FE1;&#x53F7;&#x8C03;&#x8282;",nomidchannel:"&#x4E0D;&#x4F7F;&#x7528;&#x901A;&#x9053;&#x4E2D;&#x4FE1;&#x53F7;&#x8C03;&#x8282;",maxdatarate:"&#x6700;&#x5927;&#x6570;&#x636E;&#x7387;",devicemode:"&#x5668;&#x4EF6;&#x5DE5;&#x4F5C;&#x6A21;&#x5F0F;",differential:"&#x5DEE;&#x5206;",singleended:"&#x5355;&#x7AEF;",findsolution:"&#x67E5;&#x627E;&#x65B9;&#x6848;",enterbattery:"&#x8F93;&#x5165;&#x60A8;&#x7684;&#x9502;&#x79BB;&#x5B50;&#x7535;&#x6C60;&#x53C2;&#x6570;",cellsinparallel:"&#x5E76;&#x8054;&#x7535;&#x6C60;&#x5355;&#x5143;&#x4E2A;&#x6570;",cellsinseries:"&#x4E32;&#x8054;&#x7535;&#x6C60;&#x5355;&#x5143;&#x4E2A;&#x6570;",cellcapacity:"&#x5355;&#x5143;&#x5BB9;&#x91CF;",totalcapacity:"&#x603B;&#x5BB9;&#x91CF;",entercharger:"&#x5145;&#x7535;&#x5668;&#x53C2;&#x6570;",chargersource:"&#x5145;&#x7535;&#x5668;&#x7535;&#x6E90;",acadapter:"&#x4EA4;&#x6D41;&#x8F6C;&#x6362;&#x5668;",custom:"&#x81EA;&#x5B9A;&#x4E49;",vinMin:"&#x6700;&#x5C0F;&#x8F93;&#x5165;&#x7535;&#x538B;",vinMax:"&#x6700;&#x5927;&#x8F93;&#x5165;&#x7535;&#x538B;",iin:"&#x6700;&#x5927;&#x8F93;&#x5165;&#x7535;&#x6D41;",vchg:"&#x5145;&#x7535;&#x7535;&#x538B;",ichg:"&#x5145;&#x7535;&#x7535;&#x6D41;",fluidlevel:"&#x6DB2;&#x4F53;&#x6D4B;&#x91CF;",fluidid:"&#x6DB2;&#x4F53;&#x8BC6;&#x522B;",watergasheat:"&#x6C34;/&#x6C14;/&#x70ED;&#x8868;&#x8BA1;",poweredby:"&#x4F9B;&#x7535;&#x7C7B;&#x578B;",pbbattery:"&#x7535;&#x6C60;",pbplugin:"&#x5E02;&#x7535;",shape:"&#x5F62;&#x72B6;",outerdiam:"&#x5916;&#x5F84;",turnsperlayer:"&#x6BCF;&#x5C42;&#x5708;&#x6570;",layers:"&#x5C42;&#x6570;",circular:"&#x5706;&#x578B;",square:"&#x6B63;&#x65B9;&#x5F62;",hexagonal:"&#x516D;&#x8FB9;&#x5F62;",octagonal:"&#x516B;&#x8FB9;&#x5F62;",inductivepcbdesigner:"&#x7EBF;&#x5708;&#x8BBE;&#x8BA1;&#x5E08;",tempsensoric:"Temperature Sensor IC",ultrasonicsensing:"&#x8D85;&#x58F0;&#x6CE2;&#x68C0;&#x6D4B;",capacitivesensing:"&#x7535;&#x5BB9;&#x68C0;&#x6D4B;",sensordesigner:"&#x4F20;&#x611F;&#x5668;&#x8BBE;&#x8BA1;&#x5E08;",switchingDist:"&#x5F00;&#x5173;&#x8DDD;&#x79BB;",closeTargDist:"&#x76EE;&#x6807;&#x6700;&#x8FD1;&#x8DDD;&#x79BB;",maxCoilDia:"&#x6700;&#x5927;&#x7EBF;&#x5708;&#x76F4;&#x5F84;",supplyVolt:"&#x4F9B;&#x7535;&#x7535;&#x538B;",selectDevice:"&#x9009;&#x62E9;&#x4E00;&#x4E2A;&#x5668;&#x4EF6;",maxSensDiam:"&#x6700;&#x5927;&#x4F20;&#x611F;&#x5668;&#x76F4;&#x5F84;",minGroundDiam:"&#x6700;&#x5C0F;&#x63A5;&#x5730;&#x8DDD;&#x79BB;",maxDist:"&#x6700;&#x5927;&#x8DDD;&#x79BB;",proxDist:"&#x8DDD;&#x79BB;",ampTopology:"&#x653E;&#x5927;&#x5668;&#x62D3;&#x6251;",nonInv:"&#x975E;&#x53CD;&#x76F8;",inv:"&#x53CD;&#x76F8;",transimp:"&#x8F6C;&#x963B;",hoverMaxSensDiam:"Maximum diameter of sensor (Max W1)",hoverMinGroundDiam:"Minimum ground plate diameter (Min W2)",hoverMaxDist:"Max distance between sensor and ground plate (Max Y)",hoverProxDist:"Target Proximity Distance (Z)",hoverDistance:"Nominal distance at which resolution criteria is to be satisfied",hoverResolution:"Resolution at nominal distance",hoverTargetdiameter:"Diameter of target material"},zh_TW:{ttcreatemulti:"###zh_TW.wbpanel.ttcreatemulti###",ttcreatesingle:"###zh_TW.wbpanel.ttcreatesingle###",ttcreatefpgaarch:"Create your FPGA power supply system",ttcreateuparch:"Create you processor power supply system",ttcreateclock:"Start your clock design",ttcreateled:"Create an LED power design",ttcreatesensor:"Create a Sensor design",ttfindsensor:"Find a temperature sensor part",ttcreatefilter:"Create a Filters design",moretools:"&#26356;&#22810;&#24037;&#20855;",helphover:"Click for WEBENCH Help",webenchurl:"//www.ti.com/ww/tw/analog/webench/index.shtml",helpurl:"//www.ti.com/lsds/ti/analog/webench/help-overview.page",helpurlpower:"//www.ti.com/lsds/ti/analog/webench/help-overview.page",helpurlfpga:"//www.ti.com/design-tools/webench-power-design/power-architect.html",helpurlled:"//www.ti.com/lsds/ti/analog/webench/led-architect.page",helpurlfilters:"//www.ti.com/ww/tw/analog/webench/webench-filters.shtml",helpurlclocks:"//www.ti.com/ww/tw/analog/webench/clock_architect.html",helpurlsensors:"//www.ti.com/lsds/ti/analog/webench/sensors-overview.page",helpurlinterface:"//www.ti.com/lsds/ti/analog/webench/interface.page",helpurlreference:"//www.ti.com/lsds/ti/analog/webench/webench_vref_user_manual.page",helpurlbattery:"//www.ti.com/lsds/ti/analog/webench/battery-charger.page",helpurlamp:"//www.ti.com/lsds/ti/analog/webench/amplifiers.page",architect:"Architect",power:"&#38651;&#28304;",sensors:"&#24863;&#28204;&#22120;",led:"LED",fpga:"FPGA",amplifier:"Amplifier",fpgaup:"Multiple Loads",mfpgaup:"Multiple Loads for FPGA/&#181;P",enterreq:"&#36664;&#20837;&#24744;&#30340;&#38651;&#28304;&#35201;&#27714;&#65306;",vin:"&#36664;&#20837;&#38651;&#22739;",output:"&#36664;&#20986;",vout:"Vout",iout:"Iout",ambienttemp:"&#29872;&#22659;&#28331;&#24230;",min:"&#26368;&#23567;",max:"&#26368;&#22823;",multipleloads:"&#22810;&#36000;&#36617;",powerarch:"Power Architect",startdesign:"&#38283;&#22987;&#35373;&#35336;",btnfpgaarch:"FPGA Architect",btnuparch:"&micro;P Architect",configdriver:"&#37197;&#32622;&#39493;&#21205;&#22120;&#38651;&#28304;",dc:"DC",ac:"AC",frequency:"&#38971;&#29575;",optemp:"&#24037;&#20316;&#28331;&#24230;",optional:"&#21487;&#36984;",desiredlightout:"&#21487;&#36984;&#20809;&#36664;&#20986;",lumens:"&#27969;&#26126;",createfpga:"&#21109;&#24314;&#24744;&#30340;FPGA&#20379;&#38651;&#31995;&#32113;",createpower:"Create your Power Supply System",createup:"Create your Processor Power Supply System",step1:"&#31532;&#19968;&#27493;",selectfpgamfg:"&#36984;&#25799; FPGA&#30340;&#35069;&#36896;&#21830;",selectupmfg:"###zh_TW.wbpanel.selectupmfg###",all:"&#25152;&#26377;",inductivesensing:"Inductive Sensing",positioncoil:"Position (Coil)",sensors:"&#24863;&#28204;&#22120;",sensordesigner:"&#24863;&#28204;&#22120;&#35373;&#35336;&#24037;&#20855;",sensorAFE:"&#24863;&#28204;&#22120;&#39006;&#27604;&#21069;&#31471;",sensordiscretesolution:"&#38626;&#25955;&#35299;&#27770;&#26041;&#26696;",sensorintegratedconfig:"&#38598;&#25104;&#37197;&#32622;",pressuresensor:"&#22739;&#21147;&#24863;&#28204;&#22120;",thermocouplesensor:"&#29105;&#38651;&#32806;&#24863;&#28204;&#22120;",photosensor:"&#20809;&#20108;&#26997;&#39636;",temperature:"&#28331;&#24230;",rtd:"&#29105;&#38651;&#38459;",thermocouple:"&#29105;&#38651;&#32806;",pressure:"&#22739;&#21147;",load:"&#36000;&#36617;",voltageoutput:"&#38651;&#22739;&#36664;&#20986;",gassensor:"&#27683;&#39636;&#24863;&#28204;&#22120;",fpgapower:"FPGA &#38651;&#28304;",processorpower:"&#34389;&#29702;&#22120;&#38651;&#28304;",co2:"CO2/&#37202;&#31934;",ph:"pH",medicalAFE:"Medical AFE",ecg:"ECG",clocks:"Clocks",filters:"Filters",inductivesensing:"Inductive Sensing",positioncoil:"Position (Coil)",useautomotive:"&#20351;&#29992;&#27773;&#36554;&#31337;&#22739;&#22120;",enterfreqreq:"Enter your frequency requirements",outputfreq:"Output frequency",tambient:"Tambient",lightoutput:"Light output",startfpgapowproj:"Start your Power Architect Project",startfpgampowproj:"Start your FPGA/&micro;P power project",selectactivefiltertype:"Select your active filter type",lowpass:"Lowpass",highpass:"Highpass",bandpass:"Bandpass",bandstop:"Bandstop",allpass:"Allpass",configsensordesign:"Configure your sensor design",vinrms:"&#36664;&#20837;&#38651;&#22739; RMS (V)",reference:"Reference",wbinterface:"Interface",enterinterface:"Configure your interface design",enterreference:"Series Voltage Reference Selector",enteramp:"Select a topology",battery:"Battery Chargers",inputfrequency:"Input Frequency",isolatedout:"Isolated Output",selectasensors:"Select a Sensors Tool",inductivesensingdesigner:"Position Sensing",inductivesensingdesigner2:"On/ Off Sensing",sensorafe:"Sensor AFE",medicalafe:"Medical AFE",distance:"Distance",resolution:"Resolution",targetdiameter:"Target Diameter",targetmaterial:"Target Material",copper:"Copper",stainless:"Stainless",configureinterface:"Configure your interface design",generic:"Generic",midchannel:"Mid Channel",timidchannel:"TI Mid Channel SigCon",nomidchannel:"No Mid Channel SigCon",maxdatarate:"Max Data Rate",devicemode:"Device Mode",differential:"Differential",singleended:"Single-Ended",findsolution:"Find Solution",enterbattery:"Enter your Li-Ion battery specifications",cellsinparallel:"Cells in Parallel",cellsinseries:"Cells in Series",cellcapacity:"Cell Capacity",totalcapacity:"Total Capacity",entercharger:"Charger Specifications",chargersource:"Charger Source",acadapter:"AC Adapter",custom:"Custom",vinMin:"VinMin",vinMax:"VinMax",iin:"Iin Max",vchg:"Vchg",ichg:"Ichg",fluidlevel:"Fluid Level Measurement",fluidid:"Fluid Identification",watergasheat:"Water/ Gas/ Heat Metering",poweredby:"Powered by",pbbattery:"Battery",pbplugin:"Plug-in",shape:"Shape",outerdiam:"Outer Diameter",turnsperlayer:"Turns per Layer",layers:"Layers",circular:"Circular",square:"Square",hexagonal:"Hexagonal",octagonal:"Octagonal",inductivepcbdesigner:"Coil Designer",tempsensoric:"Temperature Sensor IC",ultrasonicsensing:"Ultrasonic Sensing",capacitivesensing:"Capactive Sensing",sensordesigner:"Sensor Designer",switchingDist:"Switching Distance",closeTargDist:"Closest Target Distance",maxCoilDia:"Max Coil Dia",supplyVolt:"Supply Voltage",selectDevice:"Select a Device",maxSensDiam:"Max Sensor Diameter",minGroundDiam:"Min Ground Diameter",maxDist:"Max Distance",proxDist:"Proximity Distance",ampTopology:"Amplifier Topology",nonInv:"Non-inverting",inv:"Inverting",transimp:"Transimpedance",hoverMaxSensDiam:"Maximum diameter of sensor (Max W1)",hoverMinGroundDiam:"Minimum ground plate diameter (Min W2)",hoverMaxDist:"Max distance between sensor and ground plate (Max Y)",hoverProxDist:"Target Proximity Distance (Z)",hoverDistance:"Nominal distance at which resolution criteria is to be satisfied",hoverResolution:"Resolution at nominal distance",hoverTargetdiameter:"Diameter of target material"},ja_JP:{ttcreatemulti:"Create a power supply system with multiple Loads",ttcreatesingle:"Create a power supply design with single output",ttcreatefpgaarch:"Create an FPGA power supply system",ttcreateuparch:"Create a processor power supply system",ttcreateclock:"Create a clock design",ttcreateled:"Create an LED power design",ttcreatesensor:"Create a sensor design",ttfindsensor:"Find a temperature sensor part",ttcreatefilter:"Create a filter design",moretools:"&#12484;&#12540;&#12523;&#36984;&#25246;",helphover:"Click for WEBENCH Help",webenchurl:"//"+j+"/"+k+"/design-tools/overview.html",helpurl:"//webench.ti.com/help/",helpurlpower:"//"+j+"/"+k+"/design-tools/webench-power-design/power-designer.html",helpurlfpga:"//"+j+"/"+k+"/design-tools/webench-power-design/power-architect.html",helpurlled:"//"+j+"/"+k+"/design-tools/webench-power-design/led-architect.html",helpurlfilters:"//"+j+"/"+k+"/design-tools/signal-chain-design/webench-filters.html",helpurlclocks:"//"+j+"/"+k+"/design-tools/signal-chain-design/clock-architect.html",helpurlsensors:"//"+j+"/"+k+"/design-tools/signal-chain-design/sensors-overview.html",helpurlinterface:"//"+j+"/"+k+"/design-tools/signal-chain-design/interface.html",helpurlreference:"//"+j+"/"+k+"/design-tools/signal-chain-design/vref.html",helpurlbattery:"//"+j+"/"+k+"/design-tools/webench-power-design/battery-charger.html",helpurlamp:"//"+j+"/"+k+"/design-tools/signal-chain-design/amplifiers.html",architect:"Architect",power:"&#38651;&#28304;",sensors:"&#12475;&#12531;&#12469;",led:"LED",fpga:"FPGA",amplifier:"&#x30A2;&#x30F3;&#x30D7;",fpgaup:"&#35079;&#25968;&#36000;&#33655;",mfpgaup:"FPGA / &#12510;&#12452;&#12463;&#12525;&#12503;&#12525;&#12475;&#12483;&#12469;&#21521;&#12369;&#12398;&#35079;&#25968;&#12398;&#36000;&#33655;",enterreq:"&#36000;&#33655;&#12364;&#21336;&#19968;&#26178;&#12398;&#38651;&#28304;&#35201;&#20214;&#12434;&#20837;&#21147;:",vin:"&#20837;&#21147;&#38651;&#22311;",output:"&#20986;&#21147;",vout:"&#20986;&#21147;&#38651;&#22311;",iout:"&#36000;&#33655;&#38651;&#27969;",ambienttemp:"&#21608;&#22258;&#28201;&#24230;",min:"&#26368;&#23567;",max:"&#26368;&#22823;",multipleloads:"&#36000;&#33655;&#12364;&#35079;&#25968;&#26178;",powerarch:"Power Architect",startdesign:"&#35373;&#35336;&#12434;&#38283;&#22987;",btnfpgaarch:"FPGA Architect",btnuparch:"&micro;P Architect",configdriver:"&#30452;&#27969;&#12539;&#20132;&#27969;&#12398;&#36984;&#25246;",dc:"DC",ac:"AC",frequency:"&#21608;&#27874;&#25968;",optemp:"&#21205;&#20316;&#28201;&#24230;",optional:"&#12458;&#12503;&#12471;&#12519;&#12531;",desiredlightout:"Optional Light Output",lumens:"&#12523;&#12540;&#12513;&#12531;",createfpga:"FPGA&#38651;&#28304;&#12471;&#12473;&#12486;&#12512;&#12434;&#35373;&#35336;",createpower:"Create your Power Supply System",createup:"Create your Processor Power Supply System",step1:"&#12473;&#12486;&#12483;&#12503;1",selectfpgamfg:"FPGA&#12513;&#12540;&#12459;&#12540;&#12434;&#36984;&#25246;",selectupmfg:"###ja_JP.wbpanel.selectupmfg###",all:"&#12377;&#12409;&#12390;",inductivesensing:"&#35480;&#23566;&#22411;&#36817;&#25509;&#12475;&#12531;&#12469;",positioncoil:"&#20301;&#32622;&#65288;&#12467;&#12452;&#12523;&#65289;",sensors:"&#12475;&#12531;&#12469;",sensordesigner:"Sensor Designer",sensorAFE:"Sensor AFE",sensordiscretesolution:"&#12487;&#12451;&#12473;&#12463;&#12522;&#12540;&#12488;&#29256;",sensorintegratedconfig:"&#27231;&#33021;&#38598;&#31309;&#29256;",pressuresensor:"&#22311;&#21147;",thermocouplesensor:"&#29105;&#38651;&#23550;",photosensor:"&#12501;&#12457;&#12488;&#12480;&#12452;&#12458;&#12540;&#12489;",temperature:"&#28201;&#24230;",rtd:"RTD",thermocouple:"&#29105;&#38651;&#23550;",pressure:"&#22311;&#21147;",load:"&#12525;&#12540;&#12489;&#12475;&#12523;",voltageoutput:"&#38651;&#22311;&#20986;&#21147;",gassensor:"&#12460;&#12473;&#12539;&#12475;&#12531;&#12469;",fpgapower:"FPGA&#38651;&#28304;",processorpower:"&#12503;&#12525;&#12475;&#12483;&#12469;&#38651;&#28304;",co2:"CO2/&#12450;&#12523;&#12467;&#12540;&#12523;",ph:"pH",medicalAFE:"Medical AFE",ecg:"&#24515;&#38651;&#35336;",clocks:"&#12463;&#12525;&#12483;&#12463;",filters:"&#12501;&#12451;&#12523;&#12479;",inductivesensing:"&#35480;&#23566;&#22411;&#36817;&#25509;&#12475;&#12531;&#12469;",positioncoil:"&#20301;&#32622;&#65288;&#12467;&#12452;&#12523;&#65289;",useautomotive:"&#12458;&#12540;&#12488;&#12514;&#12540;&#12486;&#12451;&#12502;&#12539;&#12524;&#12462;&#12517;&#12524;&#12540;&#12479;&#12434;&#20351;&#29992;",enterfreqreq:"&#21608;&#27874;&#25968;&#35201;&#20214;&#12434;&#20837;&#21147;",outputfreq:"&#20986;&#21147;&#21608;&#27874;&#25968;",tambient:"&#21608;&#22258;&#28201;&#24230;",lightoutput:"&#20809;&#20986;&#21147;",startfpgapowproj:"Power Architect &#12503;&#12525;&#12472;&#12455;&#12463;&#12488;&#12398;&#38283;&#30330;&#12434;&#38283;&#22987;",startfpgampowproj:"FPGA/&#956;P &#29992;&#38651;&#28304;&#22238;&#36335;&#12398;&#35373;&#35336;&#12434;&#38283;&#22987;",selectactivefiltertype:"&#12450;&#12463;&#12486;&#12451;&#12502;&#12539;&#12501;&#12451;&#12523;&#12479;&#12434;&#36984;&#25246;",lowpass:"&#12525;&#12540;&#12497;&#12473;&#12539;&#12501;&#12451;&#12523;&#12479;",highpass:"&#12495;&#12452;&#12497;&#12473;&#12539;&#12501;&#12451;&#12523;&#12479;",bandpass:"&#x30D0;&#x30F3;&#x30C9;&#x30D1;&#x30B9;&#x30FB;&#x30D5;&#x30A3;&#x30EB;&#x30BF;",bandstop:"&#x30D0;&#x30F3;&#x30C9;&#x30B9;&#x30C8;&#x30C3;&#x30D7;&#x30FB;&#x30D5;&#x30A3;&#x30EB;&#x30BF;",allpass:"&#x30AA;&#x30FC;&#x30EB;&#x30D1;&#x30B9;&#x30FB;&#x30D5;&#x30A3;&#x30EB;&#x30BF;",configsensordesign:"&#12475;&#12531;&#12469;&#35373;&#35336;&#12434;&#27083;&#25104;",vinrms:"&#20837;&#21147;&#38651;&#22311; RMS (V)",reference:"&#x30EA;&#x30D5;&#x30A1;&#x30EC;&#x30F3;&#x30B9;",wbinterface:"&#x30A4;&#x30F3;&#x30BF;&#x30FC;&#x30D5;&#x30A7;&#x30A4;&#x30B9;",enterinterface:"&#x30A4;&#x30F3;&#x30BF;&#x30FC;&#x30D5;&#x30A7;&#x30A4;&#x30B9;&#x8A2D;&#x8A08;&#x3092;&#x69CB;&#x6210;",enterreference:"&#x30B7;&#x30EA;&#x30FC;&#x30BA;&#x96FB;&#x5727;&#x30EA;&#x30D5;&#x30A1;&#x30EC;&#x30F3;&#x30B9;&#x30FB;&#x30BB;&#x30EC;&#x30AF;&#x30BF;",enteramp:"&#12488;&#12509;&#12525;&#12472;&#12398;&#36984;&#25246;",battery:"&#x30D0;&#x30C3;&#x30C6;&#x30EA;&#x30FB;&#x30C1;&#x30E3;&#x30FC;&#x30B8;&#x30E3;",inputfrequency:"&#x5165;&#x529B;&#x5468;&#x6CE2;&#x6570;",isolatedout:"&#x7D76;&#x7E01;&#x578B;&#x51FA;&#x529B;",selectasensors:"&#x30BB;&#x30F3;&#x30B5;&#x30C4;&#x30FC;&#x30EB;&#x3092;&#x9078;&#x629E;",inductivesensingdesigner:"Position Sensing",inductivesensingdesigner2:"On/ Off Sensing",sensorafe:"Sensor AFE",medicalafe:"Medical AFE",distance:"&#x8DDD;&#x96E2;",resolution:"&#x5206;&#x89E3;&#x80FD;",targetdiameter:"&#x76F4;&#x5F84;",targetmaterial:"&#x6750;&#x8CEA;",copper:"&#x9285;",stainless:"&#x30B9;&#x30C6;&#x30F3;&#x30EC;&#x30B9;",generic:"&#x6C4E;&#x7528;",midchannel:"&#x30DF;&#x30C3;&#x30C9;&#x30FB;&#x30C1;&#x30E3;&#x30CD;&#x30EB;",timidchannel:"TI &#x30B7;&#x30B0;&#x30CA;&#x30EB;&#x30FB;&#x30B3;&#x30F3;&#x30C7;&#x30A3;&#x30B7;&#x30E7;&#x30CA;",nomidchannel:"&#x305D;&#x306E;&#x4ED6;&#x30B7;&#x30B0;&#x30CA;&#x30EB;&#x30FB;&#x30B3;&#x30F3;&#x30C7;&#x30A3;&#x30B7;&#x30E7;&#x30CA;",maxdatarate:"&#26368;&#22823;&#12487;&#12540;&#12479;&#12539;<br>&#12524;&#12540;&#x30C8;",devicemode:"&#x30C7;&#x30D0;&#x30A4;&#x30B9;&#x30FB;&#x30E2;&#x30FC;&#x30C9;",differential:"&#x5DEE;&#x52D5;",singleended:"&#x30B7;&#x30F3;&#x30B0;&#x30EB;&#x30FB;&#x30A8;&#x30F3;&#x30C9;",findsolution:"&#x30BD;&#x30EA;&#x30E5;&#x30FC;&#x30B7;&#x30E7;&#x30F3;&#x3092;&#x691C;&#x7D22;",enterbattery:"Li-Ion &#x30D0;&#x30C3;&#x30C6;&#x30EA;&#x4ED5;&#x69D8; &#x3092;&#x5165;&#x529B;",cellsinparallel:"&#x4E26;&#x5217;&#x30BB;&#x30EB;",cellsinseries:"&#x76F4;&#x5217;&#x30BB;&#x30EB;",cellcapacity:"&#x30BB;&#x30EB;&#x30FB;&#x30AD;&#x30E3;&#x30D1;&#x30B7;&#x30C6;&#x30A3;",totalcapacity:"&#x5408;&#x8A08;&#x30AD;&#x30E3;&#x30D1;&#x30B7;&#x30C6;&#x30A3;",entercharger:"&#x30C1;&#x30E3;&#x30FC;&#x30B8;&#x30E3;&#x4ED5;&#x69D8; &#x3092;&#x5165;&#x529B;",chargersource:"&#x30C1;&#x30E3;&#x30FC;&#x30B8;&#x30E3;&#x30FB;&#x30BD;&#x30FC;&#x30B9;",acadapter:"AC &#x30A2;&#x30C0;&#x30D7;&#x30BF;",custom:"&#x30AB;&#x30B9;&#x30BF;&#x30E0;",vinMin:"&#x5165;&#x529B;&#x96FB;&#x5727;&#xFF08;&#x6700;&#x5C0F;&#xFF09;",vinMax:"&#x5165;&#x529B;&#x96FB;&#x5727;&#xFF08;&#x6700;&#x5927;&#xFF09;",iin:"&#20837;&#21147;&#38651;&#27969;&#65288;&#26368;&#22823;&#65289;",vchg:"&#x5145;&#x96FB;&#x96FB;&#x5727;",ichg:"&#x5145;&#x96FB;&#x96FB;&#x6D41;",fluidlevel:"&#28082;&#38754;&#28204;&#23450;",fluidid:"&#28082;&#20307;&#35672;&#21029;&#28204;&#23450;",watergasheat:"&#27700;/&#12460;&#12473;/&#29105;&#12398;&#28204;&#23450;",poweredby:"&#38651;&#28304;",pbbattery:"&#12496;&#12483;&#12486;&#12522;",pbplugin:"&#12503;&#12521;&#12464;&#12452;&#12531;",shape:"&#24418;&#29366;",outerdiam:"&#22806;&#24452;",turnsperlayer:"1 &#23652;&#12398;&#24059;&#12365;&#25968;",layers:"&#23652;&#25968;",circular:"&#20870;&#24418;",square:"&#27491;&#26041;&#24418;",hexagonal:"&#20845;&#35282;&#24418;",octagonal:"&#20843;&#35282;&#24418;",inductivepcbdesigner:"Coil Designer",tempsensoric:"Temperature Sensor IC",ultrasonicsensing:"Ultrasonic Sensing",capacitivesensing:"Capactive Sensing",sensordesigner:"Sensor Designer",switchingDist:"&#12473;&#12452;&#12483;&#12481;&#12531;&#12464;&#36317;&#38626;",closeTargDist:"&#26368;&#30701;&#27161;&#30340;&#36317;&#38626;",maxCoilDia:"&#26368;&#22823;&#12467;&#12452;&#12523;&#30452;&#24452;",supplyVolt:"&#38651;&#28304;&#38651;&#22311;",selectDevice:"&#35069;&#21697;&#12434;&#36984;&#25246;",maxSensDiam:"&#26368;&#22823;&#12475;&#12531;&#12469;&#30452;&#24452;",minGroundDiam:"&#26368;&#23567;&#12464;&#12521;&#12531;&#12489;&#30452;&#24452;",maxDist:"&#26368;&#22823;&#36317;&#38626;",proxDist:"&#36817;&#25509;&#36317;&#38626;",ampTopology:"&#12450;&#12531;&#12503;&#12539;&#12488;&#12509;&#12525;&#12472;",nonInv:"&#38750;&#21453;&#36578;",inv:"&#21453;&#36578;",transimp:"&#12488;&#12521;&#12531;&#12473;&#12452;&#12531;&#12500;&#12540;&#12480;&#12531;&#12473;",hoverMaxSensDiam:"Maximum diameter of sensor (Max W1)",hoverMinGroundDiam:"Minimum ground plate diameter (Min W2)",hoverMaxDist:"Max distance between sensor and ground plate (Max Y)",hoverProxDist:"Target Proximity Distance (Z)",hoverDistance:"Nominal distance at which resolution criteria is to be satisfied",hoverResolution:"Resolution at nominal distance",hoverTargetdiameter:"Diameter of target material"},de_DE:{ttcreatemulti:"Ein Spannungsversorgungssystem mit Mehrfachlasten erstellen",ttcreatesingle:"Ein Spannungsversorgungssystem mit einfachem Ausgang erstellen",ttcreatefpgaarch:"Create an FPGA power supply system",ttcreateuparch:"Create a processor power supply system",ttcreateclock:"Create a clock design",ttcreateled:"Create an LED power design",ttcreatesensor:"Create a sensor design",ttfindsensor:"Find a temperature sensor part",ttcreatefilter:"Create a filter design",moretools:"Mehr Tools",helphover:"Klicken für WEBENCH-Hilfe",webenchurl:"//"+j+"/"+k+"/design-tools/overview.html",helpurl:"//webench.ti.com/help/",helpurlpower:"//"+j+"/"+k+"/design-tools/webench-power-design/power-designer.html",helpurlfpga:"//"+j+"/"+k+"/design-tools/webench-power-design/power-architect.html",helpurlled:"//"+j+"/"+k+"/design-tools/webench-power-design/led-architect.html",helpurlfilters:"//"+j+"/"+k+"/design-tools/signal-chain-design/webench-filters.html",helpurlclocks:"//"+j+"/"+k+"/design-tools/signal-chain-design/clock-architect.html",helpurlsensors:"//"+j+"/"+k+"/design-tools/signal-chain-design/sensors-overview.html",helpurlinterface:"//"+j+"/"+k+"/design-tools/signal-chain-design/interface.html",helpurlreference:"//"+j+"/"+k+"/design-tools/signal-chain-design/vref.html",helpurlbattery:"//"+j+"/"+k+"/design-tools/webench-power-design/battery-charger.html",helpurlamp:"//"+j+"/"+k+"/design-tools/signal-chain-design/amplifiers.html",architect:"Architect",power:"WEBENCH&#174; Power Designer",sensors:"Sensoren",led:"LED",fpga:"FPGA",amplifier:"Verstärker",fpgaup:"Mehrere Stromverbraucher",mfpgaup:"Mehrere Stromverbraucher f&#252;r FPGA/&#181;P",enterreq:"Anforderungen an Spannungsversorgung",vin:"Vin",output:"Ausgang",vout:"Vout",iout:"Iout",ambienttemp:"Umgebungstemp.",min:"Min",max:"Max",multipleloads:"Mehrfachlasten",powerarch:"Power Architect",startdesign:"Design starten",btnfpgaarch:"FPGA Architect",btnuparch:"&micro;P Architect",configdriver:"Spannungsquelle",dc:"DC",ac:"AC",frequency:"Frequency",optemp:"Betr.Temperatur",optional:"Optional",desiredlightout:"Optionale Lichtabgabe",lumens:"Lumen",createfpga:"FPGA-Spannungsversorgungssystem erstellen",createpower:"Create your Power Supply System",createup:"Prozessor-Spannungsversorgungssystem erstellen",step1:"Step 1",selectfpgamfg:"Select FPGA manufacturer",selectupmfg:"Select Processor manufacturer",all:"Alle",inductivesensing:"Inductive Sensing",positioncoil:"Position (Coil)",sensors:"Sensoren",sensordesigner:"Sensor-Designer",sensorAFE:"Sensor-AFE",sensordiscretesolution:"Discrete Solution",sensorintegratedconfig:"Integrated Config.",pressuresensor:"Druck",thermocouplesensor:"Thermoelement",photosensor:"Fotodiode",temperature:"Temperatur",rtd:"RTD",thermocouple:"Thermoelement",pressure:"Druck",load:"W&#228;gezelle",voltageoutput:"Spannungsausg.",gassensor:"Gassensor",fpgapower:"FPGA-Power",processorpower:"Prozessorleistung",co2:"CO2/Alcohol",ph:"pH",medicalAFE:"Medizintechnik-AFE",ecg:"ECG",clocks:"Zeitgeber",filters:"Filter",inductivesensing:"Inductive Sensing",positioncoil:"Position (Coil)",useautomotive:"Regler f&#252;r Automobilanwendungen verwenden",enterfreqreq:"Frequenzanforderungen festlegen",outputfreq:"Ausgangsfrequenz",tambient:"Tambient",lightoutput:"Light output",startfpgapowproj:"Starten Sie Ihr Power Architect-Projekt",startfpgampowproj:"Start your FPGA/&micro;P power project",selectactivefiltertype:"Aktiven Filtertyp auswählen",lowpass:"Tiefpass",highpass:"Hochpass",bandpass:"Bandpass",bandstop:"Bandsperre",allpass:"Allpass",configsensordesign:"Sensordesign konfigurieren",vinrms:"Vin RMS (V)",reference:"Referenz",wbinterface:"Schnittstelle",enterinterface:"Interface Designer individuell konfigurieren",enterreference:"Serien-Spannungsreferenz-Auswahltool",enteramp:"Topologie auswählen",battery:"Batterielader",inputfrequency:"Eingangsfrequenz",isolatedout:"Isolierter Ausgang",selectasensors:"Wählen Sie ein Sensing-Tool aus",inductivesensingdesigner:"Positionserfassung",inductivesensingdesigner2:"Erkennung von Ein/Aus",sensorafe:"Sensor AFE",medicalafe:"Medical AFE",distance:"Abstand",resolution:"Auflösung",targetdiameter:"Targetdurchmesser",targetmaterial:"Targetmaterial",copper:"Kupfer",stainless:"Korrosionsbeständig",configureinterface:"Configure your interface design",generic:"Allgemein",midchannel:"Mittenkanal",timidchannel:"TI Mittenkanal-SigCon",nomidchannel:"Keine Mittenkanal-SigCon",maxdatarate:"Max. Datenrate",devicemode:"Gerätemodus",differential:"Differenziell",singleended:"Unsymmetrisch",findsolution:"Lösung finden",enterbattery:"Spezifikation der Lithium-Ionen-Batterie eingeben",cellsinparallel:"Zellen parallel",cellsinseries:"Zellen in Reihe",cellcapacity:"Zellenkapazität",totalcapacity:"Gesamtkapazität",entercharger:"Ladegerätespezifikationen",chargersource:"Laderquelle",acadapter:"AC-Adapter",custom:"Benutzerspezifisch",vinMin:"VinMin",vinMax:"VinMax",iin:"Iin Max",vchg:"Vchg",ichg:"Ichg",fluidlevel:"Fluidmessung",fluidid:"Fluididentifizierung",watergasheat:"Messung von Wasser/Gas/WÃ¤rme",poweredby:"Gespeist durch",pbbattery:"Batterie",pbplugin:"Plug-in",shape:"Form",outerdiam:"Außendurchmesser",turnsperlayer:"Windungen pro Lage",layers:"Lagen",circular:"Kreisförmig",square:"Quadratisch",hexagonal:"Sechseckig",octagonal:"Achteckig",inductivepcbdesigner:"Spulen-Designer",tempsensoric:"Temperature Sensor IC",ultrasonicsensing:"Ultraschallsensorik",capacitivesensing:"Kapazitive Sensorik",sensordesigner:"Sensor Designer",switchingDist:"Schaltabstand",closeTargDist:"Kleinster Targetabstand",maxCoilDia:"Max. Spulendurchm.",supplyVolt:"Versorgungsspannung",selectDevice:"Baustein auswählen",maxSensDiam:"Max. Sensordurchmesser",minGroundDiam:"Min. Bodenabstand",maxDist:"Max. Abstand",proxDist:"Näherungsabstand",ampTopology:"Verstärkertopologie",nonInv:"Nicht invertierend",inv:"Invertierend",transimp:"Transimpedanz",hoverMaxSensDiam:"Maximaler Sensordurchmesser (max. W1)",hoverMinGroundDiam:"Minimaler Durchmesser der Grundplatte (min. W2)",hoverMaxDist:"Max. Entfernung zwischen Sensor und Grundplatte (max. Y)",hoverProxDist:"Angestrebte Näherungsentfernung (Z)",hoverDistance:"Nominale Entfernung, an der das Auflösungskriterium erfüllt sein soll",hoverResolution:"Auflösung bei nominaler Entfernung",hoverTargetdiameter:"Durchmesser des Targetmaterials"},it_IT:{ttcreatemulti:"Create a power supply system with multiple Loads",ttcreatesingle:"Create a power supply design with single output",ttcreatefpgaarch:"Create an FPGA power supply system",ttcreateuparch:"Create a processor power supply system",ttcreateclock:"Create a clock design",ttcreateled:"Create an LED power design",ttcreatesensor:"Create a sensor design",ttfindsensor:"Find a temperature sensor part",ttcreatefilter:"Create a filter design",moretools:"Altri Strumenti",helphover:"Click for WEBENCH Help",webenchurl:"//www.ti.com/ww/it/analog/webench/index.shtml",helpurl:"//www.ti.com/lsds/ti/analog/webench/help-overview.page",helpurlpower:"//www.ti.com/lsds/ti/analog/webench/help-overview.page",helpurlfpga:"//www.ti.com/design-tools/webench-power-design/power-architect.html",helpurlled:"//www.ti.com/lsds/ti/analog/webench/led-architect.page",helpurlfilters:"//www.ti.com/ww/it/analog/webench/webench-filters.shtml",helpurlclocks:"//www.ti.com/ww/it/analog/webench/clock-architect.html",helpurlsensors:"//www.ti.com/ww/it/analog/webench/sensors/index.shtml",helpurlinterface:"//www.ti.com/lsds/ti/analog/webench/interface.page",helpurlreference:"//www.ti.com/lsds/ti/analog/webench/webench_vref_user_manual.page",helpurlbattery:"//www.ti.com/lsds/ti/analog/webench/battery-charger.page",helpurlamp:"//www.ti.com/lsds/ti/analog/webench/amplifiers.page",architect:"Architect",power:"WEBENCH&#174; Power Designer",sensors:"Sensors",led:"LED",fpga:"FPGA",amplifier:"Amplifier",fpgaup:"Multiple Loads",mfpgaup:"Multiple Loads for FPGA/&#181;P",enterreq:"Enter your power supply requirements:",vin:"Vin",output:"Output",vout:"Vout",iout:"Iout",ambienttemp:"Ambient Temp",min:"Min",max:"Max",multipleloads:"Multiple Loads",powerarch:"Power Architect",startdesign:"Start Design",btnfpgaarch:"FPGA Architect",btnuparch:"&micro;P Architect",configdriver:"Configure Driver Source",dc:"DC",ac:"AC",frequency:"Frequency",optemp:"Op. Temperature",optional:"Optional",desiredlightout:"Optional Light Output",lumens:"Lumens",createfpga:"Create your FPGA Power Supply System",createpower:"Create your Power Supply System",createup:"Create your Processor Power Supply System",step1:"Step 1",selectfpgamfg:"Select FPGA manufacturer",selectupmfg:"Select Processor manufacturer",all:"All",inductivesensing:"Inductive Sensing",positioncoil:"Position (Coil)",sensors:"Sensors",sensordesigner:"Sensor Designer",sensorAFE:"SensorAFE",sensordiscretesolution:"Discrete Solution",sensorintegratedconfig:"Integrated Config.",pressuresensor:"Pressure",thermocouplesensor:"Thermocouple",photosensor:"Photodiode",temperature:"Temperature",rtd:"RTD",thermocouple:"Thermocouple",pressure:"Pressure",load:"Load",voltageoutput:"Voltage Output",gassensor:"Gas Sensor",fpgapower:"FPGA Power",processorpower:"Processor Power",co2:"CO2/Alcohol",ph:"pH",medicalAFE:"Medical AFE",ecg:"ECG",clocks:"Clocks",filters:"Filters",inductivesensing:"Inductive Sensing",positioncoil:"Position (Coil)",useautomotive:"Use Automotive Regulators",enterfreqreq:"Enter your frequency requirements",outputfreq:"Output frequency",tambient:"Tambient",lightoutput:"Light output",startfpgapowproj:"Start your Power Architect Project",startfpgampowproj:"Start your FPGA/&micro;P power project",selectactivefiltertype:"Select your active filter type",lowpass:"Lowpass",highpass:"Highpass",bandpass:"Bandpass",bandstop:"Bandstop",allpass:"Allpass",configsensordesign:"Configure your sensor design",vinrms:"Vin RMS (V)",reference:"Reference",wbinterface:"Interface",enterinterface:"Configure your interface design",enterreference:"Series Voltage Reference Selector",enteramp:"Select a topology",battery:"Battery Chargers",inputfrequency:"Input Frequency",isolatedout:"Isolated Output",selectasensors:"Select a Sensors Tool",inductivesensingdesigner:"Position Sensing",inductivesensingdesigner2:"On/ Off Sensing",sensorafe:"Sensor AFE",medicalafe:"Medical AFE",distance:"Distance",resolution:"Resolution",targetdiameter:"Target Diameter",targetmaterial:"Target Material",copper:"Copper",stainless:"Stainless",configureinterface:"Configure your interface design",generic:"Generic",midchannel:"Mid Channel",timidchannel:"TI Mid Channel SigCon",nomidchannel:"No Mid Channel SigCon",maxdatarate:"Max Data Rate",devicemode:"Device Mode",differential:"Differential",singleended:"Single-Ended",findsolution:"Find Solution",enterbattery:"Enter your Li-Ion battery specifications",cellsinparallel:"Cells in Parallel",cellsinseries:"Cells in Series",cellcapacity:"Cell Capacity",totalcapacity:"Total Capacity",entercharger:"Charger Specifications",chargersource:"Charger Source",acadapter:"AC Adapter",custom:"Custom",vinMin:"VinMin",vinMax:"VinMax",iin:"Iin Max",vchg:"Vchg",ichg:"Ichg",fluidlevel:"Fluid Level Measurement",fluidid:"Fluid Identification",watergasheat:"Water/ Gas/ Heat Metering",poweredby:"Powered by",pbbattery:"Battery",pbplugin:"Plug-in",shape:"Shape",outerdiam:"Outer Diameter",turnsperlayer:"Turns per Layer",layers:"Layers",circular:"Circular",square:"Square",hexagonal:"Hexagonal",octagonal:"Octagonal",inductivepcbdesigner:"Coil Designer",tempsensoric:"Temperature Sensor IC",ultrasonicsensing:"Ultrasonic Sensing",capacitivesensing:"Capactive Sensing",sensordesigner:"Sensor Designer",switchingDist:"Switching Distance",closeTargDist:"Closest Target Distance",maxCoilDia:"Max Coil Dia",supplyVolt:"Supply Voltage",selectDevice:"Select a Device",maxSensDiam:"Max Sensor Diameter",minGroundDiam:"Min Ground Diameter",maxDist:"Max Distance",proxDist:"Proximity Distance",ampTopology:"Amplifier Topology",nonInv:"Non-inverting",inv:"Inverting",transimp:"Transimpedance",hoverMaxSensDiam:"Maximum diameter of sensor (Max W1)",hoverMinGroundDiam:"Minimum ground plate diameter (Min W2)",hoverMaxDist:"Max distance between sensor and ground plate (Max Y)",hoverProxDist:"Target Proximity Distance (Z)",hoverDistance:"Nominal distance at which resolution criteria is to be satisfied",hoverResolution:"Resolution at nominal distance",hoverTargetdiameter:"Diameter of target material"},pt_BR:{ttcreatemulti:"###pt_BR.wbpanel.ttcreatemulti###",ttcreatesingle:"###pt_BR.wbpanel.ttcreatesingle###",ttcreatefpgaarch:"Create your FPGA power supply system",ttcreateuparch:"Create you processor power supply system",ttcreateclock:"Start your clock design",ttcreateled:"Create an LED power design",ttcreatesensor:"Create a Sensor design",ttfindsensor:"Find a temperature sensor part",ttcreatefilter:"Create a Filters design",moretools:"More Tools",helphover:"Click for WEBENCH Help",webenchurl:"//www.ti.com/lsds/ti/analog/webench/overview.page",helpurl:"//www.ti.com/lsds/ti/analog/webench/help-overview.page",helpurlpower:"//www.ti.com/lsds/ti/analog/webench/help-overview.page",helpurlfpga:"//www.ti.com/design-tools/webench-power-design/power-architect.html",helpurlled:"//www.ti.com/lsds/ti/analog/webench/led-architect.page",helpurlfilters:"//www.ti.com/lsds/ti/analog/webench/webench-filters.page",helpurlclocks:"//www.ti.com/lsds/ti/analog/webench/clock-architect.page",helpurlsensors:"//www.ti.com/lsds/ti/analog/webench/sensors-overview.page",helpurlinterface:"//www.ti.com/lsds/ti/analog/webench/interface.page",helpurlreference:"//www.ti.com/lsds/ti/analog/webench/webench_vref_user_manual.page",helpurlbattery:"//www.ti.com/lsds/ti/analog/webench/battery-charger.page",helpurlamp:"//www.ti.com/lsds/ti/analog/webench/amplifiers.page",architect:"###pt_BR.wbpanel.architect###",power:"Fonte",sensors:"Sensores",led:"LED",fpga:"FPGA",amplifier:"Amplifier",fpgaup:"Multiple Loads",mfpgaup:"Multiple Loads for FPGA/&#181;P",enterreq:"Insira os requisitos da fonte de energia:",vin:"Tens&#227;o de entrada",output:"Sa&#237;da",vout:"Vout",iout:"Iout",ambienttemp:"Temp ambiente",min:"M&#237;n",max:"M&#225;x",multipleloads:"M&#250;ltiplas cargas",powerarch:"Power Architect",startdesign:"Iniciar projeto",btnfpgaarch:"Arquiteto p/ FPGA",btnuparch:"Arquiteto p/ uP",configdriver:"Tipo de fonte",dc:"CC",ac:"CA",frequency:"Frequ&#234;ncia",optemp:"Temperatura op.",optional:"Opcional",desiredlightout:"Sa&#237;da de luz opcional",lumens:"L&#250;mens",createfpga:"Criar o seu sistema de fonte de energia FPGA",createpower:"###pt_BR.wbpanel.createpower###",createup:"Criar o seu sistema de fonte de energia do processador",step1:"Etapa 1",selectfpgamfg:"Selecionar o fabricante do FPGA",selectupmfg:"Selecionar o fabricante do processador",all:"Todos",inductivesensing:"Inductive Sensing",positioncoil:"Position (Coil)",sensors:"Sensores",sensordesigner:"Designer do sensor",sensorAFE:"SensorAFE",sensordiscretesolution:"Solu&#231;&#227;o discreta",sensorintegratedconfig:"Config. integrada",pressuresensor:"Press&#227;o",thermocouplesensor:"Par termoel&#233;trico",photosensor:"Fotodiodo",temperature:"Temperatura",rtd:"RTD",thermocouple:"Par termoel&#233;trico",pressure:"Press&#227;o",load:"Carga",voltageoutput:"Sa&#237;da de tens&#227;o",gassensor:"Sensor de g&#225;s",fpgapower:"Fonte p/ FPGA",processorpower:"Fonte p/ uP",co2:"CO2/Alcohol",ph:"pH",medicalAFE:"Medical AFE",ecg:"ECG",clocks:"Clocks",filters:"Filters",inductivesensing:"Inductive Sensing",positioncoil:"Position (Coil)",useautomotive:"Use Automotive Regulators",enterfreqreq:"Enter your frequency requirements",outputfreq:"Output frequency",tambient:"Tambient",lightoutput:"Light output",startfpgapowproj:"Start your Power Architect Project",startfpgampowproj:"Start your FPGA/&micro;P power project",selectactivefiltertype:"Select your active filter type",lowpass:"Lowpass",highpass:"Highpass",bandpass:"Bandpass",bandstop:"Bandstop",allpass:"Allpass",configsensordesign:"Configure your sensor design",vinrms:"Tens&#227;o de entrada RMS (V)",reference:"Reference",wbinterface:"Interface",enterinterface:"Configure your interface design",enterreference:"Series Voltage Reference Selector",enteramp:"Select a topology",battery:"Battery Chargers",inputfrequency:"Input Frequency",isolatedout:"Isolated Output",selectasensors:"Select a Sensors Tool",inductivesensingdesigner:"Position Sensing",inductivesensingdesigner2:"On/ Off Sensing",sensorafe:"Sensor AFE",medicalafe:"Medical AFE",distance:"Distance",resolution:"Resolution",targetdiameter:"Target Diameter",targetmaterial:"Target Material",copper:"Copper",stainless:"Stainless",configureinterface:"Configure your interface design",generic:"Generic",midchannel:"Mid Channel",timidchannel:"TI Mid Channel SigCon",nomidchannel:"No Mid Channel SigCon",maxdatarate:"Max Data Rate",devicemode:"Device Mode",differential:"Differential",singleended:"Single-Ended",findsolution:"Find Solution",enterbattery:"Enter your Li-Ion battery specifications",cellsinparallel:"Cells in Parallel",cellsinseries:"Cells in Series",cellcapacity:"Cell Capacity",totalcapacity:"Total Capacity",entercharger:"Charger Specifications",chargersource:"Charger Source",acadapter:"AC Adapter",custom:"Custom",vinMin:"VinMin",vinMax:"VinMax",iin:"Iin Max",vchg:"Vchg",ichg:"Ichg",fluidlevel:"Fluid Level Measurement",fluidid:"Fluid Identification",watergasheat:"Water/ Gas/ Heat Metering",poweredby:"Powered by",pbbattery:"Battery",pbplugin:"Plug-in",shape:"Shape",outerdiam:"Outer Diameter",turnsperlayer:"Turns per Layer",layers:"Layers",circular:"Circular",square:"Square",hexagonal:"Hexagonal",octagonal:"Octagonal",inductivepcbdesigner:"Coil Designer",tempsensoric:"Temperature Sensor IC",ultrasonicsensing:"Ultrasonic Sensing",capacitivesensing:"Capactive Sensing",sensordesigner:"Sensor Designer",switchingDist:"Switching Distance",closeTargDist:"Closest Target Distance",maxCoilDia:"Max Coil Dia",supplyVolt:"Supply Voltage",selectDevice:"Select a Device",maxSensDiam:"Max Sensor Diameter",minGroundDiam:"Min Ground Diameter",maxDist:"Max Distance",proxDist:"Proximity Distance",ampTopology:"Amplifier Topology",nonInv:"Non-inverting",inv:"Inverting",transimp:"Transimpedance",hoverMaxSensDiam:"Maximum diameter of sensor (Max W1)",hoverMinGroundDiam:"Minimum ground plate diameter (Min W2)",hoverMaxDist:"Max distance between sensor and ground plate (Max Y)",hoverProxDist:"Target Proximity Distance (Z)",hoverDistance:"Nominal distance at which resolution criteria is to be satisfied",hoverResolution:"Resolution at nominal distance",hoverTargetdiameter:"Diameter of target material"},ru_RU:{ttcreatemulti:"###ru_RU.wbpanel.ttcreatemulti###",ttcreatesingle:"###ru_RU.wbpanel.ttcreatesingle###",ttcreatefpgaarch:"Create your FPGA power supply system",ttcreateuparch:"Create you processor power supply system",ttcreateclock:"Start your clock design",ttcreateled:"Create an LED power design",ttcreatesensor:"Create a Sensor design",ttfindsensor:"Find a temperature sensor part",ttcreatefilter:"Create a Filters design",helphover:"Click for WEBENCH Help",moretools:"&#1044;&#1088;&#1091;&#1075;&#1080;&#1077; &#1080;&#1085;&#1089;&#1090;&#1088;&#1091;&#1084;&#1077;&#1085;&#1090;&#1099;",webenchurl:"//www.ti.com/ww/ru/analog/webench/index.shtml",helpurl:"//www.ti.com/lsds/ti/analog/webench/help-overview.page",helpurlpower:"//www.ti.com/lsds/ti/analog/webench/help-overview.page",helpurlfpga:"//www.ti.com/design-tools/webench-power-design/power-architect.html",helpurlled:"//www.ti.com/lsds/ti/analog/webench/led-architect.page",helpurlfilters:"//www.ti.com/lsds/ti/analog/webench/webench-filters.page",helpurlclocks:"//www.ti.com/ww/ru/analog/webench/clock_architect.html",helpurlsensors:"//www.ti.com/ww/ru/analog/webench/sensors/index.shtml",helpurlinterface:"//www.ti.com/lsds/ti/analog/webench/interface.page",helpurlreference:"//www.ti.com/lsds/ti/analog/webench/webench_vref_user_manual.page",helpurlbattery:"//www.ti.com/lsds/ti/analog/webench/battery-charger.page",helpurlamp:"//www.ti.com/lsds/ti/analog/webench/amplifiers.page",architect:"Architect",power:"&#1048;&#1055;",sensors:"&#1057;&#1077;&#1085;&#1089;&#1086;&#1088;&#1099;",led:"LED",fpga:"&#1055;&#1051;&#1048;&#1057;",fpgaup:"Multiple Loads",mfpgaup:"Multiple Loads for FPGA/&#181;P",enterreq:"&#1042;&#1074;&#1077;&#1076;&#1080;&#1090;&#1077; &#1090;&#1088;&#1077;&#1073;&#1086;&#1074;&#1072;&#1085;&#1080;&#1103; &#1082; &#1048;&#1055;",vin:"Vin",output:"&#1042;&#1099;&#1093;&#1086;&#1076;",vout:"Vout",iout:"Iout",ambienttemp:"&#1058;&#1077;&#1084;&#1087;&#1077;&#1088;&#1072;&#1090;&#1091;&#1088;&#1072;",min:"&#1052;&#1080;&#1085;.",max:"&#1052;&#1072;&#1082;&#1089;.",multipleloads:"&#1052;&#1085;&#1086;&#1075;&#1086;&#1082;&#1072;&#1085;&#1072;&#1083;&#1100;&#1085;&#1099;&#1081; &#1048;&#1055;",powerarch:"&#1056;&#1072;&#1079;&#1088;&#1072;&#1073;&#1086;&#1090;&#1082;&#1072;",startdesign:"&#1053;&#1072;&#1095;&#1072;&#1090;&#1100;",btnfpgaarch:"FPGA Architect",btnuparch:"&micro;P Architect",configdriver:"&#1058;&#1080;&#1087; &#1074;&#1093;&#1086;&#1076;&#1085;&#1086;&#1075;&#1086; &#1085;&#1072;&#1087;&#1088;&#1103;&#1078;&#1077;&#1085;&#1080;&#1103;",dc:"&#1055;&#1086;&#1089;&#1090;. &#1058;&#1086;&#1082;",ac:"&#1055;&#1077;&#1088;. &#1058;&#1086;&#1082;",frequency:"&#1063;&#1072;&#1089;&#1090;&#1086;&#1090;&#1072;",optemp:"&#1056;&#1072;&#1073;. &#1058;&#1077;&#1084;&#1087;&#1077;&#1088;&#1072;&#1090;&#1091;&#1088;&#1072;",optional:"&#1054;&#1087;&#1094;&#1080;&#1086;&#1085;&#1072;&#1083;&#1100;&#1085;&#1086;",desiredlightout:"Optional Light Output",lumens:"&#1051;&#1102;&#1084;&#1077;&#1085;",createfpga:"&#1057;&#1086;&#1079;&#1076;&#1072;&#1085;&#1080;&#1077; &#1089;&#1080;&#1089;&#1090;&#1077;&#1084;&#1099; &#1087;&#1080;&#1090;&#1072;&#1085;&#1080;&#1103; &#1042;&#1072;&#1096;&#1077;&#1075;&#1086; &#1055;&#1051;&#1048;&#1057;",createpower:"Create your Power Supply System",createup:"Create your Processor Power Supply System",step1:"&#1064;&#1072;&#1075; 1",selectfpgamfg:"&#1042;&#1099;&#1073;&#1086;&#1088; &#1087;&#1088;&#1086;&#1080;&#1079;&#1074;-&#1083;&#1103; &#1055;&#1051;&#1048;&#1057;",selectupmfg:"###ru_RU.wbpanel.selectupmfg###",all:"&#1042;&#1089;&#1077;",inductivesensing:"Inductive Sensing",positioncoil:"Position (Coil)",sensors:"&#1057;&#1077;&#1085;&#1089;&#1086;&#1088;&#1099;",sensordesigner:"&#1044;&#1080;&#1079;&#1072;&#1081;&#1085; &#1089;&#1093;&#1077;&#1084;&#1099; &#1076;&#1072;&#1090;&#1095;&#1080;&#1082;&#1072;",sensorAFE:"SensorAFE",sensordiscretesolution:"Discrete Solution",sensorintegratedconfig:"Integrated Config.",pressuresensor:"&#1044;&#1072;&#1090;&#1095;&#1080;&#1082; &#1076;&#1072;&#1074;&#1083;&#1077;&#1085;&#1080;&#1103;",thermocouplesensor:"&#1057;&#1077;&#1085;&#1089;&#1086;&#1088; &#1090;&#1077;&#1088;&#1084;&#1086;&#1087;&#1072;&#1088;&#1099;",photosensor:"&#1060;&#1086;&#1090;&#1086;&#1076;&#1080;&#1086;&#1076;",temperature:"Temperature",rtd:"RTD",thermocouple:"&#1058;&#1077;&#1088;&#1084;&#1086;&#1087;&#1072;&#1088;&#1072;",pressure:"&#1044;&#1072;&#1074;&#1083;&#1077;&#1085;&#1080;&#1077;",load:"&#1053;&#1072;&#1075;&#1088;&#1091;&#1079;&#1082;&#1072;",voltageoutput:"&#1042;&#1099;&#1093;&#1086;&#1076; &#1085;&#1072;&#1087;&#1088;&#1103;&#1078;&#1077;&#1085;&#1080;&#1103;",gassensor:"&#1043;&#1072;&#1079;&#1086;&#1074;&#1099;&#1081; &#1089;&#1077;&#1085;&#1089;&#1086;&#1088;",fpgapower:"&#1055;&#1051;&#1048;&#1057; &#1048;&#1055;",processorpower:"Processor &#1048;&#1055;",co2:"CO2/Alcohol",ph:"pH",medicalAFE:"Medical AFE",ecg:"ECG",clocks:"Clocks",filters:"Filters",inductivesensing:"Inductive Sensing",positioncoil:"Position (Coil)",useautomotive:"&#1048;&#1089;&#1087;&#1086;&#1083;&#1100;&#1079;&#1086;&#1074;&#1072;&#1090;&#1100; &#1072;&#1074;&#1090;&#1086;&#1084;&#1086;&#1073;&#1080;&#1083;&#1100;&#1085;&#1099;&#1077; &#1089;&#1090;&#1072;&#1073;&#1080;&#1083;&#1080;&#1079;&#1072;&#1090;&#1086;&#1088;&#1099;",enterfreqreq:"Enter your frequency requirements",outputfreq:"Output frequency",tambient:"Tambient",lightoutput:"Light output",startfpgapowproj:"Start your Power Architect Project",startfpgampowproj:"Start your FPGA/&micro;P power project",selectactivefiltertype:"Select your active filter type",lowpass:"Lowpass",highpass:"Highpass",bandpass:"Bandpass",bandstop:"Bandstop",allpass:"Allpass",configsensordesign:"Configure your sensor design",vinrms:"Vin RMS (V)",reference:"Reference",wbinterface:"Interface",enterinterface:"Configure your interface design",enterreference:"Series Voltage Reference Selector",enteramp:"Select a topology",battery:"Battery Chargers",inputfrequency:"Input Frequency",isolatedout:"Isolated Output",selectasensors:"Select a Sensors Tool",inductivesensingdesigner:"Position Sensing",inductivesensingdesigner2:"On/ Off Sensing",sensorafe:"Sensor AFE",medicalafe:"Medical AFE",distance:"Distance",resolution:"Resolution",targetdiameter:"Target Diameter",targetmaterial:"Target Material",copper:"Copper",stainless:"Stainless",configureinterface:"Configure your interface design",generic:"Generic",midchannel:"Mid Channel",timidchannel:"TI Mid Channel SigCon",nomidchannel:"No Mid Channel SigCon",maxdatarate:"Max Data Rate",devicemode:"Device Mode",differential:"Differential",singleended:"Single-Ended",findsolution:"Find Solution",enterbattery:"Enter your Li-Ion battery specifications",cellsinparallel:"Cells in Parallel",cellsinseries:"Cells in Series",cellcapacity:"Cell Capacity",totalcapacity:"Total Capacity",entercharger:"Charger Specifications",chargersource:"Charger Source",acadapter:"AC Adapter",custom:"Custom",vinMin:"VinMin",vinMax:"VinMax",iin:"Iin Max",vchg:"Vchg",ichg:"Ichg",fluidlevel:"Fluid Level Measurement",fluidid:"Fluid Identification",watergasheat:"Water/ Gas/ Heat Metering",poweredby:"Powered by",pbbattery:"Battery",pbplugin:"Plug-in",shape:"Shape",outerdiam:"Outer Diameter",turnsperlayer:"Turns per Layer",layers:"Layers",circular:"Circular",square:"Square",hexagonal:"Hexagonal",octagonal:"Octagonal",inductivepcbdesigner:"Coil Designer",tempsensoric:"Temperature Sensor IC",ultrasonicsensing:"Ultrasonic Sensing",capacitivesensing:"Capactive Sensing",sensordesigner:"Sensor Designer",switchingDist:"Switching Distance",closeTargDist:"Closest Target Distance",maxCoilDia:"Max Coil Dia",supplyVolt:"Supply Voltage",selectDevice:"Select a Device",maxSensDiam:"Max Sensor Diameter",minGroundDiam:"Min Ground Diameter",maxDist:"Max Distance",proxDist:"Proximity Distance",ampTopology:"Amplifier Topology",nonInv:"Non-inverting",inv:"Inverting",transimp:"Transimpedance",hoverMaxSensDiam:"Maximum diameter of sensor (Max W1)",hoverMinGroundDiam:"Minimum ground plate diameter (Min W2)",hoverMaxDist:"Max distance between sensor and ground plate (Max Y)",hoverProxDist:"Target Proximity Distance (Z)",hoverDistance:"Nominal distance at which resolution criteria is to be satisfied",hoverResolution:"Resolution at nominal distance",hoverTargetdiameter:"Diameter of target material"},ko_KR:{ttcreatemulti:"Create a power supply system with multiple Loads",ttcreatesingle:"Create a power supply design with single output",ttcreatefpgaarch:"Create an FPGA power supply system",ttcreateuparch:"Create a processor power supply system",ttcreateclock:"Create a clock design",ttcreateled:"Create an LED power design",ttcreatesensor:"Create a sensor design",ttfindsensor:"Find a temperature sensor part",ttcreatefilter:"Create a filter design",moretools:"&#45908; &#47566;&#51008; &#53812; &#48372;&#44592;",helphover:"Click for WEBENCH Help",webenchurl:"//"+j+"/"+k+"/design-tools/overview.html",helpurl:"//webench.ti.com/help/",helpurlpower:"//"+j+"/"+k+"/design-tools/webench-power-design/power-designer.html",helpurlfpga:"//"+j+"/"+k+"/design-tools/webench-power-design/power-architect.html",helpurlled:"//"+j+"/"+k+"/design-tools/webench-power-design/led-architect.html",helpurlfilters:"//"+j+"/"+k+"/design-tools/signal-chain-design/webench-filters.html",helpurlclocks:"//"+j+"/"+k+"/design-tools/signal-chain-design/clock-architect.html",helpurlsensors:"//"+j+"/"+k+"/design-tools/signal-chain-design/sensors-overview.html",helpurlinterface:"//"+j+"/"+k+"/design-tools/signal-chain-design/interface.html",helpurlreference:"//"+j+"/"+k+"/design-tools/signal-chain-design/vref.html",helpurlbattery:"//"+j+"/"+k+"/design-tools/webench-power-design/battery-charger.html",helpurlamp:"//"+j+"/"+k+"/design-tools/signal-chain-design/amplifiers.html",architect:"Architect",power:"&#51204;&#47141;",sensors:"&#49468;&#49436;",led:"LED",fpga:"FPGA",amplifier:"&#51613;&#54253;&#44592;",fpgaup:"&#45796;&#51473; &#48512;&#54616;",mfpgaup:"FPGA/&#181;P&#51032; &#45796;&#51473; &#48512;&#54616;",enterreq:"&#xADC0;&#xD558;&#xC758; &#xC804;&#xB825; &#xACF5;&#xAE09; &#xC694;&#xAC74;&#xC744; &#xC785;&#xB825;&#xD558;&#xC138;&#xC694;.",vin:"Vin",output:"&#52636;&#47141;",vout:"Vout",iout:"Iout",ambienttemp:"&#xC8FC;&#xBCC0; &#xC628;&#xB3C4;(Tambient)",min:"Min",max:"Max",multipleloads:"&#48373;&#49688; &#48512;&#54616;",powerarch:"&#54028;&#50892; &#50500;&#53412;&#53581;&#53944;",startdesign:"&#xC124;&#xACC4; &#xC2DC;&#xC791;&#xD558;&#xAE30;",btnfpgaarch:"FPGA &#xC544;&#xD0A4;&#xD14D;&#xD2B8;",btnuparch:"&micro;P &#xC544;&#xD0A4;&#xD14D;&#xD2B8;",configdriver:"&#xB4DC;&#xB77C;&#xC774;&#xBC84; &#xC18C;&#xC2A4;&#xB97C; &#xAD6C;&#xC131;&#xD558;&#xC138;&#xC694;.",dc:"DC",ac:"AC",frequency:"&#51452;&#54028;&#49688;",optemp:"&#46041;&#51089; &#50728;&#46020;",optional:"&#xC120;&#xD0DD;&#xC0AC;&#xD56D;",desiredlightout:"&#49440;&#53469;&#51201; &#51312;&#47749; &#52636;&#47141;(&#47336;&#47704;)",lumens:"&#47336;&#47704;",createfpga:"&#44480;&#54616;&#51032; FPGA &#51204;&#47141; &#44277;&#44553; &#49884;&#49828;&#53596;&#51012; &#49373;&#49457;&#54616;&#44592;",createpower:"Create your Power Supply System",createup:"Create your Processor Power Supply System",step1:"&#51228;1&#45800;&#44228;",selectfpgamfg:"FPGA &#49373;&#49328;&#50629;&#52404; &#49440;&#53469;&#54616;&#44592;",selectupmfg:"###ko_KR.wbpanel.selectupmfg###",all:"&#47784;&#46160; &#49440;&#53469;",inductivesensing:"Inductive Sensing",positioncoil:"Position (Coil)",sensors:"&#49468;&#49436;",sensordesigner:"&#xC13C;&#xC11C; &#xB514;&#xC790;&#xC774;&#xB108;",sensorAFE:"&#xC13C;&#xC11C; AFE",sensordiscretesolution:"Discrete Solution",sensorintegratedconfig:"Integrated Config.",pressuresensor:"&#50517;&#47141; &#49468;&#49436;",thermocouplesensor:"&#49436;&#47784;&#52964;&#54540; &#49468;&#49436;",photosensor:"&#xD3EC;&#xD1A0;&#xB2E4;&#xC774;&#xC624;&#xB4DC;",temperature:"&#50728;&#46020;",rtd:"RTD",thermocouple:"&#49436;&#47784;&#52964;&#54540;",pressure:"&#50517;&#47141;",load:"&#54616;&#51473;",voltageoutput:"&#51204;&#50517; &#52636;&#47141;",gassensor:"&#xAC00;&#xC2A4; &#xC13C;&#xC11C;",fpgapower:"FPGA &#51204;&#47141;",processorpower:"&#54532;&#47196;&#49464;&#49436; &#51204;&#47141;",co2:"CO2/&#50508;&#53076;&#50732;",ph:"pH",medicalAFE:"&#xC758;&#xB8CC;&#xC6A9; AFE",ecg:"ECG",clocks:"&#xD074;&#xB85D;",filters:"&#xD544;&#xD130;",inductivesensing:"Inductive Sensing",positioncoil:"Position (Coil)",useautomotive:"&#xC624;&#xD1A0;&#xBAA8;&#xD2F0;&#xBE0C; &#xB808;&#xADE4;&#xB808;&#xC774;&#xD130; &#xC0AC;&#xC6A9;",enterfreqreq:"&#xC8FC;&#xD30C;&#xC218; &#xC870;&#xAC74;&#xC744; &#xC785;&#xB825;&#xD558;&#xC138;&#xC694;.",outputfreq:"&#xCD9C;&#xB825; &#xC8FC;&#xD30C;&#xC218;",tambient:"Tambient",lightoutput:"&#xC870;&#xBA85; &#xCD9C;&#xB825;",startfpgapowproj:"Power Architect &#54532;&#47196;&#51229;&#53944; &#49884;&#51089;",startfpgampowproj:"FPGA/&#xB5;P &#xC804;&#xB825; &#xD504;&#xB85C;&#xC81D;&#xD2B8;&#xB97C; &#xC2DC;&#xC791;&#xD558;&#xC138;&#xC694;.",selectactivefiltertype:"&#xB2A5;&#xB3D9; &#xD544;&#xD130; &#xC720;&#xD615;&#xC744; &#xC120;&#xD0DD;&#xD558;&#xC138;&#xC694;.",lowpass:"&#xB85C;&#xC6B0;&#xD328;&#xC2A4;",highpass:"&#xD558;&#xC774;&#xD328;&#xC2A4;",bandpass:"&#xBC34;&#xB4DC;&#xD328;&#xC2A4;",bandstop:"&#xBC34;&#xB4DC;&#xC2A4;&#xD1B1;",allpass:"&#xC804;&#xB300;&#xC5ED; &#xD1B5;&#xACFC;",configsensordesign:"&#xADC0;&#xD558;&#xC758; &#xC13C;&#xC11C;&#xB97C; &#xAD6C;&#xC131;&#xD558;&#xC138;&#xC694;.",vinrms:"Vin RMS (V)",reference:"&#xB808;&#xD37C;&#xB7F0;&#xC2A4;",wbinterface:"&#xC778;&#xD130;&#xD398;&#xC774;&#xC2A4;",enterinterface:"&#xADC0;&#xD558;&#xC758; &#xC778;&#xD130;&#xD398;&#xC774;&#xC2A4;&#xB97C; &#xAD6C;&#xC131;&#xD558;&#xC138;&#xC694;.",enterreference:"&#xC9C1;&#xB82C; &#xC804;&#xC555; &#xB808;&#xD37C;&#xB7F0;&#xC2A4; &#xC120;&#xD0DD; &#xD234;",enteramp:"&#53664;&#54260;&#47196;&#51648;&#47484; &#49440;&#53469;&#54616;&#49464;&#50836;.",battery:"&#xBC30;&#xD130;&#xB9AC; &#xCC28;&#xC800;",inputfrequency:"&#xC785;&#xB825; &#xC8FC;&#xD30C;&#xC218;",isolatedout:"&#xC808;&#xC5F0; &#xCD9C;&#xB825;",selectasensors:"&#xC13C;&#xC11C; &#xD234; &#xC120;&#xD0DD;&#xD558;&#xAE30;",inductivesensingdesigner:"&#50948;&#52824; &#49468;&#49905;",inductivesensingdesigner2:"&#xC628;/&#xC624;&#xD504; &#xC778;&#xB355;&#xD2F0;&#xBE0C; &#xC13C;&#xC2F1;",sensorafe:"&#xC13C;&#xC11C; AFE",medicalafe:"&#xC758;&#xB8CC;&#xC6A9; AFE",distance:"&#xAC70;&#xB9AC;",resolution:"&#xD574;&#xC0C1;&#xB3C4;",targetdiameter:"&#xBAA9;&#xD45C; &#xC9C0;&#xB984;",targetmaterial:"&#xC0AC;&#xC6A9; &#xC7AC;&#xB8CC;",copper:"&#xAD6C;&#xB9AC;",stainless:"&#xC2A4;&#xD14C;&#xC778;&#xB9AC;&#xC2A4;",configureinterface:"&#xADC0;&#xD558;&#xC758; &#xC778;&#xD130;&#xD398;&#xC774;&#xC2A4;&#xB97C; &#xAD6C;&#xC131;&#xD558;&#xC138;&#xC694;.",generic:"&#xC77C;&#xBC18;",midchannel:"&#xBBF8;&#xB4DC; &#xCC44;&#xB110;",timidchannel:"TI &#xBBF8;&#xB4DC; &#xCC44;&#xB110; SigCon",nomidchannel:"&#xBBF8;&#xB4DC; &#xCC44;&#xB110; SigCon &#xC5C6;&#xC74C;",maxdatarate:"&#xCD5C;&#xB300; &#xB370;&#xC774;&#xD130; &#xC18D;&#xB3C4;",devicemode:"&#xB514;&#xBC14;&#xC774;&#xC2A4; &#xBAA8;&#xB4DC;",differential:"&#xCC28;&#xB3D9;",singleended:"&#xC2F1;&#xAE00; &#xC5D4;&#xB4DC;",findsolution:"&#xC194;&#xB8E8;&#xC158; &#xAC80;&#xC0C9;&#xD558;&#xAE30;",enterbattery:"&#xADC0;&#xD558;&#xC758; &#xB9AC;&#xD2AC;&#xC774;&#xC628; &#xBC30;&#xD130;&#xB9AC; &#xC0AC;&#xC591;&#xC744; &#xC785;&#xB825;&#xD558;&#xC138;&#xC694;.",cellsinparallel:"&#xBCD1;&#xB82C; &#xC140; &#xC218;",cellsinseries:"&#xC9C1;&#xB82C; &#xC5F0;&#xACB0; &#xC140; ",cellcapacity:"&#xC140; &#xC6A9;&#xB7C9;",totalcapacity:"&#xC804;&#xCCB4; &#xC6A9;&#xB7C9;",entercharger:"&#xCDA9;&#xC804; &#xC0AC;&#xC591; &#xC785;&#xB825;&#xD558;&#xAE30;",chargersource:"&#xCDA9;&#xC804; &#xC18C;&#xC2A4;",acadapter:"AC Adapter",custom:"Custom",vinMin:"VinMin",vinMax:"VinMax",iin:"Iin Max",vchg:"Vchg",ichg:"Ichg",fluidlevel:"&#xC561;&#xC704; &#xCE21;&#xC815;",fluidid:"&#xC720;&#xCCB4; &#xC2DD;&#xBCC4;",watergasheat:"&#xC218;&#xB3C4;/&#xAC00;&#xC2A4;/&#xC5F4; &#xBBF8;&#xD130;&#xB9C1;",poweredby:"&#xC804;&#xC6D0; &#xACF5;&#xAE09; &#xD615;&#xD0DC;",pbbattery:"&#xBC30;&#xD130;&#xB9AC;",pbplugin:"&#xD50C;&#xB7EC;&#xADF8;&#xC778;",shape:"&#xD615;&#xD0DC;",outerdiam:"&#xC678;&#xACFD; &#xC9C0;&#xB984;",turnsperlayer:"&#xB808;&#xC774;&#xC5B4; &#xB2F9; &#xD134; &#xC218;",layers:"&#xB808;&#xC774;&#xC5B4; &#xC218;",circular:"&#xC6D0;&#xD615;",square:"&#xC0AC;&#xAC01;&#xD615;",hexagonal:"&#xC721;&#xAC01;&#xD615;",octagonal:"&#xD314;&#xAC01;&#xD615;",inductivepcbdesigner:"&#xCEE4;&#xC2A4;&#xD140; &#xCF54;&#xC77C; &#xB514;&#xC790;&#xC774;&#xB108;",tempsensoric:"&#xC628;&#xB3C4; &#xC13C;&#xC11C; IC",ultrasonicsensing:"&#xCD08;&#xC74C;&#xD30C; &#xC13C;&#xC2F1;",capacitivesensing:"&#xC815;&#xC804;&#xC2DD; &#xC13C;&#xC2F1;",sensordesigner:"&#xC13C;&#xC11C; &#xB514;&#xC790;&#xC774;&#xB108;",switchingDist:"&#xC2A4;&#xC704;&#xCE6D; &#xAC70;&#xB9AC;",closeTargDist:"&#xC13C;&#xC11C;-&#xB300;&#xC0C1;&#xAC04; &#xCD5C;&#xC18C; &#xAC70;&#xB9AC;",maxCoilDia:"&#xCD5C;&#xB300; &#xCF54;&#xC77C; &#xC9C0;&#xB984;",supplyVolt:"&#xACF5;&#xAE09; &#xC804;&#xC555;",selectDevice:"&#xB514;&#xBC14;&#xC774;&#xC2A4; &#xC120;&#xD0DD;",maxSensDiam:"Max Sensor Diameter",minGroundDiam:"Min Ground Diameter",maxDist:"Max Distance",proxDist:"Proximity Distance",ampTopology:"&#51613;&#54253;&#44592; &#53664;&#54260;&#47196;&#51648;",nonInv:"&#48708;-&#51064;&#48260;&#54021;",inv:"&#51064;&#48260;&#54021;",transimp:"&#53944;&#47004;&#49828;&#51076;&#54588;&#45912;&#49828;",hoverMaxSensDiam:"Maximum diameter of sensor (Max W1)",hoverMinGroundDiam:"Minimum ground plate diameter (Min W2)",hoverMaxDist:"Max distance between sensor and ground plate (Max Y)",hoverProxDist:"Target Proximity Distance (Z)",hoverDistance:"Nominal distance at which resolution criteria is to be satisfied",hoverResolution:"Resolution at nominal distance",hoverTargetdiameter:"Diameter of target material"}};
var c={init:function(m){var m=e.extend(d,m),n="",l="",o="";
return this.each(function(){f++;
var z=e(this),ah=z.data(h),H=this,u=m.lang,ag=a[u],N=[],T={},K,U,J,af,aa,q,ae,t,R,x,v,ab,y=[ag.power,ag.fpgaup,ag.led,ag.filters,ag.clocks,ag.sensors,ag.wbinterface,ag.reference,ag.battery,ag.amplifier],G=y.length,ac=document.location.href;
var ad=function(){var aj=e("#selectTx").val();
var ak=document.getElementById("selectMidChannel");
var al=document.getElementById("selectRx");
if(ak.value=="TI Mid Channel SigCon"||al.value=="TI Rx"){document.getElementById("designNotes").style.display="none"
}else{document.getElementById("designNotes").style.display="block"
}var ai=document.getElementById("tx");
if(aj=="TI Tx"){ai.innerHTML='<img src="https://webench.ti.com/webench5/interface/img/N-ti-tx-normal.png" alt="Tx"  style="position: relative;width:34px;float:left;"><img src="https://webench.ti.com/webench5/interface/img/arrow.png" alt="arrow" style="position: relative;width:11px;height:7px;float: left;margin-top: 16px;" />';
document.getElementById("designNotes").style.display="none"
}else{ai.innerHTML='<img src="https://webench.ti.com/webench5/interface/img/N-non-ti-tx-normal.png" alt="Tx"  style="position: relative;width:34px;float:left;"><img src="https://webench.ti.com/webench5/interface/img/arrow.png" alt="arrow" style="position: relative;width:11px;height:7px;float: left;margin-top: 16px;"/>'
}};
var V=function(){var aj=e("#selectRx").val();
var ak=document.getElementById("selectMidChannel");
var ai=document.getElementById("selectTx");
if(ak.value=="TI Mid Channel SigCon"||ai.value=="TI Tx"){document.getElementById("designNotes").style.display="none"
}else{document.getElementById("designNotes").style.display="block"
}var al=document.getElementById("rx");
if(aj=="TI Rx"){document.getElementById("designNotes").style.display="none";
al.innerHTML='<img src="https://webench.ti.com/webench5/interface/img/N-ti-rx-normal.png" alt="Rx"  style="position: relative;width:34px;float:left;">'
}else{al.innerHTML='<img src="https://webench.ti.com/webench5/interface/img/N-non-ti-rx-normal.png" alt="Rx"  style="position: relative;width:34px;float:left;">'
}};
var I=function(){var aj=e("#selectMidChannel").val();
var al=document.getElementById("selectRx");
var ai=document.getElementById("selectTx");
if(al.value=="TI Rx"||ai.value=="TI Tx"){document.getElementById("designNotes").style.display="none"
}else{document.getElementById("designNotes").style.display="block"
}var ak=document.getElementById("midChannel");
if(aj=="TI Mid Channel SigCon"){document.getElementById("tx").style.margin="0";
document.getElementById("designNotes").style.display="none";
ak.innerHTML='<img src="https://webench.ti.com/webench5/interface/img/N-channel-hover.png" alt="Mid Channel SigCon" style="position: relative;width: 38px;height: 14px;margin-top: 13px;float:left;"><img src="https://webench.ti.com/webench5/interface/img/arrow.png" alt="arrow" style="position: relative;width:11px;height:7px;float: left;margin-top: 16px;" /><img src="https://webench.ti.com/webench5/interface/img/N-ti-sigcon-normal.png" alt="Mid Channel SigCon"  style="position: relative;width:34px;float:left;"><img src="https://webench.ti.com/webench5/interface/img/arrow.png" alt="arrow" style="position: relative;width:11px;height:7px;float: left;margin-top: 16px;" /><img src="https://webench.ti.com/webench5/interface/img/N-channel-hover.png" alt="Mid Channel SigCon" style="position: relative;width: 38px;height: 14px;margin-top: 13px;float:left;"><img src="https://webench.ti.com/webench5/interface/img/arrow.png" alt="arrow" style="position: relative;width:11px;height:7px;float: left;margin-top: 16px;" />'
}else{document.getElementById("tx").style.margin="0 0 0 24%";
ak.innerHTML='<img src="https://webench.ti.com/webench5/interface/img/N-channel-hover.png" alt="Mid Channel SigCon" style="position: relative;width: 38px;height: 14px;margin-top: 13px;float:left;"><img src="https://webench.ti.com/webench5/interface/img/arrow.png" alt="arrow" style="position: relative;width:11px;height:7px;float: left;margin-top: 16px;" />'
}};
var p=function(){var ai=e("#sensorSelect").val();
document.getElementById("InductiveSensingResolution").style.display="none";
document.getElementById("InductiveSensingSwitching").style.display="none";
document.getElementById("InductiveSensingCoil").style.display="none";
document.getElementById("SensorAFE").style.display="none";
document.getElementById("Sensors").style.display="none";
document.getElementById("TempSensors").style.display="none";
document.getElementById("MedicalAFE").style.display="none";
document.getElementById("Ultrasonic").style.display="none";
document.getElementById("FDC").style.display="none";
document.getElementById(ai).style.display="block";
if(ai=="SensorAFE"){tsform.tsFamily.value="90";
tsform.tsFamily[0].checked="checked"
}else{if(ai=="Sensors"){tsform.tsFamily.value="81";
tsform.tsFamily[8].checked="checked"
}}};
var W=function(){var ai=parseInt(document.getElementById("cellParallel").value);
var aj=parseFloat(document.getElementById("cellCapacity").value);
document.getElementById("totalCapacity").value=ai*aj
};
var s=function(ai,aj){var ai=e("#wb-batteryForm")[0];
var aj=e("#chSource").val();
if(aj=="AC Adapter"){ai.vinMin.value=5;
ai.vinMax.value=6;
ai.iinMax.value=1000;
ai.vchg.value=4.2;
ai.ichg.value=1000
}else{if(aj=="USB"||aj=="USB2"){ai.vinMin.value=4.75;
ai.vinMax.value=5.25;
ai.iinMax.value=500;
ai.vchg.value=4.2;
ai.ichg.value=500
}else{if(aj=="USB3"){ai.vinMin.value=4.45;
ai.vinMax.value=5.25;
ai.iinMax.value=900;
ai.vchg.value=4.2;
ai.ichg.value=500
}else{if(aj=="Custom"){ai.vinMin.value=8;
ai.vinMax.value=14;
ai.iinMax.value=1000;
ai.vchg.value=4.2;
ai.ichg.value=1000
}}}}};
var X=function(){document.getElementById("chSource").value="Custom";
e("#chSource").val("Custom")
};
if(m.fromvendor){l+="&fromvendor="+m.fromvendor+"";
if(m.fromvendor1){l+="&fromvendor1="+m.fromvendor1+""
}if(m.fromvendor2){l+="&fromvendor2="+m.fromvendor2+""
}}else{if(m.fromdisty){l+="&fromdisty="+m.fromdisty+""
}}if(ah){return
}z.html("").data(h,m).addClass("TIwebenchPanel2");
T[y[0]]=e(['<div class="wb-pwr wb-content active">','<div class="row">','<h3 class="col-6 heading power_wb">'+ag.power+"</h5>","</div>",'<div class="row">','<a title="'+ag.helphover+'" class="help" href="'+ag.helpurlpower+'" target="_blank">'+ag.enterreq+"</a>","</div>",'<div class="row">','<div class="col-4 push-2">','<input type="radio" name="pwrSource" value="DC" checked="checked" id="wb-dc" class="active"><label for="wb-dc" class="radio">'+ag.dc+"</label>",'<input type="radio" name="pwrSource" value="AC" id="wb-ac"><label for="wb-ac" class="radio">'+ag.ac+"</label>","</div>","</div>",'<div class="wb-pwr-type">','<div class="wb-pwr-dc wb-frm active" ><!-- dc sub-tab -->','<div class="row">','<label for="wb-pwr-dc-vinMin" class="col-2"><br />'+ag.vin+"</label>",'<div class="col-2" title="Minimum input voltage"><strong>'+ag.min+'</strong> <br/><input type="text" name="dcVinMin" value="14.0" size="3" id="wb-pwr-dc-vinMin"><span class="unit">V</span></div>','<div class="col-2" title="Maximum input voltage"><strong>'+ag.max+'</strong> <br/><input type="text" name="dcVinMax" value="22.0" size="3" id="wb-pwr-dc-vinMax"><span class="unit">V</span></div>',"</div>",'<div class="row">','<label for="wb-pwr-dc-vOut" class="col-2"><br />'+ag.output+"</label>",'<div class="col-2" title="Output voltage for single or max of multiple loads"><strong>'+ag.vout+'</strong> <br/><input type="text" name="dcO1V" value="3.3" size="3" id="wb-pwr-dc-vOut"><span class="unit">V</span></div>','<div class="col-2" title="Maximum output current"><strong>'+ag.iout+'</strong> <br/><input type="text" name="dcO1I" value="2.0" size="3" id="wb-pwr-dc-iOut"><span class="unit">A</span></div>',"</div>",'<div class="row">','<label for="wb-pwr-dc-temp" class="col-2">'+ag.temperature+"</label>",'<div class="col-2" title="Ambient temperature"> <input type="text" name="dcOpTA" value="30" size="3" id="wb-pwr-dc-temp"><span class="unit">&deg;C</span></div>',"</div>",'<div class="row">','<div class="col-4 push-2">','<input type="checkbox" id="isolatedOutput" name="isolatedOutput">',"<label>"+ag.isolatedout+"</label>","</div>","</div>","</div>",'<div class="wb-pwr-ac wb-frm" ><!-- ac sub-tab -->','<div  class="row wb-radioInpt">','<h5 class="col-2">'+ag.frequency+"</h5>",'<div class="col-4">','<input type="radio" name="pwrAChz" value="50" id="wb-ac-50hz"><label for="wb-ac-50hz">50Hz</label>','<input type="radio" name="pwrAChz" value="60" checked="checked" id="wb-ac-60hz"><label for="wb-ac-60hz">60Hz</label>',"</div>","</div>",'<div class="row">','<label for="wb-pwr-ac-vinMin" class="col-2"><br />'+ag.vin+" RMS</label>",'<div class="col-2" title="Minimum input voltage"><strong>'+ag.min+'</strong> <br/><input type="text" name="acVinMin" id="wb-pwr-ac-vinMin" value="110" size="3"><span class="unit">V</span></div>','<div class="col-2" title="Maximum input voltage"><strong>'+ag.max+'</strong> <br/><input type="text" name="acVinMax" id="wb-pwr-ac-vinMax" value="130" size="3"><span class="unit">V</span></div>',"</div>",'<div class="row">','<label for="wb-pwr-ac-vOut" class="col-2"><br />'+ag.output+"</label>",'<div class="col-2" title="Output voltage for single or max of multiple loads"><strong>'+ag.vout+'</strong> <br/><input type="text" name="acO1V" value="5.0" size="3" id="wb-pwr-ac-vOut"><span class="unit">V</span></div>','<div class="col-2" title="Maximum output current"><strong>'+ag.iout+'</strong> <br/><input type="text" name="acO1I" value="2.0" size="3" id="wb-pwr-ac-vinMin"><span class="unit">A</span></div>',"</div>",'<div class="row">','<div class="col-4 push-2">','<input type="checkbox" id="isolatedOutput1" name="isolatedOutput1">',"<label>"+ag.isolatedout+"</label>","</div>","</div>","</div>","</div>",'<div class="row " style="margin:0;">','<div class="col-2 push-2">','<input name="submitPower" type="button" value="'+ag.startdesign+'" class="button red" title="'+ag.ttcreatesingle+'" id="wb-btn-start-power" />',"</div>","</div>","</div>"].join(""));
T[y[1]]=e(['<div class="wb-fpga wb-content"><!-- fpga tab -->','<div class="row">','<h3 class="col-6 heading fpga_wb">'+ag.fpgaup+"</h5>","</div>",'<div class="row">','<a title="'+ag.helphover+'" class="help" href="'+ag.helpurlfpga+'" target="_blank">'+ag.startfpgapowproj+"</a>","</div>",'<div class="row" style="padding-right: 0 !important; margin:0;">','<div class="col-3"><input name="submitPA" type="button" value="'+ag.powerarch+'" class="button red" title="'+ag.ttcreatemulti+'" id="wb-btn-pa" /></div>',"</div>",'<div class="row">','<h3 class="col-6 heading fpga_wb">'+ag.mfpgaup+"</h5>","</div>",'<div class="row">','<a title="'+ag.helphover+'" class="help" href="'+ag.helpurlfpga+'" target="_blank">'+ag.startfpgampowproj+"</a>","</div>",'<div class="row">','<div class="col-3">',"<h4>"+ag.fpgapower+"</h4>",'<input type="radio" name="fpga_vendor" value="" checked="checked" id="wb-fpga-all"><label for="wb-fpga-all">'+ag.all+"</label><br/>",'<input type="radio" name="fpga_vendor" value="actel" id="wb-fpga-actel"><label for="wb-fpga-actel">Actel</label><br/>','<input type="radio" name="fpga_vendor" value="altera" id="wb-fpga-altera"><label for="wb-fpga-altera">Altera</label><br/>','<input type="radio" name="fpga_vendor" value="lattice" id="wb-fpga-lattice"><label for="wb-fpga-lattice">Lattice</label><br/>','<input type="radio" name="fpga_vendor" value="xilinx" id="wb-fpga-xilinx"><label for="wb-fpga-xilinx">Xilinx</label>',"</div>",'<div class="col-3">',"<h4>"+ag.processorpower+"</h4>",'<input type="radio" name="up_vendor" value="texas instruments" checked="checked" id="wb-fpga-ti"><label for="wb-fpga-ti">TI</label><br/>','<input type="radio" name="up_vendor" value="" id="wb-fpga-all2"><label for="wb-fpga-all2">'+ag.all+"</label>","</div>","</div>",'<div class="row" style="padding-right: 0 !important; margin:0;">','<div class="col-3"><label for="wb-btn-pa">'+ag.multipleloads+'</label><br><input name="submitFPGA1" type="button" value="'+ag.btnfpgaarch+'" class="button red" title="'+ag.ttcreatefpgaarch+'" id="wb-btn-pa" /></div>','<div class="col-3" style="float:right;width:47%;"><label for="wb-btn-start">'+ag.multipleloads+'</label><br><input name="submitFPGA2" type="button" value="'+ag.btnuparch+'" class="button red" title="'+ag.ttcreateuparch+'" id="wb-btn-start-powerarch" /></div>',"</div>","</div>"].join(""));
T[y[2]]=e(['<div class="wb-led wb-content"><!-- led tab -->','<div class="row">','<h3 class="col-6 heading led_wb">'+ag.led+"</h5>","</div>",'<div class="row">','<a title="'+ag.helphover+'" class="help" href="'+ag.helpurlled+'" target="_blank">'+ag.configdriver+"</a>","</div>",'<div class="row">','<div class="col-4 push-2">','<input type="radio" name="ledSource" value="DC" checked="checked" id="wb-led-dc"><label for="wb-led-dc">'+ag.dc+"</label>",'<input type="radio" name="ledSource" value="AC" id="wb-led-ac"><label for="wb-led-ac">'+ag.ac+"</label>","</div>","</div>",'<div class="wb-led-type">','<div class="wb-led-dc wb-frm active" ><!-- dc sub-tab -->','<div class="row">','<label for="wb-led-dc-vinMin" class="col-2"><br/>'+ag.vin+"</label>",'<div class="col-2" title="Minimum input voltage"><strong>'+ag.min+'</strong> <br/><input type="text" name="ledVinMinDC" size="3" maxlength="5" value="15" id="wb-led-dc-vinMin"><span class="unit">V</span></div>','<div class="col-2" title="Maximum input voltage"><strong>'+ag.max+'</strong> <br/><input type="text" name="ledVinMaxDC" size="3" maxlength="5" value="30" id="wb-led-dc-vinMax"><span class="unit">V</span></div>',"</div>",'<div class="row">','<label for="wb-led-dc-temp" class="col-2">'+ag.temperature+"</label>",'<div class="col-2" title="Ambient temperature"><input type="text" name="ledOpTADC" value="30" size="3" id="wb-led-dc-temp"><span class="unit">&deg;C</span></div>',"</div>",'<div class="row">','<label for="wb-led-dc-lm" class="col-2">'+ag.lightoutput+"<br />("+ag.optional+")</label>",'<div class="col-2"><input type="text" name="lightOutputDC" size="3" id="wb-led-dc-lm"><span class="unit">lm</span></div>',"</div>","</div>",'<div class="wb-led-ac wb-frm" style="margin:0;" ><!-- ac sub-tab -->','<div class="row">','<h5 class="col-2">'+ag.frequency+"</h5>",'<div class="col-4">','<input type="radio" name="line_fsw" value="50" id="wb-led-ac-50hz"><label for="wb-led-ac-50hz">50Hz</label>','<input type="radio" name="line_fsw" value="60" checked="checked" id="wb-led-ac-60hz"><label for="wb-led-ac-60hz">60Hz</label>',"</div>","</div>",'<div class="row">','<label for="wb-led-ac-vinMin" class="col-2"><br/>'+ag.vin+" RMS</label>",'<div class="col-2" title="Minimum input voltage"><strong>'+ag.min+'</strong> <br/><input type="text" name="ledVinMinAC" size="3" maxlength="5" value="110" id="wb-led-ac-vinMin"><span class="unit">V</span></div>','<div class="col-2" title="Maximum input voltage"><strong>'+ag.max+'</strong> <br/><input type="text" name="ledVinMaxAC" size="3" maxlength="5" value="130" id="wb-led-ac-vinMax"><span class="unit">V</span></div>',"</div>",'<div class="row">','<label for="wb-led-ac-temp" class="col-2">'+ag.temperature+"</label>",'<div class="col-2" title="Ambient temperature"><input type="text" name="ledOpTAAC" value="30" size="3" id="wb-led-ac-temp"><span class="unit">&deg;C</span></div>',"</div>",'<div class="row">','<label for="wb-led-ac-lm" class="col-2">'+ag.lightoutput+"<br />("+ag.optional+")</label>",'<div class="col-2"><input type="text" name="lightOutputAC" size="3" id="wb-led-ac-lm"><span class="unit">lm</span></div>',"</div>","</div>","</div>",'<div class="row">','<div class="col-3 push-3"><input name="submitLED" type="button" value="'+ag.startdesign+'" class="button red" title="'+ag.ttcreateled+'" id="wb-btn-start-led" /></div>',"</div>","</div>"].join(""));
T[y[3]]=e(['<div class="wb-filters wb-content"><!-- filters tab -->','<div class="row">','<h3 class="col-6 heading filters_wb">'+ag.filters+"</h5>","</div>",'<div class="row">','<a title="'+ag.helphover+'" class="help" href="'+ag.helpurlfilters+'" target="_blank">'+ag.selectactivefiltertype+"</a>","</div>",'<ul class="row top" style="margin:0;">','<li class="col-6"><input type="radio" value="Lowpass" name="filterType" checked="checked" id="wb-filters-lp"><label for="wb-filters-lp">'+ag.lowpass+"</label></li>",'<li class="col-6"><input type="radio" value="Highpass" name="filterType" id="wb-filters-hp"><label for="wb-filters-hp">'+ag.highpass+"</label></li>",'<li class="col-6"><input type="radio" value="Bandpass" name="filterType" id="wb-filters-hp"><label for="wb-filters-hp">'+ag.bandpass+"</label></li>",'<li class="col-6"><input type="radio" value="Bandstop" name="filterType" id="wb-filters-hp"><label for="wb-filters-hp">'+ag.bandstop+"</label></li>",'<li class="col-6"><input type="radio" value="Allpass" name="filterType" id="wb-filters-hp"><label for="wb-filters-hp">'+ag.allpass+"</label></li>","</ul>",'<div class="row " style="margin:0;">','<div class="col-3 push-3">','<input name="submitFilters" type="button" value="'+ag.startdesign+'" class="button red" title="'+ag.ttcreatefilter+'" id="wb-btn-start-filter" />',"</div>","</div>","</div>"].join(""));
T[y[4]]=e(['<div class="wb-clocks wb-content"><!-- clocks tab -->','<div class="row">','<h3 class="col-6 heading clocks_wb">'+ag.clocks+"</h5>","</div>",'<div class="row">','<a title="'+ag.helphover+'" class="help" href="'+ag.helpurlclocks+'" target="_blank">'+ag.enterfreqreq+"</a>","</div>",'<div class="row top">','<ul class="wb-frm col-3">',"<li><label>"+ag.inputfrequency+"</label></li>",'<li><input name="clkInFreq" type="text" size="3" value="25"><span class="unit">MHz</span></li>',"</ul>",'<ul class="wb-frm col-3">',"<li><label>"+ag.outputfreq+"</label></li>",'<li><input name="clkMinOutFreq" type="text" size="3" value="24"><span class="unit">MHz</span></li>','<li><input name="clkTypOutFreq" type="text" size="3" value="27"><span class="unit">MHz</span></li>','<li><input name="clkMaxOutFreq" type="text" size="3" value="25"><span class="unit">MHz</span></li>',"</ul>","</div>",'<div class="row " style="margin:0;">','<div class="col-3 push-3 ">','<input name="submitClock" type="button" value="'+ag.startdesign+'" class="button red" title="'+ag.ttcreateclock+'" id="wb-btn-start-clock" />',"</div>","</div>","</div>"].join(""));
T[y[5]]=e(['<div class="wb-sensors wb-content"><!-- sensors tab -->','<div class="row">','<h3 class="col-6 heading sensors_wb">'+ag.sensors+"</h5>","</div>",'<div class="row">','<a title="'+ag.helphover+'" class="help" href="'+ag.helpurlsensors+'" target="_blank">'+ag.configsensordesign+"</a>","</div>",'<form name="tsform" onsubmit="return false;" style="display:inline">','<div class="row">',"<h4>"+ag.selectasensors+":</h4>",'<select name="selectedTool" id="sensorSelect"><option value="InductiveSensingResolution">'+ag.inductivesensingdesigner+'</option><option value="InductiveSensingSwitching">'+ag.inductivesensingdesigner2+'</option><option value="InductiveSensingCoil">'+ag.inductivepcbdesigner+'</option><option value="SensorAFE">'+ag.sensorAFE+'</option><option value="MedicalAFE">'+ag.medicalAFE+'</option><option value="Sensors">'+ag.sensordesigner+'</option><option value="Ultrasonic">'+ag.ultrasonicsensing+'</option><option value="FDC">'+ag.capacitivesensing+"</option></select>","</div>",'<div class="row">','<div id="InductiveSensingResolution" >','<div class="row">','<label class="col-3" title="'+ag.hoverDistance+'">'+ag.distance+"</label>",'<div class="col-3"><input id="d" type="text" name="d" size="2" maxlength="5" value="0.15" class="txtInputBox"><span class="unit">cm</span><br></div>',"</div>",'<div class="row">','<label class="col-3" title="'+ag.hoverResolution+'">'+ag.resolution+"</label>",'<div class="col-3"><input id="res" type="text" name="res" size="2" maxlength="5" value="15" class="txtInputBox"><span class="unit">&#956;m</span></div>',"</div>",'<div class="row">','<label class="col-3" title="'+ag.hoverTargetdiameter+'">'+ag.targetdiameter+"</label>",'<div class="col-3"><input id="td" type="text" name="td" size="2" maxlength="5" value="5" class="txtInputBox"><span class="unit">cm</span></div>',"</div>",'<div class="row">','<label class="col-3" title="'+ag.targetmaterial+'">'+ag.targetmaterial+"</label>",'<div class="col-3"><select id="tm" name="tm">','<option value="0">'+ag.copper+"</option>",'<option value="1">'+ag.stainless+"(SS304)</option>",'<option value="2" selected="">'+ag.stainless+"(SS416)</option></select></div></div>","</div>",'<div id="InductiveSensingSwitching" style="display:none">','<div class="row">','<label class="col-3">'+ag.switchingDist+"</label>",'<div class="col-3"><input id="switchingDistance" type="text" name="switchingDistance" size="2" maxlength="5" value="3" class="txtInputBox"><span class="unit">mm</span><br></div>',"</div>",'<div class="row">','<label class="col-3">'+ag.closeTargDist+"</label>",'<div class="col-3"><input id="ctargDist" type="text" name="ctargDist" size="2" maxlength="5" value="1" class="txtInputBox"><span class="unit">mm</span></div>',"</div>",'<div class="row">','<label class="col-3">'+ag.maxCoilDia+"</label>",'<div class="col-3"><input id="maxCoilDia" type="text" name="maxCoilDia" size="2" maxlength="5" value="15" class="txtInputBox"><span class="unit">mm</span></div>',"</div>",'<div class="row">','<label class="col-3">'+ag.supplyVolt+"</label>",'<div class="col-3"><input type="radio" name="supVolt" value="1.8" checked="checked">&nbsp;1.8V&nbsp;&nbsp;','<input type="radio" name="supVolt" value="3.3">&nbsp;3.3V',"</div></div>","</div>",'<div id="InductiveSensingCoil" style="display:none">','<div class="row">','<label class="col-3">'+ag.shape+"</label>",'<div class="col-3"><select id="indShape" name="indShape"><option value="Circular">'+ag.circular+'</option><option value="Square">'+ag.square+'</option><option value="Hexagonal">'+ag.hexagonal+'</option><option value="Octagonal">'+ag.octagonal+"</option></select></div>","</div>",'<div class="row">','<label class="col-3">'+ag.outerdiam+"</label>",'<div class="col-3"><input id="outerDiameter" type="text" name="outerDiameter" size="3" maxlength="5" value="400" class="txtInputBox"><span class="unit">mil</span></div>',"</div>",'<div class="row">','<label class="col-3">'+ag.turnsperlayer+"(N)</label>",'<div class="col-3"><input id="turns" type="text" name="turns" size="3" maxlength="5" value="16" class="txtInputBox"></div>',"</div>",'<div class="row">','<label class="col-3">'+ag.layers+" (M)</label>",'<div class="col-3"><input id="layers" type="text" name="layers" size="3" maxlength="5" value="2" class="txtInputBox"></div>',"</div>","</div>",'<div id="SensorAFE" style="display:none;">','<div class="col-3"><input type="radio" name="tsFamily" value="90" checked="checked" id="wb-sensors-rtd"><label for="wb-sensors-rtd">'+ag.rtd+'</label><br><input type="radio" name="tsFamily" value="91" id="wb-sensors-thermocouple"><label for="wb-sensors-thermocouple">'+ag.thermocouple+'</label><br><input type="radio" name="tsFamily" value="92" id="wb-sensors-pressure"><label for="wb-sensors-pressure">'+ag.pressure+'</label><br><input type="radio" name="tsFamily" value="93" id="wb-sensors-load"><label for="wb-sensors-load">'+ag.load+"</label></div>",'<div class="col-3"><input type="radio" name="tsFamily" value="95" id="wb-sensors-gas"><label for="wb-sensors-gas">'+ag.gassensor+'</label><br><input type="radio" name="tsFamily" value="96" id="wb-sensors-co2"><label for="wb-sensors-co2">'+ag.co2+'</label><br><input type="radio" name="tsFamily" value="97" id="wb-sensors-ph"><label for="wb-sensors-ph">'+ag.ph+"</label></div>",'<div class="row"><strong>'+ag.selectDevice+'</strong><select id="sensorAFEDevice">','<option value="LMP90100">LMP90100</option>','<option value="LMP90100">LMP90077</option>','<option value="LMP90100">LMP90078</option>','<option value="LMP90100">LMP90079</option>','<option value="LMP90100">LMP90080</option>','<option value="LMP90100">LMP90097</option>','<option value="LMP90100">LMP90098</option>','<option value="LMP90100">LMP90099</option>','<option value="ADS1220">ADS1220</option>','<option value="ADS1248">ADS1146</option>','<option value="ADS1248">ADS1147</option>','<option value="ADS1248">ADS1148</option>','<option value="ADS1248">ADS1246</option>',"</select></div>","</div>",'<div id="MedicalAFE" style="display:none;">','<div class="col-6"><img style="position:relative;" src="https://webench.ti.com/webench5/pf/images/medical_afe.png" alt="Medical AFE Sensor Diagram"  /><input type="hidden" name="tsFamily" value="98" id="wb-sensors-ecg"></div></div>','<div id="Sensors" style="display:none;">','<div class="col-6"><input type="radio" name="tsFamily" value="81" id="wb-sensors-pressure"><label for="wb-sensors-pressure">'+ag.pressure+'</label><br><input type="radio" name="tsFamily" value="82" id="wb-sensors-thermo"><label for="wb-sensors-thermo">'+ag.thermocouple+'</label><br><input type="radio" name="tsFamily" value="83" id="wb-sensors-photo"><label for="wb-sensors-photo">'+ag.photosensor+"</label></div></div>",'<div id="TempSensors" style="display:none;">','<div class="col-3 push-2"><img style="height:130px;position:relative;" src="https://webench.ti.com/webench5/pf/images/tempSensor.png" alt="Temperature Sensor" /></div></div>','<div id="Ultrasonic" style="display:none;">','<div class="col-6"><ul><li style="background: 0;"><input type="radio" name="evmSelection" checked="checked" value="levelHead" />'+ag.fluidlevel+'</li><li style="background: 0;"><input type="radio" name="evmSelection" value="fluidIDConHead" />'+ag.fluidid+'</li><li style="background: 0;"><input type="radio" name="evmSelection" value="flowHead" />'+ag.watergasheat+"</li></ul></div></div>","</div>",'<div id="FDC" style="display:none">','<div class="row">','<label class="col-3" title="'+ag.hoverMaxSensDiam+'">'+ag.maxSensDiam+"</label>",'<div class="col-3">','<input type="text" id="maxW1" name="maxW1" value="2" size="4"><span class="unit">cm</span>',"</div>","</div>",'<div class="row">','<label class="col-3" title="'+ag.hoverMinGroundDiam+'">'+ag.minGroundDiam+"</label>",'<div class="col-3">','<input type="text" id="minW2" name="minW2" value="100" size="4"><span class="unit">cm</span>',"</div>","</div>",'<div class="row">','<label class="col-3" title="'+ag.hoverMaxDist+'">'+ag.maxDist+"</label>",'<div class="col-3">','<input type="text" id="maxY" value="100" size="4"><span class="unit">cm</span></div>',"</div>",'<div class="row">','<label class="col-3" title="'+ag.hoverProxDist+'">'+ag.proxDist+" </label>",'<div class="col-3">','<input type="text" id="Z" value="10" size="4"><span class="unit">cm</span></div>',"</div>",'<div class="col-6 row" style="text-align:center;" >'+ag.poweredby+':&nbsp;<input type="radio" id="capbattery" name="power" value="battery"> '+ag.pbbattery+'&nbsp;<input type="radio" name="power" value="plug" checked=""> '+ag.pbplugin+"</div></div>","</form>",'<div class="row" >','<div class="col-3 push-3 active"><input name="submitSensor2" type="button" value="'+ag.startdesign+'" class="button red" title="'+ag.ttcreatesensor+'" id="wb-btn-start-sensors" /></div>',"</div>","</div>"].join(""));
T[y[6]]=e(['<div class="wb-interface wb-content"><!-- interface tab -->','<div class="row">','<h3 class="col-6 heading interface_wb">'+ag.wbinterface+"</h5>","</div>",'<div class="row">','<a title="'+ag.helphover+'" class="help" href="'+ag.helpurlinterface+'" target="_blank">'+ag.enterinterface+"</a>","</div>",'<form name="interfaceForm" onsubmit="return false;" >','<div class="row">','<div class="col-6"><span id="designNotes" style="color:red;font-size: 12px;display:none;"><b>Invalid Selection.  Must select a TI part.</b></span></div></div>','<div class="row">','<div class="col-6"><div id="tx" class="svgImgs">','<img src="https://webench.ti.com/webench5/interface/img/N-non-ti-tx-normal.png" alt="Tx" style="position: relative;width:34px;float:left;"><img src="https://webench.ti.com/webench5/interface/img/arrow.png" alt="arrow" style="position: relative;width:11px;height:7px;float: left;margin-top: 16px;">','</div><div id="midChannel" class="svgImgs">','<img src="https://webench.ti.com/webench5/interface/img/N-channel-hover.png" alt="Mid Channel SigCon" style="position: relative;width: 38px;height: 14px;margin-top: 13px;float:left;"><img src="https://webench.ti.com/webench5/interface/img/arrow.png" alt="arrow" style="position: relative;width:11px;height:7px;float: left;margin-top: 16px;"><img src="https://webench.ti.com/webench5/interface/img/N-ti-sigcon-normal.png" alt="Mid Channel SigCon" style="position: relative;width:34px;float:left;"><img src="https://webench.ti.com/webench5/interface/img/arrow.png" alt="arrow" style="position: relative;width:11px;height:7px;float: left;margin-top: 16px;"><img src="https://webench.ti.com/webench5/interface/img/N-channel-hover.png" alt="Mid Channel SigCon" style="position: relative;width: 38px;height: 14px;margin-top: 13px;float:left;"><img src="https://webench.ti.com/webench5/interface/img/arrow.png" alt="arrow" style="position: relative;width:11px;height:7px;float: left;margin-top: 16px;">','</div><div id="rx" class="svgImgs">','<img src="https://webench.ti.com/webench5/interface/img/N-non-ti-rx-normal.png" alt="Rx" style="position: relative;width:34px;float:left;">',"</div>","</div>","</div>",'<div class="row">','<label class="col-2">Tx</label>','<div class="col-4"><select id="selectTx" class="smallW"><option name="genericTx" value="Generic Tx">'+ag.generic+' Tx </option><option name="tiTx" value="TI Tx">TI Tx </option></select></div></div>','<div class="row">','<label class="col-2">'+ag.midchannel+" </label>",'<div class="col-4"><select id="selectMidChannel" class="smallW" ><option name="tiMinChannel" value="TI Mid Channel SigCon">'+ag.timidchannel+'</option><option name="noMinChannel" value="No Mid Channel SigCon">'+ag.nomidchannel+"</option></select></div></div>",'<div class="row">','<label class="col-2">Rx </label>','<div class="col-4"><select id="selectRx" class="smallW"><option name="genericRx" value="Generic Rx">'+ag.generic+' Rx </option><option name="tiRx" value="TI Rx">TI Rx </option></select></div></div>','<div class="row">','<label class="col-2">'+ag.devicemode+" </label>",'<div class="col-4"><select id="selectDeviceMode"><option name="diffDeviceMode" value="Differential">'+ag.differential+'</option><option name="seDeviceMode" value="Single-Ended">'+ag.singleended+"</option></select></div></div>",'<div class="row">','<label class="col-2">'+ag.maxdatarate+" </label>",'<div class="col-4"><input type="text" id="dataRate" value="0" size="6"><span class="unit">Gbps</span></div></div>','<div class="row">','<div class="col-3 push-3">','<input type="submit" class="red button" value="'+ag.startdesign+'" title="Create an interface design">',"</div></div></form></div>"].join(""));
T[y[7]]=e(['<div class="wb-reference wb-content"><!-- reference tab -->','<div class="row">','<h3 class="col-6 heading reference_wb">'+ag.reference+"</h5>","</div>",'<div class="row">','<a title="'+ag.helphover+'" class="help" href="'+ag.helpurlreference+'" target="_blank">'+ag.enterreference+"</a>","</div>",'<form name="referenceForm" onsubmit="return false;" style="display:inline;">','<div class="row">','<img src="https://webench.ti.com/webench5/pf/images/BlockDiag_GeneralSARa.png" border="0" style="position: relative;">',"</div>",'<div class="row " >','<div class="col-3 push-3">','<input name="submitReference" type="submit" value="'+ag.findsolution+'" class="button red" title="Find a reference design" id="wb-btn-start-reference" />',"</div></form>","</div>"].join(""));
T[y[8]]=e(['<div class="wb-battery wb-content"><!-- battery tab -->','<div class="row">','<h3 class="col-6 heading battery_wb">'+ag.battery+"</h3>","</div>",'<div class="row">','<a title="'+ag.helphover+'" class="help" href="'+ag.helpurlbattery+'" target="_blank">'+ag.enterbattery+"</a>","</div>",'<form id="wb-batteryForm" name="wb-batteryForm" onsubmit="return false;">','<div class="row">','<div class="col-3">','<label class="col-h5">'+ag.cellsinparallel+"</label>",'<div class="col-h7"><input type="number" min="1" id="cellParallel" name="cellParallel" value="1"></div>','</div><div class="col-3">','<label class="col-h5" style="word-wrap: break-word;">'+ag.cellcapacity+"</label>",'<div class="col-h7"><input type="text" id="cellCapacity" name="cellCapacity" value="2000" size="4"><span class="unit">mAh</span></div>',"</div>","</div>",'<div class="row">','<div class="col-3">','<label class="col-h5">'+ag.cellsinseries+"</label>",'<div class="col-h7"><input type="number" min="1" id="cellSeries" name="cellSeries" value="1"></div>',"</div>",'<div class="col-3">','<label class="col-h5" style="word-wrap: break-word;">'+ag.totalcapacity+"</label>",'<input type="text" disabled id="totalCapacity" name="totalCapacity" value="2000" size="4"><span class="unit">mAh</span>',"</div>","</div>",'<div class="row">',"<h5>"+ag.entercharger+"</h5>","</div>",'<div class="row">','<label class="col-3">'+ag.chargersource+"</label>",'<div class="col-3"><select id="chSource"><option>'+ag.acadapter+"</option><option>USB</option><option>USB2</option><option>USB3</option><option>"+ag.custom+"</option></select></div>","</div>",'<div class="row">','<div class="col-3">','<label class="col-h5">'+ag.vinMin+"</label>",'<div class="col-h7"><input type="text" id="batteryVinMin" name="vinMin" size="4" value="5"><span class="unit">V</span></div>',"</div>",'<div class="col-3">','<label class="col-h5">'+ag.vinMax+"</label>",'<div class="col-h7"><input id="batteryVinMax" type="text" size="4" name="vinMax" value="6"><span class="unit">V</span></div>',"</div>",'</div><div class="row">','<div class="col-3">','<label class="col-h5">'+ag.iin+"</label>",'<div class="col-h7"><input id="batteryIin" type="text" size="4" name="iinMax" value="1000"><span class="unit">mA</span></div>',"</div>",'<div class="col-3">','<label class="col-h5">'+ag.vchg+"</label>",'<div class="col-h7"><input id="batteryVchg" type="text" size="4" name="vchg" value="4.2"><span class="unit">V</span></div>',"</div>",'</div><div class="row">','<div class="col-3">','<label class="col-h5">'+ag.ichg+"</label>",'<div class="col-h7"><input id="batteryIchg" type="text" size="4" name="ichg" value="1000"><span class="unit">mA</span></div>',"</div>",'<div class="col-3">','<label class="col-h5">'+ag.ambienttemp+"</label>",'<div class="col-h7"><input type="text" name="op_TA" size="4" value="30"><span class="unit">&deg;C</span></div>',"</div>","</div>",'<div class="row ">','<div class="col-3 push-3">','<input name="submitBattery" type="submit" value="'+ag.startdesign+'" class="button red" title="Open a battery design" id="wb-btn-start-battery" />',"</div></div>","</form>","</div>"].join(""));
T[y[9]]=e(['<div class="wb-amplifer wb-content"><!-- amplifier tab -->','<div class="row">','<h3 class="col-6 heading amplifer">'+ag.amplifier+"</h3>","</div>",'<div class="row">','<a title="'+ag.helphover+'" class="help" href="'+ag.helpurlamp+'" target="_blank">'+ag.enteramp+"</a>","</div>",'<form name="amplifierForm" onsubmit="return false;" style="display:inline;">','<div class="row"><strong>'+ag.ampTopology+"</strong></div>",'<ul class="row top" style="margin:0;">','<li class="col-6"><input type="radio" name="ampTopo" checked="checked" value="Non-inverting">&nbsp;'+ag.nonInv+"</li>",'<li class="col-6"><input type="radio" name="ampTopo" value="Inverting">&nbsp;'+ag.inv+"</li>",'<li class="col-6"><input type="radio" name="ampTopo" value="Transimpedance">&nbsp;'+ag.transimp+"</li>","</ul>",'<div class="row"><div class="col-6"><img id="wb_opImage" style="width: 200px;height:125px; position: relative;" src="https://webench.ti.com/webench5/pf/images/NonInvAmpDualSupplyCircuit.png"></div>',"</div>",'<div class="row " >','<div class="col-3 push-3">','<input name="submitAmplifier" type="submit" value="'+ag.startdesign+'" class="button red" title="Start Design" id="wb-btn-start-amplifier" />',"</div></form>","</div>"].join(""));
function L(){var ak,aj=e(['<div id="webench" class="wb-icons">','<div class="wb-head">','<a id="headTitle" href="'+ag.webenchurl+'" target="_blank" style="text-decoration:none">TI Design Tools</a>','<a id="mydesign" href="https://webench.ti.com/appinfo/webench/scripts/my_designs.cgi" target="_blank">MyDesigns<span></span></a>',"</div>",'<div class="wb-menu-wrapper">','<ul class="wb-menu">','<li id="power" class="active" title="'+ag.power+'"><div>'+ag.power+"</div></li>",'<li id="fpga" title="'+ag.fpgaup+'"><div>'+ag.fpgaup+"</div></li>",'<li id="led" title="'+ag.led+'"><div>'+ag.led+"</div></li>",'<li id="filters" title="'+ag.filters+'"><div>'+ag.filters+"</div></li>",'<li id="clocks" title="'+ag.clocks+'"><div>'+ag.clocks+"</div></li>",'<li id="sensors" title="'+ag.sensors+'"><div>'+ag.sensors+"</div></li>",'<li id="interface" title="'+ag.wbinterface+'"><div>'+ag.wbinterface+"</div></li>",'<li id="reference" title="'+ag.reference+'"><div>'+ag.reference+"</div></li>",'<li id="battery" title="'+ag.battery+'"><div>'+ag.battery+"</div></li>",'<li id="amplifier" title="'+ag.amplifier+'"><div>'+ag.amplifier+"</div></li>",'<a href="'+ag.helpurl+'" target="_blank"><li id="help" title="WEBENCH help"><div>WEBENCH help</div></li></a>',"</ul>","</div>"].join("")),al=e('<div id="content-wrapper"></div>'),ai=e('<div id="wb-content-collector"></div>');
al.append(ai);
aj.append(al);
for(ak=0;
ak<G;
ak++){ai.append(T[y[ak]])
}z.append(aj);
_pwrFormSource=T[y[0]].find('input:radio[name="pwrSource"]');
K=T[y[1]].find('input:button[name="submitPA"]');
U=T[y[0]].find('input:button[name="submitPower"]');
J=T[y[1]].find('input:button[name="submitFPGA1"]');
af=T[y[1]].find('input:button[name="submitFPGA2"]');
aa=T[y[2]].find('input:button[name="submitLED"]');
q=T[y[2]].find('input:radio[name="ledSource"]');
ae=T[y[3]].find('input:button[name="submitFilters"]');
t=T[y[4]].find('input:button[name="submitClock"]');
R=T[y[5]].find('input:button[name="submitSensor2"]');
x=T[y[6]].find("input:submit");
v=T[y[7]].find("input:submit");
_batteryFormOpenDesign=T[y[8]].find("input:submit");
_ampFormOpenDesign=T[y[9]].find("input:submit");
K.click(function(){return Q()
});
U.click(function(){return Z()
});
t.click(function(){return Y()
});
aa.click(function(){return P()
});
J.click(function(){return S()
});
af.click(function(){return D()
});
ae.click(function(){return r()
});
R.click(function(){return O()
});
x.click(function(){return C()
});
v.click(function(){return M()
});
_batteryFormOpenDesign.click(function(){return B()
});
_ampFormOpenDesign.click(function(){return E()
})
}function A(){var aj="https://webench.ti.com";
try{if(serverForm){if(serverForm.elements.server.value==0){aj="https://webenchv1.ext.ti.com:8888"
}if(serverForm.elements.server.value==1){aj="https://webenchv1.ext.ti.com:8888"
}if(serverForm.elements.server.value==2){aj="https://cronv3.ext.ti.com:8888"
}if(serverForm.elements.server.value==3){aj="https://wwwv1.ext.ti.com:8888"
}if(serverForm.elements.server.value==4){aj="https://webench-test.ti.com"
}}}catch(ai){}return aj
}function Z(){var ap=window.screen.availWidth-20;
var am=window.screen.availHeight-30;
var at=(window.screen.availWidth-ap)/2;
var aq=(window.screen.availHeight-am)/2;
var ak={source:'input:radio[name="pwrSource"]:checked',line_fsw:'input:radio[name="pwrAChz"]:checked',acVinMin:'input[name="acVinMin"]',acVinMax:'input[name="acVinMax"]',acO1V:'input[name="acO1V"]',acO1I:'input[name="acO1I"]',acOpTA:'input[name="acOpTA"]',dcVinMin:'input[name="dcVinMin"]',dcVinMax:'input[name="dcVinMax"]',dcO1V:'input[name="dcO1V"]',dcO1I:'input[name="dcO1I"]',dcOpTA:'input[name="dcOpTA"]'},au={},av;
for(av in ak){au[av]=T[y[0]].find(ak[av])
}var aj=(au.source.val()=="AC"),ar=(au.line_fsw.val()=="50");
var al="";
if(aj){if(ar){al="&source=AC&line_fsw=50"
}else{al="&source=AC&line_fsw=60"
}if(e("#isolatedOutput1")[0].checked){al+="&isolated=Y"
}au.VinMin=au.acVinMin;
au.VinMax=au.acVinMax;
au.O1V=au.acO1V;
au.O1I=au.acO1I;
au.op_TA=au.acOpTA
}else{if(e("#isolatedOutput")[0].checked){al+="&isolated=Y"
}au.VinMin=au.dcVinMin;
au.VinMax=au.dcVinMax;
au.O1V=au.dcO1V;
au.O1I=au.dcO1I;
au.op_TA=au.dcOpTA
}var ao="";
T[y[0]].attr("action","https://webench.ti.com/webench5/power/webench5.cgi").attr("target","_blank");
var an=A();
var ai=an+"/webench5/power/webench5.cgi?origin=ti_panel&lang_chosen="+u+"&VinMin="+au.VinMin.val()+"&VinMax="+au.VinMax.val()+l+al+ao+"&O1V="+au.O1V.val()+"&O1I="+au.O1I.val();
if(!aj){ai+="&op_TA="+au.op_TA.val()
}o=window.open(ai,"_blank","toolbar=0,status=0,history=no,location=no,scrollbars=yes,resizable=yes,left=0,top=0,width="+ap+",height="+am);
if(navigator.appName.indexOf("Microsoft")==-1){if(navigator.appVersion.charAt(0)>="3"){o.focus()
}}if(o&&o.opener==null){o.opener=self
}F("Power");
return false
}function Q(){var an=window.screen.availWidth-20;
var ak=window.screen.availHeight-30;
var ai=(window.screen.availWidth-an)/2;
var am=(window.screen.availHeight-ak)/2;
var al=A();
var aj=al+"/webench5/power/webench5.cgi?origin=ti_panel&app=powerarchitect&lang_chosen="+u+l;
o=window.open(aj,"_blank","toolbar=0,status=0,history=no,location=no,scrollbars=yes,resizable=yes,left=0,top=0,width="+an+",height="+ak);
if(navigator.appName.indexOf("Microsoft")==-1){if(navigator.appVersion.charAt(0)>="3"){o.focus()
}}if(o&&o.opener==null){o.opener=self
}F("powerarch");
return false
}function S(){var al=window.screen.availWidth-20;
var aj=window.screen.availHeight-30;
var ao=(window.screen.availWidth-al)/2;
var an=(window.screen.availHeight-aj)/2;
var ap=T[y[1]].find('input:radio[name="fpga_vendor"]:checked').val();
var am="";
if(ap!=""){am="&fpga_vendor="+ap
}var aq="";
var ak=A();
var ai=ak+"/webench5/power/webench5.cgi?origin=ti_panel&app=fpga_architect&lang_chosen="+u+am+aq+l;
o=window.open(ai,"_blank","toolbar=0,status=0,history=no,location=no,scrollbars=yes,resizable=yes,left=0,top=0,width="+al+",height="+aj);
if(navigator.appName.indexOf("Microsoft")==-1){if(navigator.appVersion.charAt(0)>="3"){o.focus()
}}if(o&&o.opener==null){o.opener=self
}F("FPGA");
return false
}function D(){var al=window.screen.availWidth-20;
var aj=window.screen.availHeight-30;
var ao=(window.screen.availWidth-al)/2;
var an=(window.screen.availHeight-aj)/2;
var ap=T[y[1]].find('input:radio[name="up_vendor"]:checked').val();
var am="";
if(ap!=""){am="&fpga_vendor="+ap
}var aq="";
var ak=A();
var ai=ak+"/webench5/power/webench5.cgi?origin=ti_panel&app=processor_architect&lang_chosen="+u+am+aq+l;
o=window.open(ai,"_blank","toolbar=0,status=0,history=no,location=no,scrollbars=yes,resizable=yes,left=0,top=0,width="+al+",height="+aj);
if(navigator.appName.indexOf("Microsoft")==-1){if(navigator.appVersion.charAt(0)>="3"){o.focus()
}}if(o&&o.opener==null){o.opener=self
}F("up");
return false
}function P(){var aj="https://webench.ti.com/webench5/power/webench5.cgi",ak={source:'input:radio[name="ledSource"]:checked',line_fsw:'input:radio[name="line_fsw"]:checked',VinMinDC:'input[name="ledVinMinDC"]',VinMaxDC:'input[name="ledVinMaxDC"]',VinMinAC:'input[name="ledVinMinAC"]',VinMaxAC:'input[name="ledVinMaxAC"]',lightOutputDC:'input[name="lightOutputDC"]',lightOutputAC:'input[name="lightOutputAC"]',opTaDC:'input[name="ledOpTADC"]',opTaAC:'input[name="ledOpTAAC"]'},ar={},at,aq;
for(at in ak){ar[at]=T[y[2]].find(ak[at])
}var ai=(ar.source.val()=="DC"),ap=(ar.line_fsw.val()=="50");
ar.ledparallel=1;
ar.ledseries=1;
if(ai){ar.VinMin=ar.VinMinDC;
ar.VinMax=ar.VinMaxDC;
ar.lightOutput=ar.lightOutputDC;
ar.op_TA=ar.opTaDC
}else{ar.VinMin=ar.VinMinAC;
ar.VinMax=ar.VinMaxAC;
ar.lightOutput=ar.lightOutputAC;
ar.op_TA=ar.opTaAC;
ar.ledseries=2
}var an="";
var ao=window.screen.availWidth-20;
var al=window.screen.availHeight-30;
var am=A();
aj=am+"/webench5/power/webench5.cgi?origin=ti_panel&application=LED_DRIVER&lang_chosen="+u+l+an;
if(ai){aq=aj+"&VinMin="+ar.VinMin.val()+"&VinMax="+ar.VinMax.val()+"&ledseries="+ar.ledseries+"&ledparallel="+ar.ledparallel+"&lightoutput="+ar.lightOutput.val()+"&source=DC&op_TA="+ar.op_TA.val()
}else{if(ap){aq=aj+"&VinMin="+ar.VinMin.val()+"&VinMax="+ar.VinMax.val()+"&ledseries=2&ledparallel="+ar.ledparallel+"&lightoutput="+ar.lightOutput.val()+"&source=AC&line_fsw=50&op_TA="+ar.op_TA.val()
}else{aq=aj+"&VinMin="+ar.VinMin.val()+"&VinMax="+ar.VinMax.val()+"&ledseries=2&ledparallel="+ar.ledparallel+"&lightoutput="+ar.lightOutput.val()+"&source=AC&line_fsw=60&op_TA="+ar.op_TA.val()
}}o=window.open(aq,"_blank","toolbar=no,status=no,history=no,location=no,scrollbars=yes,resizable=yes,left=0,top=0,width="+ao+",height="+al);
if(navigator.appName.indexOf("Microsoft")==-1){if(navigator.appVersion.charAt(0)>="3"){o.focus()
}}if(o&&o.opener==null){o.opener=self
}F("LED");
return false
}function Y(){var an=window.screen.availWidth-20;
var ak=window.screen.availHeight-30;
formFields={inFreq:'input[name="clkInFreq"]',outFreq1:'input[name="clkMinOutFreq"]',outFreq2:'input[name="clkTypOutFreq"]',outFreq3:'input[name="clkMaxOutFreq"]'};
var ao={};
var ar;
for(ar in formFields){ao[ar]=T[y[4]].find(formFields[ar])
}var aj=ao.inFreq.val();
var at=ao.outFreq1.val();
var aq=ao.outFreq2.val();
var ap=ao.outFreq3.val();
var am=/\s/g;
aj=aj.replace(am,"");
at=at.replace(am,"");
aq=aq.replace(am,"");
ap=ap.replace(am,"");
var al=A();
var ai=al+"/webench5/power/webench5.cgi?origin=ti_panel&app=clockarchitect&input1="+encodeURIComponent(aj)+"&output1="+encodeURIComponent(at)+"&output2="+encodeURIComponent(aq)+"&output3="+encodeURIComponent(ap);
o=window.open(ai,"_blank","toolbar=0,status=0,history=no,location=no,scrollbars=yes,resizable=yes,left=0,top=0,width="+an+",height="+ak);
if(navigator.appName.indexOf("Microsoft")==-1){if(navigator.appVersion.charAt(0)>="3"){o.focus()
}}if(o.opener==null){o.opener=self
}F("Clocks");
return false
}function r(){var am=window.screen.availWidth-20;
var ai=window.screen.availHeight-30;
var ao="";
formFields={filterType:'input:radio[name="filterType"]:checked'};
var aj={};
var al;
for(al in formFields){aj[al]=T[y[3]].find(formFields[al])
}ao=aj.filterType.val();
var an=A();
var ak=an+"/webench5/power/webench5.cgi?origin=ti_panel&app=filterarchitect&filterType="+ao;
o=window.open(ak,"_blank","directories=no,left=0,top=0,height="+ai+",width="+am+",location=no,menubar=no,status=no,scrollbars=yes,resizable=yes");
if(navigator.appName.indexOf("Microsoft")==-1){if(navigator.appVersion.charAt(0)>="3"){o.focus()
}}if(o.opener==null){o.opener=self
}F("Filter");
return false
}function O(){var ar=window.screen.availWidth-20;
var al=window.screen.availHeight-30;
var aj="Sensors";
if(tsform.selectedTool.value=="MedicalAFE"){ap=5
}else{if(tsform.selectedTool.value=="InductiveSensingResolution"||tsform.selectedTool.value=="InductiveSensingCoil"||tsform.selectedTool.value=="InductiveSensingSwitching"){ap=0
}else{if(tsform.selectedTool.value=="Ultrasonic"){ap=22
}else{if(tsform.selectedTool.value=="FDC"){ap=23
}else{var aq="_parent",at=["80","81","82","83","70","98","90","91","92","93","94","95","96","97","98"],ao=T[y[5]].find('input:radio[name="tsFamily"]:checked').val(),av=T[y[5]].find('input:radio[name="tsFamily"]:checked')[0].id,ap=e.inArray(ao,at),au
}}}}if(ap>=6&&ap<=10){var am=A();
au=am+"/webench5/sensorafe/?part="+e("#sensorAFEDevice").val()+"&origin=ti_panel&lang_chosen="+u+l+"&type="+av.replace("wb-sensors-","");
aq="_blank";
aj="Sensorsafe"
}else{if(ap==5){var am=A();
au=am+"/webench5/sensorafe/?part=LMP90507&origin=ti_panel&lang_chosen="+u+l;
aq="_blank";
aj="medicalafe"
}else{if(ap==11){var am=A();
au=am+"/webench5/sensorafe/?part="+e("#sensorAFEDevice").val()+"&origin=ti_panel&lang_chosen="+u+l;
aq="_blank";
aj="Sensorsafe"
}else{if(ap==12){var am=A();
au=am+"/webench5/sensorafe/?part="+e("#sensorAFEDevice").val()+"&origin=ti_panel&lang_chosen="+u+l;
aq="_blank";
aj="Sensorsafe"
}else{if(ap==13){var am=A();
au=am+"/webench5/sensorafe/?part="+e("#sensorAFEDevice").val()+"&origin=ti_panel&lang_chosen="+u+l;
aq="_blank";
aj="Sensorsafe"
}else{if(ap==0){if(tsform.selectedTool.value=="InductiveSensingCoil"){ar=window.screen.availWidth*7/10;
al=window.screen.availHeight*9/10;
var am=A();
au=am+"/wb5/LDC/#/spirals?origin=ti_panel&lang_chosen="+u+l+"&shape="+tsform.indShape.value+"&dout="+tsform.outerDiameter.value+"&layers="+tsform.layers.value+"&turns="+tsform.turns.value;
aj="coilsensors"
}else{if(tsform.selectedTool.value=="InductiveSensingResolution"){var am=A();
au=am+"/webench5/ldc/?origin=ti_panel&lang_chosen="+u+l+"&d="+tsform.d.value+"&res="+tsform.res.value+"&td="+tsform.td.value+"&tm="+tsform.tm.value;
aj="ldcPositionSensors"
}else{if(tsform.switchingDistance.value.length<=0||(tsform.switchingDistance.value*1)!=tsform.switchingDistance.value){alert("Please enter a valid numeric value for Switching Distance.\n");
return false
}if(tsform.switchingDistance.value<1||tsform.switchingDistance.value>100){alert("Switching Distance must be a value between 1 and 100");
return false
}if(tsform.ctargDist.value.length<=0||(tsform.ctargDist.value*1)!=tsform.ctargDist.value){alert("Please enter a valid numeric value for Closest Target Distance.\n");
return false
}if(tsform.ctargDist.value<0.1||parseFloat(tsform.ctargDist.value)>parseFloat(tsform.switchingDistance.value)){alert("Closest Target Distance must be a value between 0.1 and Switching Distance value");
return false
}if(tsform.maxCoilDia.value.length<=0||(tsform.maxCoilDia.value*1)!=tsform.maxCoilDia.value){alert("Please enter a valid numeric value for Max Coil Dia.\n");
return false
}if(tsform.maxCoilDia.value<3||tsform.maxCoilDia.value>60){alert("Closest Target Distance must be a value between 3 and 60");
return false
}sv=(tsform.supVolt[0].checked)?1.8:3.3;
var am=A();
au=am+"/webench5/ldc/?origin=ti_panel&part=ldc0851&lang_chosen="+u+l+"&sd="+tsform.switchingDistance.value+"&ctd="+tsform.ctargDist.value+"&cdmax="+tsform.maxCoilDia.value+"&sv="+sv;
aj="ldcOnOffSensors"
}}aq="_blank"
}else{if(ap==1){var am=A();
au=am+"/webench5/sensor/pressure.html?origin=ti_panel&lang_chosen="+u+l;
aq="_blank";
aj="pressureSensors"
}else{if(ap==2){var am=A();
au=am+"/webench5/sensor/thermocouple.html?origin=ti_panel&lang_chosen="+u+l;
aq="_blank";
aj="thermocoupleSensors"
}else{if(ap==3){var am=A();
au=am+"/webench5/sensor/photodiode.html?origin=ti_panel&lang_chosen="+u+l;
aq="_blank";
aj="photodiodeSensors"
}else{if(ap==22){var an="levelHead";
for(var ak=0;
ak<tsform.evmSelection.length;
ak++){if(tsform.evmSelection[ak].checked){an=tsform.evmSelection[ak].value
}}var am=A();
au=am+"/webench5/TDC/index.html?origin=ti_panel&app="+an;
aq="_blank";
aj="tdcsensors"
}else{if(ap==23){var ai="rp";
if(!document.getElementById("capbattery").checked){ai="l"
}var am=A();
au=am+"/webench5/fdc/?origin=ti_panel&lang_chosen="+u+l+"&w1="+tsform.maxW1.value+"&w2="+tsform.minW2.value+"&y="+tsform.maxY.value+"&z="+tsform.Z.value+"&power="+ai;
aq="_blank";
aj="fdcensors"
}else{au="//"+j+"/sensing-products/temperature-sensors/local-analog/overview.html";
aq="_blank";
aj="Sensors"
}}}}}}}}}}}o=window.open(au,aq,"menubar=no,status=no,history=no,location=no,toolbar=no,scrollbars=yes,resizable=yes,width="+ar+",height="+al);
if(navigator.appName.indexOf("Microsoft")==-1){if(navigator.appVersion.charAt(0)>="3"){o.focus()
}}if(o&&o.opener==null){o.opener=self
}F(aj);
return false
}function C(){var an=0;
var ai="";
var ao=document.getElementById("selectTx");
var aq=document.getElementById("selectMidChannel");
var ak=document.getElementById("selectRx");
if(ao.value=="TI Tx"){if(aq.value=="TI Mid Channel SigCon"){if(ak.value=="TI Rx"){an=7
}else{an=5
}}else{if(ak.value=="TI Rx"){an=3
}else{an=1
}}}else{if(aq.value=="TI Mid Channel SigCon"){if(ak.value=="TI Rx"){an=6
}else{an=4
}}else{if(ak.value=="TI Rx"){an=2
}else{an=0;
alert("Invalid Selection.  Must pick atleast one TI part.")
}}}if(document.getElementById("selectDeviceMode").value=="Differential"){ai="DIF"
}else{if(document.getElementById("selectDeviceMode").value=="Single-Ended"){ai="SE"
}}var ap=window.screen.availWidth-20;
var al=window.screen.availHeight-30;
var am=A();
var aj=am+"/webench5/power/webench5.cgi?origin=ti_panel&app=interfacedesigner&designnumber="+an+"&datarate="+document.getElementById("dataRate").value+"&devicemode="+ai;
o=window.open(aj,"_blank","toolbar=no,status=no,history=no,location=no,scrollbars=yes,resizable=yes,left=0,top=0,width="+ap+",height="+al);
if(navigator.appName.indexOf("Microsoft")==-1){if(navigator.appVersion.charAt(0)>="3"){o.focus()
}}if(o&&o.opener==null){o.opener=self
}F("Interface");
return false
}function M(){var al=window.screen.availWidth-20;
var aj=window.screen.availHeight-30;
var ak=A();
var ai=ak+"/webench5/voltagereference/?origin=ti_panel";
o=window.open(ai,"_blank","toolbar=0,status=0,history=no,location=no,scrollbars=yes,resizable=yes,left=0,top=0,width="+al+",height="+aj);
if(navigator.appName.indexOf("Microsoft")==-1){if(navigator.appVersion.charAt(0)>="3"){o.focus()
}}if(o.opener==null){o.opener=self
}F("Reference");
return false
}function B(){var am=document.getElementById("wb-batteryForm");
if(am.cellParallel.value!=parseInt(am.cellParallel.value)){alert("Cells in Parallel must be an integer");
return false
}if(am.cellParallel.value<=0){alert("Cells in Parallel must be greater than 0");
return false
}if(am.cellSeries.value!=parseInt(am.cellSeries.value)){alert("Cells in Series must be an integer");
return false
}if(am.cellSeries.value<=0){alert("Cells in Series must be greater than 0");
return false
}if(am.cellCapacity.value<=0){alert("Cells Capacity must be greater than 0");
return false
}if(am.vinMin.value*1!=am.vinMin.value||am.vinMin.value*1<0){alert("VinMin must be a number greater than 0");
return false
}if(am.vinMax.value*1!=am.vinMax.value||am.vinMax.value*1<0){alert("VinMax must be a number greater than 0");
return false
}if(am.vinMin.value*1>am.vinMax.value*1){alert("VinMin must lower than VinMax");
return false
}if(am.iinMax.value*1!=am.iinMax.value||am.iinMax.value*1<0){alert("IinMax must be a number greater than 0");
return false
}if(am.vchg.value*1!=am.vchg.value||am.vchg.value*1<0){alert("Vchg must be a number greater than 0");
return false
}if(am.vchg.value*1!=am.vchg.value||am.vchg.value*1>6){alert("Vchg input is too high");
return false
}if(am.ichg.value*1!=am.ichg.value||am.ichg.value*1<0){alert("Ichg must be a number greater than 0");
return false
}if(am.op_TA.value*1!=am.op_TA.value||am.op_TA.value*1<-70){alert("Temperature is too low");
return false
}if(am.op_TA.value*1!=am.op_TA.value||am.op_TA.value*1>200){alert("Temperature is too high");
return false
}var ai=parseInt(am.cellParallel.value);
var ap=parseInt(am.cellCapacity.value);
var ak=ai*ap;
var an=A();
var aj=an+"/webench5/power/webench5.cgi?application=BMSCHARGER&origin=ti_panel&lang_chosen="+u+l+"&cellCountSeries="+am.cellSeries.value+"&cellCountParallel="+am.cellParallel.value+"&cellCapacity="+am.cellCapacity.value+"&totalCapacity="+ak+"&vinMin="+am.vinMin.value+"&vinMax="+am.vinMax.value+"&vChg="+am.vchg.value+"&iin="+(Number(am.iinMax.value)/1000)+"&ichg="+(Number(am.ichg.value)/1000)+"&op_ta="+am.op_TA.value;
var ao=window.screen.availWidth-20;
var al=window.screen.availHeight-30;
o=window.open(aj,"_blank","toolbar=no,status=no,history=no,location=no,scrollbars=yes,resizable=yes,left=0,top=0,width="+ao+",height="+al);
if(navigator.appName.indexOf("Microsoft")==-1){if(navigator.appVersion.charAt(0)>="3"){o.focus()
}}if(o&&o.opener==null){o.opener=self
}F("Battery");
return false
}function E(){var ar=window.screen.availWidth-20;
var am=window.screen.availHeight-30;
var ak=document.forms.amplifierForm;
var al="General Inverting Amplifier";
var av="Inverting";
var at=ak.elements.ampTopo;
var ai=0,ao=70,au="Y";
for(var ap=0;
ap<at.length;
ap++){var aq=at[ap];
if(aq.checked){if(aq.value=="Inverting"){al="General Inverting Amplifier";
av="Inverting"
}if(aq.value=="Non-inverting"){al="General Non-Inverting Amplifier";
av="Non-inverting"
}if(aq.value=="Transimpedance"){al="Photodiode (Transimpedance) Amplifier";
av="Zero Reverse Bias";
ai=-10;
ao=100;
au="N"
}}}var an=A();
var aj=an+"/webench5/power/webench5.cgi?app=amplifierdesigner&amptamin="+ai+"&amptamax="+ao+"&ampcategory="+encodeURIComponent(al).replace(/\(/g,"%28").replace(/\)/g,"%29")+"&amptopology="+encodeURIComponent(av)+"&ampdualsupply="+au+"&origin=ti_panel";
o=window.open(aj,"_blank","toolbar=no,status=no,history=no,location=no,scrollbars=yes,resizable=yes,left=0,top=0,width="+ar+",height="+am);
if(navigator.appName.indexOf("Microsoft")==-1){if(navigator.appVersion.charAt(0)>="3"){o.focus()
}}if(o&&o.opener==null){o.opener=self
}F("Amplifier");
return false
}function w(ai){if(ai=="1"){e(".wb-tab-other li").click();
e("#fpga").click();
return
}if(ai=="2"){e(".wb-tab-other li").click();
e("#led").click();
return
}if(ai=="3"){e(".wb-tab-other li").click();
e("#filters").click();
return
}if(ai=="4"){e(".wb-tab-other li").click();
e("#clocks").click();
return
}if(ai=="5"){e(".wb-tab-other li").click();
e("#sensors").click();
return
}if(ai=="6"){e(".wb-tab-other li").click();
e("#interface").click();
return
}if(ai=="7"){e(".wb-tab-other li").click();
e("#reference").click();
return
}if(ai=="8"){e(".wb-tab-other li").click();
e("#battery").click();
return
}if(ai=="9"){e(".wb-tab-other li").click();
e("#amplifier").click();
return
}}function F(ai){if(typeof window.linkCode=="function"){window.linkCode(ai+"_"+m.lang+"_"+z[0].id,"Webench Submit",document.URL)
}}L();
e(".wb-menu li").click(function(){e(".wb-menu-wrapper").removeClass("active");
e("#wb-content-collector").removeClass("secondary")
});
e("input[type=radio]").change(function(){e("input[type=radio]").removeClass("active");
e("input[type=radio]:checked").addClass("active");
if(e("#wb-dc").hasClass("active")){e(".wb-pwr-ac").removeClass("active");
e(".wb-pwr-type").removeClass("active");
e(".wb-pwr-dc").addClass("active")
}else{e(".wb-pwr-dc").removeClass("active");
e(".wb-pwr-type").addClass("active");
e(".wb-pwr-ac").addClass("active")
}if(e("#wb-led-dc").hasClass("active")){e(".wb-led-ac").removeClass("active");
e(".wb-led-type").removeClass("active");
e(".wb-pwr-dc").addClass("active")
}else{e(".wb-led--dc").removeClass("active");
e(".wb-led-type").addClass("active");
e(".wb-led-ac").addClass("active")
}});
e(".wb-tab-other li").click(function(){e("#power").removeClass("active");
e(".wb-tab-other li").removeClass("active");
e(".wb-tab-other").addClass("active");
e(this).addClass("active")
});
e("#power").click(function(){e(".wb-tab-other li").removeClass("active");
e(".wb-tab-other").removeClass("active");
e("#wb-content-collector").removeClass();
e("#wb-content-collector").addClass("power");
e(this).addClass("active")
});
e("#fpga").click(function(){e("#wb-content-collector").removeClass();
e("#wb-content-collector").addClass("fpga")
});
e("#led").click(function(){e("#wb-content-collector").removeClass();
e("#wb-content-collector").addClass("led")
});
e("#filters").click(function(){e("#wb-content-collector").removeClass();
e("#wb-content-collector").addClass("filters")
});
e("#clocks").click(function(){e("#wb-content-collector").removeClass();
e("#wb-content-collector").addClass("clocks")
});
e("#sensors").click(function(){e("#wb-content-collector").removeClass();
e("#wb-content-collector").addClass("sensors")
});
e("#interface").click(function(){e("#wb-content-collector").removeClass();
e("#wb-content-collector").addClass("interface")
});
e("#reference").click(function(){e("#wb-content-collector").removeClass();
e("#wb-content-collector").addClass("reference")
});
e("#battery").click(function(){e("#wb-content-collector").removeClass();
e("#wb-content-collector").addClass("battery")
});
e("#amplifier").click(function(){e("#wb-content-collector").removeClass();
e("#wb-content-collector").addClass("amplifier")
});
e("#power").click(function(){e(".wb-menu li").removeClass("active");
e(this).addClass("active")
});
e(".wb-icons #clocks").click(function(){e(".wb-menu li").removeClass("active");
e(this).addClass("active")
});
e(".wb-icons #led").click(function(){e(".wb-menu li").removeClass("active");
e(this).addClass("active")
});
e(".wb-icons #sensors").click(function(){e(".wb-menu li").removeClass("active");
e(this).addClass("active")
});
e(".wb-icons #fpga").click(function(){e(".wb-menu li").removeClass("active");
e(this).addClass("active")
});
e(".wb-icons #filters").click(function(){e(".wb-menu li").removeClass("active");
e(this).addClass("active")
});
e(".wb-icons #interface").click(function(){e(".wb-menu li").removeClass("active");
e(this).addClass("active")
});
e(".wb-icons #reference").click(function(){e(".wb-menu li").removeClass("active");
e(this).addClass("active")
});
e(".wb-icons #battery").click(function(){e(".wb-menu li").removeClass("active");
e(this).addClass("active")
});
e(".wb-icons #amplifier").click(function(){e(".wb-menu li").removeClass("active");
e(this).addClass("active")
});
e(".wb-sensors input[type=radio]").change(function(){if(e("#wb-sensors-temp").hasClass("active")){e("#wb-tmp-btn").addClass("active");
e("#wb-tmp-btn").next().removeClass("active")
}else{e("#wb-tmp-btn").removeClass("active");
e("#wb-tmp-btn").next().addClass("active")
}});
e("#selectTx").on("change",ad);
e("#selectRx").on("change",V);
e("#selectMidChannel").on("change",I);
e("#sensorSelect").on("change",p);
e("#chSource").on("change",s);
e("#batteryVinMin").on("change",X);
e("#batteryVinMax").on("change",X);
e("#batteryIin").on("change",X);
e("#batteryVchg").on("change",X);
e("#batteryIchg").on("change",X);
e("#cellParallel").on("change",W);
e("#cellCapacity").on("change",W);
e('input:radio[name="tsFamily"]').change(function(){var ai=e('input:radio[name="tsFamily"]:checked').val();
if(ai==90){e("#sensorAFEDevice").empty();
option=e("<option></option>").attr("value","LMP90100").text("LMP90100");
e("#sensorAFEDevice").append(option);
option=e("<option></option>").attr("value","LMP90100").text("LMP90077");
e("#sensorAFEDevice").append(option);
option=e("<option></option>").attr("value","LMP90100").text("LMP90078");
e("#sensorAFEDevice").append(option);
option=e("<option></option>").attr("value","LMP90100").text("LMP90079");
e("#sensorAFEDevice").append(option);
option=e("<option></option>").attr("value","LMP90100").text("LMP90080");
e("#sensorAFEDevice").append(option);
option=e("<option></option>").attr("value","LMP90100").text("LMP90097");
e("#sensorAFEDevice").append(option);
option=e("<option></option>").attr("value","LMP90100").text("LMP90098");
e("#sensorAFEDevice").append(option);
option=e("<option></option>").attr("value","LMP90100").text("LMP90099");
e("#sensorAFEDevice").append(option);
option=e("<option></option>").attr("value","ADS1220").text("ADS1220");
e("#sensorAFEDevice").append(option);
option=e("<option></option>").attr("value","ADS1248").text("ADS1146");
e("#sensorAFEDevice").append(option);
option=e("<option></option>").attr("value","ADS1248").text("ADS1147");
e("#sensorAFEDevice").append(option);
option=e("<option></option>").attr("value","ADS1248").text("ADS1148");
e("#sensorAFEDevice").append(option);
option=e("<option></option>").attr("value","ADS1248").text("ADS1246");
e("#sensorAFEDevice").append(option)
}else{if(ai==91){e("#sensorAFEDevice").empty();
option=e("<option></option>").attr("value","LMP90100").text("LMP90100");
e("#sensorAFEDevice").append(option);
option=e("<option></option>").attr("value","LMP90100").text("LMP90077");
e("#sensorAFEDevice").append(option);
option=e("<option></option>").attr("value","LMP90100").text("LMP90078");
e("#sensorAFEDevice").append(option);
option=e("<option></option>").attr("value","LMP90100").text("LMP90079");
e("#sensorAFEDevice").append(option);
option=e("<option></option>").attr("value","LMP90100").text("LMP90080");
e("#sensorAFEDevice").append(option);
option=e("<option></option>").attr("value","LMP90100").text("LMP90097");
e("#sensorAFEDevice").append(option);
option=e("<option></option>").attr("value","LMP90100").text("LMP90098");
e("#sensorAFEDevice").append(option);
option=e("<option></option>").attr("value","LMP90100").text("LMP90099");
e("#sensorAFEDevice").append(option);
option=e("<option></option>").attr("value","ADS1220").text("ADS1220");
e("#sensorAFEDevice").append(option);
option=e("<option></option>").attr("value","ADS1248").text("ADS1146");
e("#sensorAFEDevice").append(option);
option=e("<option></option>").attr("value","ADS1248").text("ADS1147");
e("#sensorAFEDevice").append(option);
option=e("<option></option>").attr("value","ADS1248").text("ADS1148");
e("#sensorAFEDevice").append(option);
option=e("<option></option>").attr("value","ADS1118").text("ADS1118");
e("#sensorAFEDevice").append(option);
option=e("<option></option>").attr("value","ADS1248").text("ADS1246");
e("#sensorAFEDevice").append(option)
}else{if(ai==92){e("#sensorAFEDevice").empty();
option=e("<option></option>").attr("value","LMP90100").text("LMP90100");
e("#sensorAFEDevice").append(option);
option=e("<option></option>").attr("value","LMP90100").text("LMP90077");
e("#sensorAFEDevice").append(option);
option=e("<option></option>").attr("value","LMP90100").text("LMP90078");
e("#sensorAFEDevice").append(option);
option=e("<option></option>").attr("value","LMP90100").text("LMP90079");
e("#sensorAFEDevice").append(option);
option=e("<option></option>").attr("value","LMP90100").text("LMP90080");
e("#sensorAFEDevice").append(option);
option=e("<option></option>").attr("value","LMP90100").text("LMP90097");
e("#sensorAFEDevice").append(option);
option=e("<option></option>").attr("value","LMP90100").text("LMP90098");
e("#sensorAFEDevice").append(option);
option=e("<option></option>").attr("value","LMP90100").text("LMP90099");
e("#sensorAFEDevice").append(option);
option=e("<option></option>").attr("value","ADS1248").text("ADS1146");
e("#sensorAFEDevice").append(option);
option=e("<option></option>").attr("value","ADS1248").text("ADS1147");
e("#sensorAFEDevice").append(option);
option=e("<option></option>").attr("value","ADS1248").text("ADS1148");
e("#sensorAFEDevice").append(option);
option=e("<option></option>").attr("value","ADS1248").text("ADS1246");
e("#sensorAFEDevice").append(option)
}else{if(ai==93){e("#sensorAFEDevice").empty();
option=e("<option></option>").attr("value","LMP90100").text("LMP90100");
e("#sensorAFEDevice").append(option);
option=e("<option></option>").attr("value","LMP90100").text("LMP90077");
e("#sensorAFEDevice").append(option);
option=e("<option></option>").attr("value","LMP90100").text("LMP90078");
e("#sensorAFEDevice").append(option);
option=e("<option></option>").attr("value","LMP90100").text("LMP90079");
e("#sensorAFEDevice").append(option);
option=e("<option></option>").attr("value","LMP90100").text("LMP90080");
e("#sensorAFEDevice").append(option);
option=e("<option></option>").attr("value","LMP90100").text("LMP90097");
e("#sensorAFEDevice").append(option);
option=e("<option></option>").attr("value","LMP90100").text("LMP90098");
e("#sensorAFEDevice").append(option);
option=e("<option></option>").attr("value","LMP90100").text("LMP90099");
e("#sensorAFEDevice").append(option);
option=e("<option></option>").attr("value","ADS1220").text("ADS1220");
e("#sensorAFEDevice").append(option);
option=e("<option></option>").attr("value","ADS1248").text("ADS1146");
e("#sensorAFEDevice").append(option);
option=e("<option></option>").attr("value","ADS1248").text("ADS1147");
e("#sensorAFEDevice").append(option);
option=e("<option></option>").attr("value","ADS1248").text("ADS1148");
e("#sensorAFEDevice").append(option);
option=e("<option></option>").attr("value","ADS1248").text("ADS1246");
e("#sensorAFEDevice").append(option)
}else{if(ai==94){e("#sensorAFEDevice").empty();
option=e("<option></option>").attr("value","LMP90100").text("LMP90100");
e("#sensorAFEDevice").append(option);
option=e("<option></option>").attr("value","LMP90100").text("LMP90077");
e("#sensorAFEDevice").append(option);
option=e("<option></option>").attr("value","LMP90100").text("LMP90078");
e("#sensorAFEDevice").append(option);
option=e("<option></option>").attr("value","LMP90100").text("LMP90079");
e("#sensorAFEDevice").append(option);
option=e("<option></option>").attr("value","LMP90100").text("LMP90080");
e("#sensorAFEDevice").append(option);
option=e("<option></option>").attr("value","LMP90100").text("LMP90097");
e("#sensorAFEDevice").append(option);
option=e("<option></option>").attr("value","LMP90100").text("LMP90098");
e("#sensorAFEDevice").append(option);
option=e("<option></option>").attr("value","LMP90100").text("LMP90099");
e("#sensorAFEDevice").append(option);
option=e("<option></option>").attr("value","ADS1248").text("ADS1146");
e("#sensorAFEDevice").append(option);
option=e("<option></option>").attr("value","ADS1248").text("ADS1147");
e("#sensorAFEDevice").append(option);
option=e("<option></option>").attr("value","ADS1248").text("ADS1148");
e("#sensorAFEDevice").append(option);
option=e("<option></option>").attr("value","ADS1248").text("ADS1246");
e("#sensorAFEDevice").append(option)
}else{if(ai==95){e("#sensorAFEDevice").empty();
option=e("<option></option>").attr("value","LMP91000").text("LMP91000");
e("#sensorAFEDevice").append(option);
option=e("<option></option>").attr("value","LMP91002").text("LMP91002");
e("#sensorAFEDevice").append(option)
}else{if(ai==96){e("#sensorAFEDevice").empty();
option=e("<option></option>").attr("value","LMP91050").text("LMP91050");
e("#sensorAFEDevice").append(option);
option=e("<option></option>").attr("value","LMP91051").text("LMP91051");
e("#sensorAFEDevice").append(option)
}else{if(ai==97){e("#sensorAFEDevice").empty();
option=e("<option></option>").attr("value","LMP91200").text("LMP91200");
e("#sensorAFEDevice").append(option)
}}}}}}}}});
e('input:radio[name="ampTopo"]').change(function(){var ai=e('input:radio[name="ampTopo"]:checked').val();
if(ai=="Inverting"){document.getElementById("wb_opImage").src="https://webench.ti.com/webench5/pf/images/InvAmpDualSupplyCircuit.png"
}else{if(ai=="Transimpedance"){document.getElementById("wb_opImage").src="https://webench.ti.com/webench5/pf/images/Transimpedance.png"
}else{document.getElementById("wb_opImage").src="https://webench.ti.com/webench5/pf/images/NonInvAmpDualSupplyCircuit.png"
}}});
if(m.defaultTab){w(m.defaultTab)
}})
},destroy:function(){return this.each(function(){var m=e(this),l=m.data(h);
l[h].remove();
m.removeData(h)
})
}};
e.fn.TIwebenchPanel2=function(l){if(typeof(g)!="undefined"){if(g.toUpperCase().search("POWER")>0){l.defaultTab="0"
}else{if(g.toUpperCase().search("FPGA")>0){l.defaultTab="1"
}else{if(g.toUpperCase().search("LED")>0){l.defaultTab="2"
}else{if(g.toUpperCase().search("FILTER")>0){l.defaultTab="3"
}else{if(g.toUpperCase().search("CLOCK")>0){l.defaultTab="4"
}else{if(g.toUpperCase().search("SENSOR")>0){l.defaultTab="5"
}else{if(g.toUpperCase().search("INTERFACE")>0){l.defaultTab="6"
}else{if(g.toUpperCase().search("REFERENCE")>0){l.defaultTab="7"
}else{if(g.toUpperCase().search("BATTERY")>0){l.defaultTab="8"
}else{if(g.toUpperCase().search("AMPLIFIER")>0){l.defaultTab="9"
}}}}}}}}}}}if(c[l]){return c[l].apply(this,Array.prototype.slice.call(arguments,1))
}else{if(typeof l==="object"||!l){return c.init.apply(this,arguments)
}else{e.error("Method "+l+" does not exist on jQuery.TIwebenchPanel2")
}}}
})(jQuery);
$(document).ready(function(){var c=$('div[class="js-scrollspy"]');
var b=c.length;
var a;
if(b>0){if($("#chapter-navigation").attr("class").indexOf("ti_chapterNavContainer")<0){$("#chapter-navigation").addClass("ti_chapterNavContainer")
}for(i=0;
i<b;
i++){a=$(c[i]);
if(a.data("chapter-eligible")){$(".ti_chapterNav-list").append('<li class="ti_chapterNav-item"><a class="ti_chapterNav-link js-smoothscroll" href="#'+$(a).prop("id")+'">'+$(a).data("chapter-anchorlink-name")+"</a></li>")
}}$(".ti_chapterNav-list").children().first().addClass("is-active");
if($("#chapter-navigation").length>0){if(($(".ti_chapterNav-list > li").length<1)||($(window).width()<768)){$("#chapter-navigation").css("display","none")
}else{$("#chapter-navigation").css("display","block")
}}}var e=/[<>'"]/g;
var d=$(decodeURIComponent(window.location.hash).toString().replace(e,"").replace(/%/g,"\\%").replace(/^\//,""));
setTimeout(function(){if(d.length){$("html, body").animate({scrollTop:d.offset().top-80},500);
return false
}},500)
});
$(function(){var a=/[<>'"]/g;
$("a.js-smoothscroll").click(function(){if(location.pathname.toString()==this.pathname.toString()&&location.hostname==this.hostname){var b=$(decodeURIComponent(this.hash).toString().replace(a,"").replace(/%/g,"\\%").replace(/^\//,""));
if(b.length){$("html, body").animate({scrollTop:b.offset().top-80},500);
return false
}}})
});
$(function(){var b=document.querySelector(".js-chapterNav");
if(null!=b&&b.hasAttribute("data-ti-sticky")){var a=$(".js-chapterNav").offset().top;
var c=function(){var d=$(window).scrollTop();
if(d>a){$(".js-chapterNav").addClass("is-sticky")
}else{$(".js-chapterNav").removeClass("is-sticky")
}};
c();
$(window).scroll(function(){c()
})
}});
$(function(){var b=document.querySelectorAll(".js-scrollspy");
var c={};
var a=0;
Array.prototype.forEach.call(b,function(d){c[d.id]=$(d).offset().top-100
});
window.onscroll=function(){var d=document.documentElement.scrollTop||document.body.scrollTop;
for(a in c){if(c[a]<=d){if(document.querySelector(".ti_chapterNav-item.is-active")!=null){document.querySelector(".ti_chapterNav-item.is-active").setAttribute("class","ti_chapterNav-item")
}if(document.querySelector(".ti_chapterNav-link[href*='"+a+"']")!=null){document.querySelector(".ti_chapterNav-link[href*='"+a+"']").parentElement.setAttribute("class","ti_chapterNav-item is-active")
}}}}
});
$(function(){$(".js-chapterNav a").click(function(){var b=$(this);
setTimeout(function(){if(document.querySelector(".ti_chapterNav-item.is-active")!=null){document.querySelector(".ti_chapterNav-item.is-active").setAttribute("class","ti_chapterNav-item");
b.parent().addClass("is-active")
}},500)
})
});
$(function(){var c=300;
$(".js-collapsible-trigger").click(function(h){var g=$(this).parent();
var f=$(this).text().trim().replace(/"/g,'\\"');
g.toggleClass("is-expanded");
g.children(".js-collapsible-content").slideToggle({duration:c});
g.children(".js-collapsible-content").css("overflow","visible");
if(g.hasClass("is-expanded")){_tiAnalyticsTrack("Link Track","expand accordion:"+f,tiPageName,tiContentGroup)
}else{_tiAnalyticsTrack("Link Track","collapse accordion:"+f,tiPageName,tiContentGroup)
}});
function a(f){var g=$(f).parent();
g.find(".js-collapsible-item").removeClass("is-expanded");
g.find(".js-collapsible-content").hide();
$(f).addClass("is-expanded");
$(f).children().show()
}var e=$(".js-collapsible-item").length;
if(e){var d=location.href;
var b=d.split("#")[1];
if(b){a("#"+b)
}$("a.js-accordion-sail, button.js-accordion-sail").click(function(){var g=($(this).attr("href"));
var f=($(this).data("collapse-target"));
if(f){a(f);
setTimeout(function(){$("html, body").animate({scrollTop:$(g).top},"fast")
},200)
}else{a(g)
}})
}$(".js-accordion-expand").each(function(){$this=$(this);
if($this.next().children(".js-collapsible-item").length<2){$this.remove()
}});
$(".js-accordion-expand").click(function(k){var j,h=$(this),f=h.next(),g=f.attr("data-lid");
h.toggleClass("is-all-expanded");
h.find("span").toggle();
if(h.hasClass("is-all-expanded")){_tiAnalyticsTrack("Link Track","expand all accordions - data-lid = "+g,tiPageName,tiContentGroup);
f.children(".js-collapsible-item").each(function(){j=$(this);
j.addClass("is-expanded");
j.children(".js-collapsible-content").show({duration:c});
j.children(".js-collapsible-content").css("overflow","visible")
})
}else{_tiAnalyticsTrack("Link Track","collapse all accordions - data-lid = "+g,tiPageName,tiContentGroup);
f.children(".js-collapsible-item").each(function(){j=$(this);
j.removeClass("is-expanded");
j.children(".js-collapsible-content").hide({duration:c})
})
}})
});
$(function(){$("a.js-accordion-sail, button.js-accordion-sail").click(function(){if(location.pathname.replace(/^\//,"")==this.pathname.replace(/^\//,"")&&location.hostname==this.hostname){var a=$(this.hash);
a=a.length?a:$("[name="+this.hash.slice(1)+"]");
if(a.length){$("html, body").animate({scrollTop:a.offset().top},500);
return false
}}})
});
(function(a){a.fn.backToTop=function(){var c=this;
var b="<a class='btn-backToTop' name='&lid=en_us_back_to_top_btn'><div class='ti_icon mod-size-l mod-reversed'><svg role='img'><use xlink:href='/etc/designs/ti/images/icons/svg/ti_icons-actions.svg#arrow-top'></use></svg></div><span>TOP</span></a>";
c.append(b);
a(".btn-backToTop").click(function(){a("html, body").animate({scrollTop:a("html").offset().top},"fast")
});
a(window).scroll(function(){if(a(this).scrollTop()){a(".btn-backToTop").stop(true,true).fadeIn()
}else{a(".btn-backToTop").stop(true,true).fadeOut()
}})
}
}(jQuery));
$(document).ready(function(){if(($(".ti_chapterNav-item").length<=0)||$(window).width()<768){$(".js-backToTop").backToTop()
}});
var crt=(function(){var a=function(){crt.shell8.startPage()
};
return{startPage:a}
}());
crt.shell8=(function(){var t="0",b=[],l=[],q=[],h=[20,12,4,10,5,2,15,3,2,4,7,7,7,3,5,4],j=[20,12,4,10,5,2,15,3,2,4,7,7,7,3,5,4],d=["#FFF","#edf7f8"],k;
k=function(){ti_path="/etc/designs/ti/clientlib-site/js/amplifier-cross-reference-tool/crt.ti.8.js";
comp_path="/etc/designs/ti/clientlib-site/js/amplifier-cross-reference-tool/crt.comp.8.js";
a();
$("#ddl_comp").change(function(){if($(this).val()!=="0"){t=$(this).val();
g();
f(c())
}});
$("#enter_submit").click(function(){var w=$("#enter_part").val().trim().toUpperCase();
$("#enter_part").val(w);
if($.inArray(w,b)>-1){t=w;
v();
f(c())
}else{alert('"'+w+'" is not a valid part number.')
}});
$("#crt_checks .ignore").click(function(){var x=parseInt($(this).attr("n")),w=$(this).hasClass("btnC");
h[x-1]=!w?0:j[x-1];
f(false);
n();
if(!w){$('#crt_buttons :button[n="'+x+'"]').removeClass("btnC")
}});
$("#crt_buttons :button").click(function(){var A=parseInt($(this).attr("n")),x=true,y=h[A-1],z=j[A-1];
h[A-1]=(y!=0)?y+z:z+z;
f(false);
n();
$(this).addClass("btnC");
$('#crt_checks :checkbox[n="'+A+'"]').prop("checked",true)
});
$("#crt_reset").click(function(){h=j.slice();
f(false);
r()
});
$('input[name="crt_display_num"]').change(function(){if(q.length>0){o()
}});
$(".button.ignore").click(function(){$chkBoxName=$(this).attr("name");
$is_checked=$("#"+$chkBoxName).prop("checked");
console.log($is_checked);
if($is_checked){$("#"+$chkBoxName).prop("checked","false")
}else{if(!$is_checked){$("#"+$chkBoxName).prop("checked","true")
}}$(this).toggleClass("btnC")
})
};
function c(){var w=true;
if($("#tbl_results tr").length>10){w=false
}return w
}function g(){$("#enter_part").val("")
}function v(){$("#ddl_comp").val("0")
}function n(){var y=true,x;
for(x=0;
x<16;
x++){if(j[x]!=h[x]){y=false
}}if(!y){var w=$("#crt_reset");
w.removeAttr("disabled");
if(w.hasClass("disabled")){w.removeClass("disabled")
}}else{var w=$("#crt_reset");
w.attr("disabled","disabled");
if(!w.hasClass("disabled")){w.addClass("disabled")
}}}function e(){var w="#333",y,x;
for(x=0;
x<17;
x++){w=h[x]!=0?"#333":"#999";
y=x+2;
$("#tbl_results").find("tr td:nth-child("+y+")").css("color",w)
}}function r(){var x=$("#crt_reset"),w,y;
$("#crt_checks :checkbox").prop("checked",true);
$("#crt_buttons input").removeClass("btnC");
$("#crt_checks .ignore").removeClass("btnC");
x.attr("disabled","disabled");
x.addClass("disabled")
}function f(w){if(!$("#tbl_results").is(":visible")){$("#tbl_results").show(100)
}m(w)
}function a(){$.getJSON(comp_path,function(w){$.each(w.Comp,function(x,y){if(y.SpecPN!=undefined){b.push(y.SpecPN);
u(y.SpecPN)
}})
})
}function m(w){if(w){l=[];
$.getJSON(comp_path,function(x){$("#tbl_results").find("tr:gt(3)").remove();
var z=$("<tr/>").addClass("crt-comp").attr("id","comp_specs"),A,y;
$.each(x.Comp,function(B,C){if(C.SpecPN===t){l.push(C.SpecPN);
l.push(C.Type);
l.push(C.NumCh);
l.push(C.VccMin);
l.push(C.VccMax);
l.push(C.IsMaxCh);
l.push(C.AvclMin);
l.push(C.GbwTyp);
l.push(C.SlewTyp);
l.push(C.IoutTyp);
l.push(C.VnoiseTyp);
l.push(C.Shutdown);
l.push(C.InRange);
l.push(C.OutRange);
l.push(C.IbiasRoomTyp);
l.push(C.VosRoomMax);
l.push(C.TcVos)
}});
A=l.length;
for(y=0;
y<A;
y++){z.append($("<td/>").text(l[y]))
}$("#tbl_results").append(z);
s(w)
})
}else{l=[];
$.getJSON(comp_path,function(x){var z=$("#comp_specs"),A,y;
$.each(x.Comp,function(B,C){if(C.SpecPN===t){l.push(C.SpecPN);
l.push(C.Type);
l.push(C.NumCh);
l.push(C.VccMin);
l.push(C.VccMax);
l.push(C.IsMaxCh);
l.push(C.AvclMin);
l.push(C.GbwTyp);
l.push(C.SlewTyp);
l.push(C.IoutTyp);
l.push(C.VnoiseTyp);
l.push(C.Shutdown);
l.push(C.InRange);
l.push(C.OutRange);
l.push(C.IbiasRoomTyp);
l.push(C.VosRoomMax);
l.push(C.TcVos)
}});
A=l.length;
for(y=0;
y<A;
y++){z.find("td").eq(y).text(l[y])
}s(w)
})
}}function s(w){$.getJSON(ti_path,function(x){q=[];
$.each(x.Ti,function(z,B){var E,C,D=0,y=0,A=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
E=B.Type;
C=l[1];
if(E===C){y=1;
A[0]=1
}else{y=-10
}D+=(y*h[0]);
y=0;
E=parseInt(B.NumCh);
C=parseInt(l[2]);
if(!isNaN(E)&&!isNaN(C)){if(E===C){y=1;
A[1]=1
}else{if(E>C){y=0
}else{y=-10
}}}D+=(y*h[1]);
y=0;
E=parseFloat(B.VccMin);
C=parseFloat(l[3]);
if(!isNaN(E)&&!isNaN(C)&&C!==0){y=(C-E)/C;
if(E<=C){A[2]=1
}}else{y=-10
}D+=(y*h[2]);
y=0;
E=parseFloat(B.VccMax);
C=parseFloat(l[4]);
if(!isNaN(E)&&!isNaN(C)&&E!==0){y=(E-C)/E;
if(E>=C){A[3]=1
}}else{y=-10
}D+=(y*h[3]);
y=0;
E=parseFloat(B.IsMaxCh);
C=parseFloat(l[5]);
if(!isNaN(E)&&!isNaN(C)&&C!==0){y=(C-E)/C;
if(E<=C){A[4]=1
}}else{y=-10
}D+=(y*h[4]);
y=0;
E=parseFloat(B.AvclMin);
C=parseFloat(l[6]);
if(!isNaN(E)&&!isNaN(C)){if(E<=C){y=1;
A[5]=1
}else{if(E<=C+1){y=0
}else{y=-10
}}}D+=(y*h[5]);
y=0;
E=parseFloat(B.GbwTyp);
C=parseFloat(l[7]);
if(!isNaN(E)&&!isNaN(C)&&E!==0){y=(E-C)/E;
if(E>=C){A[6]=1
}}else{y=-10
}D+=(y*h[6]);
y=0;
E=parseFloat(B.SlewTyp);
C=parseFloat(l[8]);
if(!isNaN(E)&&!isNaN(C)&&E!==0){y=(E-C)/E;
if(E>=C){A[7]=1
}}else{y=-10
}D+=(y*h[7]);
y=0;
E=parseFloat(B.IoutTyp);
C=parseFloat(l[9]);
if(!isNaN(E)&&!isNaN(C)&&E!==0){y=(E-C)/E;
if(E>=C){A[8]=1
}}else{y=-10
}D+=(y*h[8]);
y=0;
E=parseFloat(B.VnoiseTyp);
C=parseFloat(l[10]);
if(!isNaN(E)&&!isNaN(C)&&C!==0){y=(C-E)/C;
if(E<=C){A[9]=1
}}else{y=-10
}D+=(y*h[9]);
y=0;
E=B.Shutdown;
C=l[11];
if(E==="---"&&C==="Y"){y=-10
}else{y=1
}D+=(y*h[10]);
if(y==1){A[10]=1
}y=0;
E=B.InRange;
C=l[12];
if(C==="---"){y=1
}else{if(C==="N"){y=1
}else{if(E===C){y=1
}else{if(E==="R-R"){y=1
}else{y=-10
}}}}D+=(y*h[11]);
if(y==1){A[11]=1
}y=0;
E=B.OutRange;
C=l[13];
if(C==="N"){y=1
}else{if(E===C){y=1
}else{if(E==="R-R"){y=1
}else{y=-10
}}}D+=(y*h[12]);
if(y==1){A[12]=1
}y=0;
E=parseFloat(B.IbiasRoomTyp);
C=parseFloat(l[14]);
if(!isNaN(E)&&!isNaN(C)&&C!==0){y=(C-E)/C;
if(E<=C){A[13]=1
}}else{y=-10
}D+=(y*h[13]);
y=0;
E=parseFloat(B.VosRoomMax);
C=parseFloat(l[15]);
if(!isNaN(E)&&!isNaN(C)&&C!==0){y=(C-E)/C;
if(E<=C){A[14]=1
}}else{y=-10
}D+=(y*h[14]);
y=0;
E=parseFloat(B.TcVos);
C=parseFloat(l[16]);
if(!isNaN(E)&&!isNaN(C)&&C!==0){y=(C-E)/C;
if(E<=C){A[15]=1
}}else{y=-10
}D+=(y*h[15]);
y=0;
q.push({SpecPN:{v:B.SpecPN},Type:{v:B.Type,c:A[0]},NumCh:{v:B.NumCh,c:A[1]},VccMin:{v:B.VccMin,c:A[2]},VccMax:{v:B.VccMax,c:A[3]},IsMaxCh:{v:B.IsMaxCh,c:A[4]},AvclMin:{v:B.AvclMin,c:A[5]},GbwTyp:{v:B.GbwTyp,c:A[6]},SlewTyp:{v:B.SlewTyp,c:A[7]},IoutTyp:{v:B.IoutTyp,c:A[8]},VnoiseTyp:{v:B.VnoiseTyp,c:A[9]},Shutdown:{v:B.Shutdown,c:A[10]},InRange:{v:B.InRange,c:A[11]},OutRange:{v:B.OutRange,c:A[12]},IbiasRoomTyp:{v:B.IbiasRoomTyp,c:A[13]},VosRoomMax:{v:B.VosRoomMax,c:A[14]},TcVos:{v:B.TcVos,c:A[15]},Value:D})
});
q.sort(function(z,y){if(z.Value<y.Value){return 1
}if(z.Value>y.Value){return -1
}return 0
});
q.splice(30,q.length-30);
if(w){o()
}else{p()
}})
}function o(){$("#tbl_results").find("tr:gt(4)").remove();
var y=0,A=$('input[name="crt_display_num"]:checked').val();
for(y=0;
y<A;
y++){var x=q[y],z=$("<tr/>");
var w=$("<a/>").text(x.SpecPN.v);
w.attr("href","//www.ti.com/product/"+x.SpecPN.v);
w.attr("target","_tiProd");
z.append($("<td/>").append(w));
z.append($("<td/>").text(x.Type.v).css("background-color",d[x.Type.c]));
z.append($("<td/>").text(x.NumCh.v).css("background-color",d[x.NumCh.c]));
z.append($("<td/>").text(x.VccMin.v).css("background-color",d[x.VccMin.c]));
z.append($("<td/>").text(x.VccMax.v).css("background-color",d[x.VccMax.c]));
z.append($("<td/>").text(x.IsMaxCh.v).css("background-color",d[x.IsMaxCh.c]));
z.append($("<td/>").text(x.AvclMin.v).css("background-color",d[x.AvclMin.c]));
z.append($("<td/>").text(x.GbwTyp.v).css("background-color",d[x.GbwTyp.c]));
z.append($("<td/>").text(x.SlewTyp.v).css("background-color",d[x.SlewTyp.c]));
z.append($("<td/>").text(x.IoutTyp.v).css("background-color",d[x.IoutTyp.c]));
z.append($("<td/>").text(x.VnoiseTyp.v).css("background-color",d[x.VnoiseTyp.c]));
z.append($("<td/>").text(x.Shutdown.v).css("background-color",d[x.Shutdown.c]));
z.append($("<td/>").text(x.InRange.v).css("background-color",d[x.InRange.c]));
z.append($("<td/>").text(x.OutRange.v).css("background-color",d[x.OutRange.c]));
z.append($("<td/>").text(x.IbiasRoomTyp.v).css("background-color",d[x.IbiasRoomTyp.c]));
z.append($("<td/>").text(x.VosRoomMax.v).css("background-color",d[x.VosRoomMax.c]));
z.append($("<td/>").text(x.TcVos.v).css("background-color",d[x.TcVos.c]));
$("#tbl_results").append(z)
}e()
}function p(){var y=0,A=$('input[name="crt_display_num"]:checked').val();
for(y=0;
y<A;
y++){var x=q[y],z=$("#tbl_results").find("tr").eq(y+5);
if(z!=null){var w=$("<a/>").text(x.SpecPN.v);
w.attr("href","//www.ti.com/product/"+x.SpecPN.v);
w.attr("target","_tiProd");
z.find("td").eq(0).html(w);
z.find("td").eq(1).text(x.Type.v).css("background-color",d[x.Type.c]);
z.find("td").eq(2).text(x.NumCh.v).css("background-color",d[x.NumCh.c]);
z.find("td").eq(3).text(x.VccMin.v).css("background-color",d[x.VccMin.c]);
z.find("td").eq(4).text(x.VccMax.v).css("background-color",d[x.VccMax.c]);
z.find("td").eq(5).text(x.IsMaxCh.v).css("background-color",d[x.IsMaxCh.c]);
z.find("td").eq(6).text(x.AvclMin.v).css("background-color",d[x.AvclMin.c]);
z.find("td").eq(7).text(x.GbwTyp.v).css("background-color",d[x.GbwTyp.c]);
z.find("td").eq(8).text(x.SlewTyp.v).css("background-color",d[x.SlewTyp.c]);
z.find("td").eq(9).text(x.IoutTyp.v).css("background-color",d[x.IoutTyp.c]);
z.find("td").eq(10).text(x.VnoiseTyp.v).css("background-color",d[x.VnoiseTyp.c]);
z.find("td").eq(11).text(x.Shutdown.v).css("background-color",d[x.Shutdown.c]);
z.find("td").eq(12).text(x.InRange.v).css("background-color",d[x.InRange.c]);
z.find("td").eq(13).text(x.OutRange.v).css("background-color",d[x.OutRange.c]);
z.find("td").eq(14).text(x.IbiasRoomTyp.v).css("background-color",d[x.IbiasRoomTyp.c]);
z.find("td").eq(15).text(x.VosRoomMax.v).css("background-color",d[x.VosRoomMax.c]);
z.find("td").eq(16).text(x.TcVos.v).css("background-color",d[x.TcVos.c])
}}e()
}function u(x){var w=$("<option/>").attr("value",x).text(x);
$("#ddl_comp").append(w)
}return{startPage:k}
}());
if(!window.com){com=new Object()
}if(!com.TI){com.TI=new Object()
}if(!com.TI.subTabNav){com.TI.subTabNav=new Object()
}com.TI.subTabNav=$(window).bind("load",function(p){var f=jQuery,k,j,m,c,o,a,q,b,e,s,g=window.localStorage,l={sub_tab_menu:"[data-nav='sub-tab']",max_width:"984",overflow_icon:"expand_more",overflow_active_text:"More",overflow_inactive_text:"Less"};
o=f.extend({},l,p);
q=f(o.sub_tab_menu);
a=q.find("ul");
b=a.find("li");
e=parseInt(o.max_width);
s=!!(n(q)<1000);
this.stnObj="com.TI.subTabNav.pageState";
this.submenuObj="com.TI.subTabNav.submenuState";
function n(u){if(!u){return false
}var v=Math.max.apply(null,f(u).map(function(){return f(this).outerWidth(true)
}).get());
return v
}function r(y){var w=f(y),v=f.makeArray(w),A=v.length,u,z,x=function(D){D.stopImmediatePropagation();
var C=f(D.currentTarget),B=C.parent().siblings();
B.find("ul").removeClass("show");
B.find("p").text(o.overflow_active_text);
B.find("i.icon-wordreplace").text(o.overflow_icon);
C.siblings().removeClass("is-active");
C.addClass("is-active")
};
if(s){if(n(a)>700&&A>=5){z=5
}else{if(n(a)>e&&A>=6){z=6
}else{z=7
}}}else{if(n(a)>999&&A>=6){z=5
}else{if(n(a)>e&&A>=6){z=6
}else{z=7
}}}u=v.splice(z,A-z);
a.html(v);
f(a,document).on("click","li",x);
if(u.length>0){t(u)
}}function t(w){var A="<div class='sub-tab-sub-menu'><p>More</p><i class='icon-wordreplace icon-expandLess' title='More'>expand_more</i><ul></ul></div>",C=".sub-tab-sub-menu ul",y="show",B="i.icon-wordreplace",D=o.overflow_icon,v="expand_less",z=function(H){H.stopImmediatePropagation();
var F=f(H.currentTarget).find("ul"),E=F.siblings("p"),G=F.siblings(B);
if(F.hasClass(y)){F.removeClass(y);
G.text(D);
G.removeClass("icon-expandMore");
G.addClass("icon-expandLess");
E.text(o.overflow_active_text)
}else{F.addClass(y);
G.text(v);
G.removeClass("icon-expandLess");
G.addClass("icon-expandMore");
E.text(o.overflow_inactive_text)
}},x=function(E){E.stopImmediatePropagation()
},u=function(F){F.stopImmediatePropagation();
var E=f(F.currentTarget);
E.find(C).removeClass(y);
E.find(B).text(D);
E.find(".sub-tab-sub-menu p").text(o.overflow_active_text)
};
f(A).insertAfter(a);
q.find(C).html(w);
f(".sub-tab-sub-menu",document).on("mouseenter",x).on("click",z);
f("body",document).on("click",u)
}function h(){j=f('div[data-nav="sub-tab"]');
m=f(j).find("div.sub-tab-sub-menu");
if(f(m).find("ul > li.is-active").length!=0){c=f(m).find("ul > li.is-active").text();
if(g.getItem("text_value")===null){f(m).find("ul > li.is-active").replaceWith(f(j).find("ul").first().find("li").last());
f(j).find("ul").first().append('<li class="is-active"><a href="#"><span>'+c+"</span></a> </li>");
d(c,g.getItem("href_value"))
}else{var u,v;
u=g.getItem("text_value");
v=g.getItem("href_value_1");
f(m).find("ul > li").filter(function(){return f(this).text()===u
}).replaceWith(f(j).find("ul").first().find("li").last());
f(m).find("ul > li.is-active").replaceWith('<li><a href="'+v+'"><span>'+u+"</span></a> </li>");
f(j).find("ul").first().append('<li class="is-active"><a href="#"><span>'+c+"</span></a> </li>");
d(c,g.getItem("href_value"))
}}else{if(g.getItem("text_value")!==null){g.clear()
}}}function d(v,u){if(typeof(g)==="undefined"){return false
}g.setItem("text_value",v);
g.setItem("href_value_1",u)
}this.init=function(){r(b,false);
h()
};
this.init();
f('div[data-nav="sub-tab"]').find("div.sub-tab-sub-menu").find("ul > li > a").on("click",function(){k=f(this).attr("href");
g.setItem("href_value",k)
})
});
var showingofresults=$("#techdoclistingi18n").data("showingofresults");
var viewallresults=$("#techdoclistingi18n").data("viewallresults");
var showing0of0results=$("#techdoclistingi18n").data("showing0of0results");
var showingresultswithtitle=$("#techdoclistingi18n").data("showingresultswithtitle");
var selectdoctype=$("#techdoclistingi18n").data("selectdoctype");
var viewtop100results=$("#techdoclistingi18n").data("viewtop100results");
var nosearchresults=$("#techdoclistingi18n").data("nosearchresults");
var selectal=$("#techdoclistingi18n").data("selectall");
function initTechDocInterface(){refreshProducts();
var c=$("#techDocsForm").data("familypageid");
if(undefined!=c){$("#subProductsList").val(c);
refreshSubProducts();
var b=document.getElementById("docCategoryIdList");
var d=b.options[0].selected;
if(d){var a=document.getElementById("docSearchBtn");
a.disabled=true;
a.className="btndisabled"
}}}function refreshProducts(){var b=document.getElementById("productsList");
var h=document.getElementById("subProductsList");
var e=b.selectedIndex;
var k=b[e].value;
var f=-1;
var g=document.getElementById("docSearchBtn");
var a=document.getElementById("docCategoryIdList");
var d=document.getElementById("checkboxdoctype");
g.disabled=true;
g.className="btndisabled";
var c=document.getElementById("techDocsForm");
var j=c.getAttribute("data-path");
if(k>0){$("#subProductsList").empty();
j=j+".family.json?familyId=";
ajaxUrl=j+k;
ajaxCall(ajaxUrl);
document.getElementById("subProductsList").selectedIndex=0;
refreshSubProducts();
if(h.disabled){h.disabled=false
}h.options[0].selected=true;
a.options[0].selected=true
}else{if(k<0){$("#subProductsList").empty();
h.disabled=true;
a.options[0].selected=true
}else{a.disabled=false
}}toggleSearchButton()
}function selectDocumentCategory(){var b=document.getElementById("docCategoryIdList");
var a=b.selectedIndex;
var c=b[a].value;
$("#selected-document-cat").val(c);
toggleSearchButton()
}function refreshSubProducts(){if(document.getElementById("productsList")){var k=document.getElementById("subProductsList");
var h=$("#subProductsList").data("prev-family-id");
var f=k.selectedIndex;
if(f==-1){return
}var m=k[f].value;
$("#selected-family-id").val(m);
var c=document.getElementById("techDocsForm");
var l=c.getAttribute("data-path");
l=l+".category.json?familyId=";
var j=document.getElementById("docSearchBtn");
var a=document.getElementById("docCategoryIdList");
var e=document.getElementById("checkboxdoctype");
j.disabled=true;
j.className="btndisabled";
if(m>0&&m!=h){var b=document.getElementById("productsList");
var d=b.selectedIndex;
var g=b[d].value;
ajaxUrl=l+m;
ajaxCall2(ajaxUrl);
selectDocumentCategory()
}if(f==0){var b=document.getElementById("productsList");
var d=b.selectedIndex;
var g=b[d].value;
ajaxUrl=l+g;
ajaxCall2(ajaxUrl);
a.options[0].selected=true
}toggleSearchButton()
}else{var j=document.getElementById("docSearchBtn");
var a=document.getElementById("docCategoryIdList");
if(a&&a.options.length>1){a.options[1].selected=true;
j.disabled=false;
j.className="btn3"
}}}function ajaxCall(b){var c=document.getElementById("checkboxdoctype");
var a=document.getElementById("docCategoryIdList");
dojo.xhrGet({url:b,sync:true,timeout:75000,load:function(e,d){setProductFamily(e);
return e
},error:function(e,d){return e
}})
}function ajaxCall2(b){var c=document.getElementById("checkboxdoctype");
var a=document.getElementById("docCategoryIdList");
dojo.xhrGet({url:b,sync:true,timeout:75000,load:function(e,d){setCategoriesCheckboxes(e);
return e
},error:function(e,d){return e
}})
}function setProductFamily(d){var e=JSON.parse(d);
var j=e.data[0];
var h=[];
var c=document.getElementById("subProductsList");
if(j){for(var b=0;
b<j.children.length;
b++){var f=document.createElement("option");
f.text=j.children[b].familyName;
f.value=j.children[b].familyId;
var g=c.options[b];
c.add(f,g)
}}}function sethtml(e,c){var b=c;
var a;
while(a=b.match(/(<script[^>]+javascript[^>]+>\s*(<!--)?)/i)){b=b.substr(b.indexOf(RegExp.$1)+RegExp.$1.length);
if(!(endscript=b.match(/((-->)?\s*<\/script>)/))){break
}block=b.substr(0,b.indexOf(RegExp.$1));
b=b.substring(block.length+RegExp.$1.length);
var d=document.createElement("script");
d.text=block;
document.getElementsByTagName("head").item(0).appendChild(d)
}document.getElementById(e).innerHTML=c
}function setCategoriesCheckboxes(b){var j=JSON.parse(b);
var q=j.data;
var g='input id="docCategoryIdChk" name="docCategoryIdC" type="checkbox" onclick="javascript:refreshFiltersC()" value="';
var u='<input id="docCategoryIdChkAll" name="docCategoryIdChkAll" type="checkbox" onclick="javascript:selectAll()">'+selectal+"<br>\n";
var p=document.getElementById("docCategoryIdList");
p.options.length=0;
var e=document.createElement("option");
e.text=selectdoctype;
e.value="";
var d=p.options[0];
p.add(e,d);
var a="";
var k=document.getElementById("techDocsForm");
var s=k.getAttribute("data-category");
var c;
if(s){c=s.split("|")
}for(var t=0;
t<q.length;
t++){var n=q[t].docCategoryId;
var m=q[t].docCategoryName;
var l=q[t].isAvailable;
var f="";
var h="";
if(l=="N"){f="disabled"
}var o=document.createElement("option");
o.text=m;
o.value=n;
var r=p.options[t+1];
if(l=="Y"&&c){c.forEach(function(w,v,x){if(w==o.value){h=" checked "
}});
p.add(o,r)
}a=a+"<"+g+n+'" '+f+" "+h+">"+m+"<br>\n"
}document.getElementById("categoryChecks").innerHTML=u+a
}function resetDocCategories(){var b=document.getElementById("docCategoryIdList");
if(b){b.options[0].selected=true
}document.techDocsForm.docCategoryIdChkAll.checked=false;
var c=document.techDocsForm.docCategoryIdC;
if(c){for(var a=0;
a<c.length;
a++){c[a].checked=false
}}}function showHide(a,d){var f=document.getElementById(a);
var e=document.getElementById(d);
f.style.display="block";
e.style.display="none";
if(a=="checkboxdoctype"&&document.getElementById("docCategoryIdList")){var c=document.getElementById("docCategoryIdList");
var h=c[c.selectedIndex].value;
var g=document.techDocsForm.docCategoryIdC;
if(g){for(var b=0;
b<g.length;
b++){if(h==g[b].value){g[b].checked=true
}}}}else{if(d=="checkboxdoctype"){}}if(arguments.length==2){if(a=="checkboxdoctype"){refreshFiltersC()
}else{refreshFilters()
}}}function getSelectedCheckboxes(){var c=$("#dropdowndoctype").css("display");
var b=[];
if(c=="block"){var a=$("#selected-document-cat").val();
b.push(a)
}else{var d=$('input[name="docCategoryIdC"]:checked');
$(d).each(function(e){b.push(d[e].value)
})
}return b.toString()
}function triggerSearchClick(){var a=document.getElementById("docSearchBtn");
a.click()
}function initApplicationTechDocInterface(){var d=$("#techDocsForm").data("application-id");
var c=$("#applicationId").data("market-id");
var b=$("#applicationId").data("sector-id");
var a=$("#applicationId").data("category-id");
if(undefined!=d){if(undefined!=c&&undefined!=b&&c==120){c=d
}$("#appIdList").children().each(function(){if($(this).attr("value")==c){$("#appIdList").val(c)
}else{if($(this).attr("value")==b){$("#appIdList").val(b)
}else{if($(this).attr("value")==a){$("#appIdList").val(a)
}}}});
refreshAppIds()
}}function refreshAppIds(){if(document.getElementById("appIdList")){var a=document.getElementById("appIdList");
var g=a.selectedIndex;
if(g==-1){return
}var l=a[g].value;
$("#selectedApplicationId").val(l);
var d=document.getElementById("techDocsForm");
var k=d.getAttribute("data-path");
k=k+".category.json?applicationId=";
var j=document.getElementById("docSearchBtn");
var b=document.getElementById("docCategoryIdList");
var f=document.getElementById("checkboxdoctype");
j.disabled=true;
j.className="btndisabled";
if(l>0){var c=document.getElementById("appIdList");
var e=c.selectedIndex;
var h=c[e].value;
ajaxUrl=k+l;
ajaxAppCall(ajaxUrl);
selectAppDocumentCategory()
}if(g==0){return
}}else{var j=document.getElementById("docSearchBtn");
var b=document.getElementById("docCategoryIdList");
if(b&&b.options.length>1){b.options[1].selected=true;
j.disabled=false;
j.className="btn3"
}}}function ajaxAppCall(a){dojo.xhrGet({url:a,sync:true,timeout:75000,load:function(c,b){setCategoriesCheckboxes(c);
return c
},error:function(c,b){console.error("HTTP status code: ",b.xhr.status);
return c
}})
}function selectAppDocumentCategory(){var b=document.getElementById("docCategoryIdList");
var a=b.selectedIndex;
var c=b[a].value;
$("#selected-document-cat").val(c);
toggleSearchButton()
}function SelectionValues(b,a){this.value=b;
this.label=a
}function DocCategEntityAssoc(a,b){this.docCategId=a;
this.entityId=b
}var famDocCategAssoc=new Array();
var famDocCategAppAssoc=new Array();
var famDocCategTechFamAssoc=new Array();
var famDocCategToolAssoc=new Array();
var docTypes=new Array();
var applications=new Array();
docTypes.push(new SelectionValues("2","Datasheet"));
docTypes.push(new SelectionValues("3","Errata"));
docTypes.push(new SelectionValues("1","Application notes"));
docTypes.push(new SelectionValues("6","User guides"));
docTypes.push(new SelectionValues("10","Selection guides"));
docTypes.push(new SelectionValues("11","Solution guides"));
docTypes.push(new SelectionValues("4","Simulation models"));
docTypes.push(new SelectionValues("9","White papers"));
docTypes.push(new SelectionValues("12","Design files"));
docTypes.push(new SelectionValues("13","Radiation & Reliability reports"));
docTypes.push(new SelectionValues("5","More literature"));
applications.push(new SelectionValues("1080","Appliances"));
applications.push(new SelectionValues("209","Automotive"));
applications.push(new SelectionValues("1081","Building Automation"));
applications.push(new SelectionValues("198","Communications Equipment"));
applications.push(new SelectionValues("942","Display"));
applications.push(new SelectionValues("943","Electronic Point of Sale"));
applications.push(new SelectionValues("307","Enterprise Systems"));
applications.push(new SelectionValues("892","Factory Automation & Control"));
applications.push(new SelectionValues("913","Grid Infrastructure"));
applications.push(new SelectionValues("120","Industrial"));
applications.push(new SelectionValues("10003","Industrial Transport (non-car & non-light truck)"));
applications.push(new SelectionValues("902","Lighting"));
applications.push(new SelectionValues("270","Medical, Healthcare & Fitness"));
applications.push(new SelectionValues("907","Motor Drives"));
applications.push(new SelectionValues("945","Other Industrial"));
applications.push(new SelectionValues("308","Personal Electronics"));
applications.push(new SelectionValues("1291","Power Delivery"));
applications.push(new SelectionValues("112","Space, Avionics & Defense"));
applications.push(new SelectionValues("944","Test & Measurement"));
function refreshDocCategories(){var c=document.getElementById("docCategoryIdList");
if(c){var f=0;
c.options.length=0;
c.options[0]=new Option("Select Document Type",-1);
for(var b=0;
b<docTypes.length;
b++){for(var d=0;
d<famDocCategAssoc.length;
d++){if(docTypes[b].value==famDocCategAssoc[d]){c.options[++f]=new Option(html_entity_decode(docTypes[b].label),docTypes[b].value);
break
}}}refreshFilters();
toggleSearchButton()
}var e=document.techDocsForm.docCategoryIdC;
if(e){var f=0;
var a=new Array();
for(var b=0;
b<docTypes.length;
b++){for(var d=0;
d<famDocCategAssoc.length;
d++){if(docTypes[b].value==famDocCategAssoc[d]){a.push(docTypes[b].value);
break
}}}for(var b=0;
b<e.length;
b++){e[b].disabled=true;
if(a.contains(e[b].value)){e[b].disabled=false
}}}}if(!Array.prototype.contains){Array.prototype.contains=function(c){var a=this.length;
for(var b=0;
b<a;
b++){if(this[b]===c){return true
}}return false
}
}function refreshFilters(){var b=document.techDocsForm.docCategoryIdC;
if(b){for(var a=0;
a<b.length;
a++){b[a].checked=false
}if(document.techDocsForm.docCategoryIdChkAll.checked){document.techDocsForm.docCategoryIdChkAll.checked=false
}}toggleSearchButton()
}function refreshFiltersC(){var a=document.getElementById("docCategoryIdList");
if(a){a.options[0].selected=true
}toggleSearchButtonC()
}function selectAll(){var a=document.techDocsForm.docCategoryIdC;
if(document.techDocsForm.docCategoryIdChkAll.checked){for(i=0;
i<a.length;
i++){if(!a[i].disabled){a[i].checked=true
}}}else{for(i=0;
i<a.length;
i++){if(!a[i].disabled){a[i].checked=false
}}}refreshFiltersC()
}function verifyCheckboxesIfChecked(){var b=document.techDocsForm.docCategoryIdC;
if(document.techDocsForm.docCategoryIdChkAll.checked){return true
}else{for(i=0;
i<b.length;
i++){if(!b[i].disabled){var a=b[i].checked;
if(a){return true
}}}}return false
}function toggleSearchButton(){var b=document.getElementById("docCategoryIdList");
var a=document.getElementById("docSearchBtn");
if(("none"!=$("#checkboxdoctype").css("display")&&verifyCheckboxesIfChecked())||("none"!=$(b).css("display")&&b.selectedIndex>0)){b.disabled=false;
a.disabled=false;
a.className="btn3"
}else{a.disabled=true;
a.className="btndisabled"
}}function toggleSearchButtonC(){var b=document.techDocsForm.docCategoryIdC;
var a=document.getElementById("docSearchBtn");
var c=getSelectedDocIds();
if(c.length>0){a.disabled=false;
a.className="btn3"
}else{a.disabled=true;
a.className="btndisabled"
}}function getSelectedDocIds(){var b=document.techDocsForm.docCategoryIdC;
var c=new Array();
if(b){for(var a=0;
a<b.length;
a++){if(b[a].checked){c.push(b[a].value)
}}}return c
}function html_entity_decode(b){var a=document.createElement("textarea");
a.innerHTML=b;
toReturn=a.value;
a=null;
return toReturn
}function LTrim(b){var a=/\s*((\S+\s*)*)/;
return b.replace(a,"$1")
}function RTrim(b){var a=/((\s*\S+)*)\s*/;
return b.replace(a,"$1")
}function trim(a){return LTrim(RTrim(a))
}function formSubmit(){var k=0,a=0,e=0,h=0,g=0,b=0;
var j=getSelectedDocIds();
var c;
var d;
if(document.getElementById("appIdList")){k=getSelectedValue("appIdList")
}if(document.getElementById("docCategoryIdList")){h=getSelectedValue("docCategoryIdList")
}if(document.getElementById("productsList")){e=getSelectedValue("productsList")
}if(document.getElementById("subProductsList")){a=getSelectedValue("subProductsList")
}if(document.getElementById("docTitleInp")){d=encodeURI(trim(document.getElementById("docTitleInp").value))
}if(j.length<1){if(h<0){return false
}}if(a==-1){a=e
}if(e==4){c="//www.ti.com/lsds/ti/microcontrollers_16-bit_32-bit/tech_docs.page??sectionId=96&tabId=1502&viewType=mostuseful"
}else{if(e==1){c="//www.ti.com/logic/docs/techdocs.tsp?sectionId=452&tabId=2892&viewType=mostuseful&contentId=99668"
}else{if(e==44){c="//www.ti.com/dsp/docs/dspsupporttechdocs.tsp?sectionId=3&tabId=409&viewType=mostuseful"
}else{c="//www.ti.com/analog/docs/analogtechdoc_hh.tsp?viewType=mostuseful"
}}}if(e>0){c+="&rootFamilyId="+e
}if(a>0){c+="&familyId="+a
}if(d!=null&&d.length>0){c+="&docTitle="+d
}if(j.length>0){for(var f=0;
f<j.length;
f++){c+="&docCategoryId="+j[f]
}}else{c+="&docCategoryId="+h
}window.location=c
}function getSelectedValue(c){var a=document.getElementById(c);
if(!a){return
}var b=a.selectedIndex;
return(a[b].value)
}function initializeLists(){var d=true;
var c=document.getElementById("appIdList");
if(c.options.length<2){c.disabled=true
}var e=document.techDocsForm.docCategoryIdC;
if(e&&e.length<2){e.disabled=true
}var b=document.getElementById("docCategoryIdList");
if(b&&b.options.length<2){b.disabled=true
}var a=document.getElementById("subProductsList");
if(a&&a.options.length<2){a.disabled=true
}}function checkButton(){var a=document.techDocsForm.docCategoryId;
var b=document.techDocsForm.Input3;
if(a.value!=-1){b.disabled=false;
b.className="btn3"
}}(function(a){a.fn.extend({E2ERSSer:function(k){k=a.extend({errormsg:"<li>Error</li>",template:'<div><h3><a name="&lid=en_us_[linkid]" href="[link]">[customTitle]</a></h3> <em> [pubdate] </em> <div>[shortDesc]</div></div><div class="widget-panel-bottom"><a name="&lid=en_us_somepage_[linkid]" href="[link]" class="e2elink">More</a></div>',rssURL:"",blog:"",tags:"",forum:"",descWordLimit:150,maxItems:5,startItem:1,addedTemplateTokens:{customTitle:{dataField:"title",processFn:o},shortDesc:{dataField:"description",processFn:c},linkid:{dataField:"title",processFn:g}},useProxy:false,callback:function(){}},k);
if(!Array.isArray){Array.isArray=function(e){return Object.prototype.toString.call(e)==="[object Array]"
}
}var b=(window.location.hostname=="localhost"?"https://e2e-uat.ti.com":"https://e2e.ti.com");
if(k.blog.length>0){k.rssURL=(b+"/blogs_/b/"+k.blog+"/rss")
}else{if(k.forum.length>0&&k.forum.match(/[a-z0-9\/\_\-]+/i)){k.rssURL=(b+"/support/"+k.forum+"/rss")
}else{if(k.tags.length>0){var d;
if(Array.isArray(k.tags)){for(var j=0;
j<k.tags.length;
j++){k.tags[j]=encodeURI(k.tags[j])
}d=k.tags.join("/")
}else{if(typeof k.tags==="string"&&k.tags.indexOf(",")===-1){tagList=k.tags
}else{return this.each(function(){var e=a(this);
e.append("<p>RSSer config ERROR: tags must be array of tag strings, or just a string for single tag.</p>")
})
}}k.rssURL=b+"/blogs_/rss?tags="+d
}else{return this.each(function(){var e=a(this);
e.append('<p>RSSer config ERROR: must define either "tags" or "blog" or "forum" from which to get data.')
})
}}}if(k.useProxy){k.rssURL="/pub/cgi-bin/gete2eblogrss.pl?url="+encodeURI(k.rssURL.replace("http://",""))
}function o(e){return e.replace(/^Blog Post\:\s/,"").replace(/^Forum Post\:\s/,"")
}function c(v){var t;
t=(v)?v.replace(/<[\/]{0,1}([A-Z][A-Z0-9]*)\b[^>]*>/ig,""):"";
var u=t.split(" "),e=[],q=0,r=u.length,s=0;
if(r>0){while((s<k.descWordLimit)&&(q<r)){e.push(u[q]);
s+=u[q].length;
q++
}if(q<r){e.push("...")
}}return e.join(" ")
}function f(e){return(e&&e.length>0&&e.indexOf("T")>-1)?e.split("T")[0]:e
}function g(u){var s=u.replace(/[^0-9|^a-z| ]/ig,"").replace(/[ ]/ig," "),t=s.split(" "),e=t.length,r=0,q=[];
while(r<e&&r<8){q.push(t[r]);
r++
}return q.join("_")
}function n(e){if(typeof e=="string"&&e.length>10&&e.indexOf("?")>10){return e+"&ts="+(new Date).getTime().toString()
}else{return e
}}function l(y,s,t,e,r,w,u){var v=0;
y.find("title:first").text();
var x=[];
if(y.find("item").length>0){y.find("item").each(function(){if(v<r&&v>=w-1){var q=jQuery(this),z={},A;
z.title=a.trim(q.find("title").text());
z.link=a.trim(q.find("link").text());
z.description=a.trim(q.find("description").text());
z.pubdate=a.trim(q.find("pubDate").text());
z.guid=a.trim(q.find("guid").text());
x.push(z.guid);
q=t;
q=q.replace(/\[title\]/ig,z.title);
q=q.replace(/\[link\]/ig,z.link);
q=q.replace(/\[description\]/ig,z.description);
q=q.replace(/\[pubdate\]/ig,z.pubdate);
q=q.replace(/\[guid\]/ig,z.guid);
for(A in k.addedTemplateTokens){var B=k.addedTemplateTokens[A];
B=B.processFn(z[B.dataField]);
q=q.replace(RegExp("\\["+A+"\\]","g"),B)
}s.append(q)
}v++
})
}else{s.append(u)
}k.callback(x)
}function h(y,s,t,e,r,w,u){var v=0;
y.find("title:first").text();
var x=[];
if(y.find("entry").length>0){y.find("entry").each(function(){if(v<r&&v>=w-1){var q={},z;
q.entry=jQuery(this);
q.title=a.trim(q.entry.find("title").text());
q.link=a.trim(q.entry.find("link").attr("href"));
q.summary=a.trim(q.entry.find("summary").text());
q.pubdate=a.trim(q.entry.find("published").text());
q.guid=a.trim(q.entry.find("guid").text());
x.push(q.guid);
var A=t;
A=A.replace(/\[title\]/ig,q.title);
A=A.replace(/\[link\]/ig,q.link);
A=A.replace(/\[description\]/ig,q.summary);
A=A.replace(/\[pubdate\]/ig,q.pubdate);
A=A.replace(/\[guid\]/ig,q.guid);
for(z in k.addedTemplateTokens){var B=k.addedTemplateTokens[z];
B=B.processFn(q[B.dataField]);
A=A.replace(RegExp("\\["+z+"\\]","g"),B)
}s.append(A)
}v++
})
}else{s.append(u)
}k.callback(x)
}function p(r,e){var s=k.template,w=k.charLimit,x=k.maxItems,v=k.dateformatter,t=k.errormsg;
v=k.removeTime;
var u=k.startItem;
r=a(r);
if(r.find("feed").length==1){if(v){v=function(q){return q.substr(0,q.indexOf("T"))
}
}h(r,e,s,w,x,u,t)
}else{if(v){v=function(q){return q.replace(/[0-9]{1,2}:[0-9]{1,2}:[0-9]{1,2} [A-Z]{3}/i,"")
}
}l(r,e,s,w,x,u,t)
}}function m(r,e,s,v,w,u,t){a.ajax({type:"GET",url:s,dataType:"html",error:function(){r.append(t)
},success:function(D){D=D.substring(D.indexOf("<item>"),D.lastIndexOf("</item>"));
D=D.replace(/<\/item>/g,"");
D=D.split("<item>");
var E=0,A=Math.min(D.length,w+1),B=[];
for(E=Math.min(A,u);
E<A;
E++){var C=D[E],x=C.substring(C.indexOf("<title>"),C.lastIndexOf("</title>"));
x=x.replace(/<title>/g,"");
var q=C.substring(C.indexOf("<link>"),C.lastIndexOf("</link>"));
q=q.replace(/<link>/g,"");
var H=C.substring(C.indexOf("<pubDate>"),C.lastIndexOf("</pubDate>"));
H=H.replace(/<pubDate>/g,"");
var y=C.substring(C.indexOf("<description>"),C.lastIndexOf("</description>"));
y=y.replace(/\&lt\;/g,"<");
y=y.replace(/\&gt\;/g,">");
y=y.replace(/\&amp\;/g,"&");
y=y.replace(/<\/[^>]*>/g," ").replace(/<[^>]*>/g,"");
var F=C.substring(C.indexOf('<guid isPermaLink="false">'),C.lastIndexOf("</guid>"));
B.push(F);
var z=e,G;
z=z.replace(/\[title\]/ig,x);
z=z.replace(/\[link\]/ig,q);
z=z.replace(/\[description\]/ig,y);
z=z.replace(/\[pubdate\]/ig,H);
z=z.replace(/\[guid\]/ig,F);
for(G in k.addedTemplateTokens){x=k.addedTemplateTokens[G];
x=x.processFn(C[x.dataField]);
z=z.replace(RegExp("\\["+G+"\\]","g"),x)
}r.append(z)
}k.callback(B)
}})
}return this.each(function(){var r=a(this),e=k.template,s=n(k.rssURL),v=k.charLimit,x=k.maxItems,u=k.errormsg,t=k.startItem;
if(window.XDomainRequest&&!k.useProxy){var w=new XDomainRequest;
w.open("get",s);
w.onload=function(){p(a.parseXML(w.responseText),r)
};
w.send()
}else{a.support.cors=true;
a.ajax({type:"GET",url:s,dataType:"xml",crossDomain:true,crossOrigin:true,contentType:"text/plain",error:function(q){q.status==200?m(r,e,s,v,x,t,u):r.append(u)
},success:function(q){p(q,r)
}})
}})
}})
})(jQuery);
var showing100ofresults=$("#techdoclistingi18n").data("showing100ofresults");
var showingofresults=$("#techdoclistingi18n").data("showingofresults");
var viewtop100results=$("#techdoclistingi18n").data("viewtop100results");
var viewallresults=$("#techdoclistingi18n").data("viewallresults");
var sortIconsHTML='<div class="sorting-icons"><div class="ti_icon mod-size-s mod-color1 sorting-arrows"><svg role="img"><use xlink:href="/etc/designs/ti/images/icons/svg/ti_icons-actions.svg#sortingArrows"></use></svg></div><div class="ti_icon mod-size-s mod-color1 arrow-down"><svg role="img"><use xlink:href="/etc/designs/ti/images/icons/svg/ti_icons-objects.svg#arrow-down"></use></svg></div><div class="ti_icon mod-size-s mod-color1 arrow-up"><svg role="img"><use xlink:href="/etc/designs/ti/images/icons/svg/ti_icons-objects.svg#arrow-up"></use></svg></div></div>';
var thHTML='<th class="header">'+sortIconsHTML;
var tablemarkup='<thead><tr class="ti_table-row mod-heading1">'+thHTML+$("#techdoclistingi18n").data("title")+"</th>"+thHTML+ +$("#techdoclistingi18n").data("abstract")+"</th>"+thHTML+$("#techdoclistingi18n").data("type")+"</th>"+thHTML+$("#techdoclistingi18n").data("size")+"</th>"+thHTML+$("#techdoclistingi18n").data("dat")+"</th></tr></thead><tbody></tbody></table></div>";
var headingmarkup='<h4 class="ti_table-title"></h4><p></p>';
var familyId;
var applicationId;
var newAppId;
function getSelectedDocTypes(){var a=$("table").data("selected-doc-types");
return a
}function getAllLiteraturesByCount(b,d){var e=$(b).parent().next().data("doc-category-id");
familyId=$(b).parent().next().data("family-id");
applicationId=$(b).parent().next().data("application-Id");
newAppId=$(b).parent().next().data("newapp-Id");
if(undefined!=newAppId){applicationId=newAppId
}var c=$(b).parent().next().data("lit-category-count");
if(undefined==d){d=c
}var a=$("#tech-doc-listing").data("listingpath");
a=a+".literature.json";
if(undefined!=familyId&&familyId>0){$.ajax({url:a,data:{count:d,doctypes:e,familyId:familyId},async:false,contentType:"application/json",success:function(f){getLiteraturesJSON(f,a,d)
}})
}else{if(undefined!=applicationId&&applicationId>0){$.ajax({url:a,data:{count:d,doctypes:e,applicationId:applicationId},async:false,contentType:"application/json",success:function(f,g){getLiteraturesJSON(f,a,d)
}})
}}$('table[id*="table_id"]').trigger("update")
}function getLiteraturesJSON(y,q,g){var m={};
if(typeof y=="object"){m=y
}else{m=$.parseJSON(y)
}var w=$('div[id*="doc-category-literature"]');
if(w.length>1){w.slice(1).remove()
}w=$('div[id*="doc-category-literature"]');
var a="#"+$(w).attr("id");
var e=m.data[0].docCategoryName;
$(a+" > h4").html(e);
var x=m.data[0].LiteratureValues.length;
var b=m.data[0].litCategoryCount;
showing100ofresults=$("#techdoclistingi18n").data("showing100ofresults");
var v=showing100ofresults.replace("{}",b);
showingofresults=$("#techdoclistingi18n").data("showingofresults");
showingofresults=showingofresults.replace("{0}",x);
showingofresults=showingofresults.replace("{1}",b);
var s=viewallresults.replace("{}",b);
if(b>100){if(g==100){$(a+" > p").html(v+'&nbsp;&nbsp;&nbsp; <a id="viewbycount" href="#" onclick="javascript:getAllLiteraturesByCount(this, '+b+');">'+s+"</a> <span>&nbsp;&nbsp;</span>")
}else{$(a+" > p").html(showingofresults+'&nbsp;&nbsp;&nbsp; <a id="viewbycount" href="#" onclick="javascript:getAllLiteraturesByCount(this, 100);"> '+viewtop100results+"</a> <span>&nbsp;&nbsp;</span>")
}}else{$(a+" > p").html("Showing "+x+" of "+b+" results")
}if($('table[id*="table_id"]').length>0){var z=$('table[id*="table_id"] > thead > tr > th');
for(var p=0;
p<z.length;
p++){var f=z[p];
$(f).removeClass("header")
}}else{var r='<table id="table_id'+p+'" class="ti_table mod-horizonline js-table-sortable">';
$(w).append(r);
if(undefined!=familyId&&familyId>0){$("#table_id"+p).data("family-id",familyId)
}else{if(undefined!=applicationId&&applicationId>0){$("#table_id"+p).data("application-id",applicationId)
}}$(a+"> table").append(tablemarkup)
}$(a+" > table > tbody > tr").remove();
$(a+" > table").data("listing-path",q).data("doc-category-id",m.data[0].docCategoryId).data("lit-category-count",m.data[0].litCategoryCount);
if(undefined!=familyId&&familyId>0){$(a+" > table").data("family-id",familyId)
}else{if(undefined!=applicationId&&applicationId>0){$(a+" > table").data("application-id",applicationId)
}}var j=$(a+" > table > tbody");
var h=m.data[0].LiteratureValues;
for(var p=0;
p<h.length;
p++){var c=h[p].litDescription;
var l=h[p].downloadLink;
var d=h[p].abstractCaption;
if(null==d){d=" "
}var t=decodeURIComponent(h[p].abstractLink);
if(null==t){t=" "
}var o=h[p].downloadFileExtension;
var n=h[p].sizeInKB;
var u=h[p].date;
var k="<tr><td><a target='_blank' href="+l+">"+c+"</a></td><td><a href="+t+">"+d+"</a></td><td>"+o+"</td><td>"+n+"</td><td>"+u+"</td></tr>";
$(j).append(k)
}}function searchForDocumentTitlePerDocumentType(c,d){var a=$(c).parent().next().data("doc-category-id");
var b=d;
searchLiteraturesByDocumentTitle(a,b)
}function searchLiteraturesByDocumentTitle(f,d){var a=$("#docTitleInp").val();
var e=f;
if(undefined==e){e=getSelectedCheckboxes()
}familyId=$("#selFamilyId").val();
applicationId=$("#selectedApplicationId").val();
var c=$("#tech-doc-listing").data("listingpath");
c=c+".literature.json";
var b={};
b.searchTerm=a;
b.doctypes=e;
if(undefined!=familyId&&familyId>0){b.familyId=familyId
}else{b.applicationId=applicationId
}if(undefined!=d&&d>0){b.count=d
}$.ajax({url:c,data:b,async:false,success:function(G){var v={};
if(typeof G=="object"){v=G
}else{v=$.parseJSON(G)
}var q=v.data.length;
if($("#tech-doc-listing").length){$("#tech-doc-listing").children().remove();
for(var A=0;
A<q;
A++){$("#tech-doc-listing").append('<div id="doc-category-literature-'+A+'" class="doc-category-lit-margin">');
$("#tech-doc-listing #doc-category-literature-"+A).append(headingmarkup);
var m=v.data[A].docCategoryName;
$("#doc-category-literature-"+A+" > h4").html(m);
if(v.data[A].LiteratureValues.length>0){var r=v.data[A].LiteratureValues.length;
var B='<table id="table_id'+A+'" class="ti_table mod-horizonline js-table-sortable" data-listing-path='+c+' data-doc-category-id="'+v.data[A].docCategoryId+'" data-lit-category-count="'+v.data[A].litCategoryCount+'">';
$("#doc-category-literature-"+A).append(B);
if(undefined!=familyId&&familyId>0){$("#table_id"+A).data("family-id",familyId)
}else{if(undefined!=applicationId&&applicationId>0){$("#table_id"+A).data("application-id",applicationId)
}}$("#doc-category-literature-"+A+" > table").append(tablemarkup);
var g=v.data[A].litCategoryCount;
var t=encodeURI(a);
var F=showingresultswithtitle.replace("{0}",r);
var u=F.replace("{1}",g);
var l=u.replace("{2}",t);
var C=viewallresults.replace("{}",g);
if(g>100){if(r<100||r==g){$("#doc-category-literature-"+A+" > p").html(l+'&nbsp;&nbsp;&nbsp; <a id="viewbycount" href="#" onclick="javascript:searchForDocumentTitlePerDocumentType(this,100);">'+viewtop100results+"</a> <span>&nbsp;&nbsp;</span>")
}else{$("#doc-category-literature-"+A+" > p").html(l+'&nbsp;&nbsp;&nbsp; <a id="viewbycount" href="#" onclick="javascript:searchForDocumentTitlePerDocumentType(this,'+g+');">'+C+" </a> <span>&nbsp;&nbsp;</span>")
}}else{if(g>r){$("#doc-category-literature-"+A+" > p").html(l+'&nbsp;&nbsp;&nbsp; <a id="viewbycount" href="#" onclick="javascript:searchForDocumentTitlePerDocumentType(this,'+g+');">'+C+"</a> <span>&nbsp;&nbsp;</span>")
}else{$("#doc-category-literature-"+A+" > p").html(l)
}}var o=$("#doc-category-literature-"+A+" > table > tbody");
var n=v.data[A].LiteratureValues;
for(var y=0;
y<n.length;
y++){var h=n[y].litDescription;
var s=n[y].downloadLink;
var k=n[y].abstractCaption;
if(null==k){k=" "
}var D=decodeURIComponent(n[y].abstractLink);
if(null==D){D=" "
}var x=n[y].downloadFileExtension;
var w=n[y].sizeInKB;
var E=n[y].date;
var p="<tr><td><a target='_blank' href="+s+">"+h+"</a></td><td><a href="+D+">"+k+"</a></td><td>"+x+"</td><td>"+w+"</td><td>"+E+"</td></tr>";
$(o).append(p)
}}else{var g=v.data[A].litCategoryCount;
var z=nosearchresults.replace("{}",a);
$("#doc-category-literature-"+A+" > p").html(z)
}}}else{console.log("No Listing component present.")
}}});
$('table[id*="table_id"]').tablesorter({dateFormat:"ddmmyyyy",headers:{4:{sorter:"shortDate",dateFormat:"ddmmyyyy"}}});
$('table[id*="table_id"]').trigger("update")
}var searchLiteraturesByFamily=function(){var b=getSelectedCheckboxes();
familyId=$("#selected-family-id").val();
applicationId=$("#selectedApplicationId").val();
var a=$("#tech-doc-listing").data("listingpath");
a=a+".literature.json";
if(undefined!=familyId&&familyId>0){$.ajax({url:a,data:{doctypes:b,familyId:familyId},async:false,success:function(c){searchLiteratureByFamilyJSON(c,a)
}})
}else{if(undefined!=applicationId&&applicationId>0){$.ajax({url:a,data:{doctypes:b,applicationId:applicationId},async:false,success:function(c){searchLiteratureByFamilyJSON(c,a)
}})
}}$('table[id*="table_id"]').tablesorter({dateFormat:"ddmmyyyy",headers:{4:{sorter:"shortDate",dateFormat:"ddmmyyyy"}}});
$('table[id*="table_id"]').trigger("update")
};
function searchLiteratureByFamilyJSON(x,s){var n={};
if(typeof x=="object"){n=x
}else{n=$.parseJSON(x)
}var l=n.data.length;
if($("#tech-doc-listing").length){$("#tech-doc-listing").children().remove();
for(var r=0;
r<l;
r++){$("#tech-doc-listing").append('<div id="doc-category-literature-'+r+'" class="doc-category-lit-margin">');
$("#tech-doc-listing #doc-category-literature-"+r).append(headingmarkup);
var e=n.data[r].docCategoryName;
$("#doc-category-literature-"+r+" > h4").html(e);
if(n.data[r].LiteratureValues.length>0){var g=n.data[r].LiteratureValues.length;
var t='<table id="table_id'+r+'" class="ti_table mod-horizonline js-table-sortable" data-listing-path='+s+' data-doc-category-id="'+n.data[r].docCategoryId+'" data-lit-category-count="'+n.data[r].litCategoryCount+'">';
$("#doc-category-literature-"+r).append(t);
if(undefined!=familyId&&familyId>0){$("#table_id"+r).data("family-id",familyId)
}else{if(undefined!=applicationId&&applicationId>0){$("#table_id"+r).data("application-id",applicationId)
}}$("#doc-category-literature-"+r+" > table").append(tablemarkup);
var a=n.data[r].litCategoryCount;
showingofresults=$("#techdoclistingi18n").data("showingofresults");
showingofresults=showingofresults.replace("{0}",g);
var d=showingofresults.replace("{1}",a);
var u=viewallresults.replace("{}",a);
if(a>100){if(g==100){$("#doc-category-literature-"+r+" > p").html(d+'&nbsp;&nbsp;&nbsp; <a id="viewbycount" href="#" onclick="javascript:getAllLiteraturesByCount(this);"> '+u+"</a> <span>&nbsp;&nbsp;</span>")
}else{$("#doc-category-literature-"+r+" > p").html(d+'&nbsp;&nbsp;&nbsp; <a id="viewbycount" href="#" onclick="javascript:getAllLiteraturesByCount(this,100);">'+viewtop100results+"</a> <span>&nbsp;&nbsp;</span>")
}}else{if(a==g){$("#doc-category-literature-"+r+" > p").html(d)
}else{$("#doc-category-literature-"+r+" > p").html(d+'&nbsp;&nbsp;&nbsp; <a id="viewbycount" href="#" onclick="javascript:getAllLiteraturesByCount(this);"> '+u+"</a> <span>&nbsp;&nbsp;</span>")
}}var h=$("#doc-category-literature-"+r+" > table > tbody");
var f=n.data[r].LiteratureValues;
for(var q=0;
q<f.length;
q++){var b=f[q].litDescription;
var m=f[q].downloadLink;
var c=f[q].abstractCaption;
if(null==c){c=" "
}var v=decodeURIComponent(f[q].abstractLink);
if(null==v){v=" "
}var p=f[q].downloadFileExtension;
var o=f[q].sizeInKB;
var w=f[q].date;
var k="<tr><td><a target='_blank' href="+m+">"+b+"</a></td><td><a href="+v+">"+c+"</a></td><td>"+p+"</td><td>"+o+"</td><td>"+w+"</td></tr>";
$(h).append(k)
}}else{var a=n.data[r].litCategoryCount;
$("#doc-category-literature-"+r+" > p").html(showing0of0results)
}}}else{console.log("No Listing component present.")
}}$("#docSearchBtn").click(function(){var a=$("#docTitleInp").val();
if(null!=a&&a!=""){searchLiteraturesByDocumentTitle()
}else{searchLiteraturesByFamily()
}});
/*!
 * JavaScript Cookie v2.1.4
 * https://github.com/js-cookie/js-cookie
 *
 * Copyright 2006, 2015 Klaus Hartl & Fagner Brack
 * Released under the MIT license
 */
;
(function(b){var d=false;
if(typeof define==="function"&&define.amd){define(b);
d=true
}if(typeof exports==="object"){module.exports=b();
d=true
}if(!d){var a=window.Cookies;
var c=window.Cookies=b();
c.noConflict=function(){window.Cookies=a;
return c
}
}}(function(){function b(){var f=0;
var c={};
for(;
f<arguments.length;
f++){var d=arguments[f];
for(var e in d){c[e]=d[e]
}}return c
}function a(d){function c(r,p,l){var t;
if(typeof document==="undefined"){return
}if(arguments.length>1){l=b({path:"/"},c.defaults,l);
if(typeof l.expires==="number"){var h=new Date();
h.setMilliseconds(h.getMilliseconds()+l.expires*86400000);
l.expires=h
}l.expires=l.expires?l.expires.toUTCString():"";
try{t=JSON.stringify(p);
if(/^[\{\[]/.test(t)){p=t
}}catch(n){}if(!d.write){p=encodeURIComponent(String(p)).replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g,decodeURIComponent)
}else{p=d.write(p,r)
}r=encodeURIComponent(String(r));
r=r.replace(/%(23|24|26|2B|5E|60|7C)/g,decodeURIComponent);
r=r.replace(/[\(\)]/g,escape);
var k="";
for(var o in l){if(!l[o]){continue
}k+="; "+o;
if(l[o]===true){continue
}k+="="+l[o]
}return(document.cookie=r+"="+p+k)
}if(!r){t={}
}var s=document.cookie?document.cookie.split("; "):[];
var q=/(%[0-9A-Z]{2})+/g;
var m=0;
for(;
m<s.length;
m++){var j=s[m].split("=");
var g=j.slice(1).join("=");
if(g.charAt(0)==='"'){g=g.slice(1,-1)
}try{var f=j[0].replace(q,decodeURIComponent);
g=d.read?d.read(g,f):d(g,f)||g.replace(q,decodeURIComponent);
if(this.json){try{g=JSON.parse(g)
}catch(n){}}if(r===f){t=g;
break
}if(!r){t[f]=g
}}catch(n){}}return t
}c.set=c;
c.get=function(e){return c.call(c,e)
};
c.getJSON=function(){return c.apply({json:true},[].slice.call(arguments))
};
c.defaults={};
c.remove=function(f,e){c(f,"",b(e,{expires:-1}))
};
c.withConverter=a;
return c
}return a(function(){})
}));
(function($){$.extend({tablesorter:new function(){var parsers=[],widgets=[];
this.defaults={cssHeader:"header",cssAsc:"headerSortUp",cssDesc:"headerSortDown",cssChildRow:"expand-child",sortInitialOrder:"asc",sortMultiSortKey:"shiftKey",sortForce:null,sortAppend:null,sortLocaleCompare:true,textExtraction:"simple",parsers:{},widgets:[],widgetZebra:{css:["even","odd"]},headers:{},widthFixed:false,cancelSelection:true,sortList:[],headerList:[],dateFormat:"us",decimal:"/.|,/g",onRenderHeader:null,selectorHeaders:"thead :not(.dataTableEnhanced .mod-heading2,.dataTableEnhanced .mod-heading3,.dataTableEnhanced .mod-heading4) th",debug:false};
function benchmark(s,d){log(s+","+(new Date().getTime()-d.getTime())+"ms")
}this.benchmark=benchmark;
function log(s){if(typeof console!="undefined"&&typeof console.debug!="undefined"){console.log(s)
}else{alert(s)
}}function buildParserCache(table,$headers){if(table.config.debug){var parsersDebug=""
}if(table.tBodies.length==0){return
}var rows=table.tBodies[0].rows;
if(rows[0]){var list=[],cells=rows[0].cells,l=cells.length;
for(var i=0;
i<l;
i++){var p=false;
if($.metadata&&($($headers[i]).metadata()&&$($headers[i]).metadata().sorter)){p=getParserById($($headers[i]).metadata().sorter)
}else{if((table.config.headers[i]&&table.config.headers[i].sorter)){p=getParserById(table.config.headers[i].sorter)
}}if(!p){p=detectParserForColumn(table,rows,-1,i)
}if(table.config.debug){parsersDebug+="column:"+i+" parser:"+p.id+"\n"
}list.push(p)
}}if(table.config.debug){log(parsersDebug)
}return list
}function detectParserForColumn(table,rows,rowIndex,cellIndex){var l=parsers.length,node=false,nodeValue=false,keepLooking=true;
while(nodeValue==""&&keepLooking){rowIndex++;
if(rows[rowIndex]){node=getNodeFromRowAndCellIndex(rows,rowIndex,cellIndex);
nodeValue=trimAndGetNodeText(table.config,node);
if(table.config.debug){log("Checking if value was empty on row:"+rowIndex)
}}else{keepLooking=false
}}for(var i=1;
i<l;
i++){if(parsers[i].is(nodeValue,table,node)){return parsers[i]
}}return parsers[0]
}function getNodeFromRowAndCellIndex(rows,rowIndex,cellIndex){return rows[rowIndex].cells[cellIndex]
}function trimAndGetNodeText(config,node){return $.trim(getElementText(config,node))
}function getParserById(name){var l=parsers.length;
for(var i=0;
i<l;
i++){if(parsers[i].id.toLowerCase()==name.toLowerCase()){return parsers[i]
}}return false
}function buildCache(table){if(table.config.debug){var cacheTime=new Date()
}var totalRows=(table.tBodies[0]&&table.tBodies[0].rows.length)||0,totalCells=(table.tBodies[0].rows[0]&&table.tBodies[0].rows[0].cells.length)||0,parsers=table.config.parsers,cache={row:[],normalized:[]};
for(var i=0;
i<totalRows;
++i){var c=$(table.tBodies[0].rows[i]),cols=[];
if(c.hasClass(table.config.cssChildRow)){cache.row[cache.row.length-1]=cache.row[cache.row.length-1].add(c);
continue
}cache.row.push(c);
for(var j=0;
j<totalCells;
++j){cols.push(parsers[j].format(getElementText(table.config,c[0].cells[j]),table,c[0].cells[j]))
}cols.push(cache.normalized.length);
cache.normalized.push(cols);
cols=null
}if(table.config.debug){benchmark("Building cache for "+totalRows+" rows:",cacheTime)
}return cache
}function getElementText(config,node){var text="";
if(!node){return""
}if(!config.supportsTextContent){config.supportsTextContent=node.textContent||false
}if(config.textExtraction=="simple"){if(config.supportsTextContent){text=node.textContent
}else{if(node.childNodes[0]&&node.childNodes[0].hasChildNodes()){text=node.childNodes[0].innerHTML
}else{text=node.innerHTML
}}}else{if(typeof(config.textExtraction)=="function"){text=config.textExtraction(node)
}else{text=$(node).text()
}}return text
}function appendToTable(table,cache){if(table.config.debug){var appendTime=new Date()
}var c=cache,r=c.row,n=c.normalized,totalRows=n.length,checkCell=(n[0].length-1),tableBody=$(table.tBodies[0]),rows=[];
for(var i=0;
i<totalRows;
i++){var pos=n[i][checkCell];
rows.push(r[pos]);
if(!table.config.appender){var l=r[pos].length;
for(var j=0;
j<l;
j++){tableBody[0].appendChild(r[pos][j])
}}}if(table.config.appender){table.config.appender(table,rows)
}rows=null;
if(table.config.debug){benchmark("Rebuilt table:",appendTime)
}applyWidget(table);
setTimeout(function(){$(table).trigger("sortEnd")
},0)
}function buildHeaders(table){if(table.config.debug){var time=new Date()
}var meta=($.metadata)?true:false;
var header_index=computeTableHeaderCellIndexes(table);
$tableHeaders=$(table.config.selectorHeaders,table).each(function(index){this.column=header_index[this.parentNode.rowIndex+"-"+this.cellIndex];
this.order=formatSortingOrder(table.config.sortInitialOrder);
this.count=this.order;
if(checkHeaderMetadata(this)||checkHeaderOptions(table,index)){this.sortDisabled=true
}if(checkHeaderOptionsSortingLocked(table,index)){this.order=this.lockedOrder=checkHeaderOptionsSortingLocked(table,index)
}if(!this.sortDisabled){var $th=$(this).addClass(table.config.cssHeader);
if(table.config.onRenderHeader){table.config.onRenderHeader.apply($th)
}}table.config.headerList[index]=this
});
if(table.config.debug){benchmark("Built headers:",time);
log($tableHeaders)
}return $tableHeaders
}function computeTableHeaderCellIndexes(t){var matrix=[];
var lookup={};
var thead=t.getElementsByTagName("THEAD")[0];
var trs=thead.getElementsByTagName("TR");
for(var i=0;
i<trs.length;
i++){var cells=trs[i].cells;
for(var j=0;
j<cells.length;
j++){var c=cells[j];
var rowIndex=c.parentNode.rowIndex;
var cellId=rowIndex+"-"+c.cellIndex;
var rowSpan=c.rowSpan||1;
var colSpan=c.colSpan||1;
var firstAvailCol;
if(typeof(matrix[rowIndex])=="undefined"){matrix[rowIndex]=[]
}for(var k=0;
k<matrix[rowIndex].length+1;
k++){if(typeof(matrix[rowIndex][k])=="undefined"){firstAvailCol=k;
break
}}lookup[cellId]=firstAvailCol;
for(var k=rowIndex;
k<rowIndex+rowSpan;
k++){if(typeof(matrix[k])=="undefined"){matrix[k]=[]
}var matrixrow=matrix[k];
for(var l=firstAvailCol;
l<firstAvailCol+colSpan;
l++){matrixrow[l]="x"
}}}}return lookup
}function checkCellColSpan(table,rows,row){var arr=[],r=table.tHead.rows,c=r[row].cells;
for(var i=0;
i<c.length;
i++){var cell=c[i];
if(cell.colSpan>1){arr=arr.concat(checkCellColSpan(table,headerArr,row++))
}else{if(table.tHead.length==1||(cell.rowSpan>1||!r[row+1])){arr.push(cell)
}}}return arr
}function checkHeaderMetadata(cell){if(($.metadata)&&($(cell).metadata().sorter===false)){return true
}return false
}function checkHeaderOptions(table,i){if((table.config.headers[i])&&(table.config.headers[i].sorter===false)){return true
}return false
}function checkHeaderOptionsSortingLocked(table,i){if((table.config.headers[i])&&(table.config.headers[i].lockedOrder)){return table.config.headers[i].lockedOrder
}return false
}function applyWidget(table){var c=table.config.widgets;
var l=c.length;
for(var i=0;
i<l;
i++){getWidgetById(c[i]).format(table)
}}function getWidgetById(name){var l=widgets.length;
for(var i=0;
i<l;
i++){if(widgets[i].id.toLowerCase()==name.toLowerCase()){return widgets[i]
}}}function formatSortingOrder(v){if(typeof(v)!="Number"){return(v.toLowerCase()=="desc")?1:0
}else{return(v==1)?1:0
}}function isValueInArray(v,a){var l=a.length;
for(var i=0;
i<l;
i++){if(a[i][0]==v){return true
}}return false
}function setHeadersCss(table,$headers,list,css){$headers.removeClass(css[0]).removeClass(css[1]);
var h=[];
$headers.each(function(offset){if(!this.sortDisabled){h[this.column]=$(this)
}});
var l=list.length;
for(var i=0;
i<l;
i++){h[list[i][0]].addClass(css[list[i][1]])
}}function fixColumnWidth(table,$headers){var c=table.config;
if(c.widthFixed){var colgroup=$("<colgroup>");
$("tr:first td",table.tBodies[0]).each(function(){colgroup.append($("<col>").css("width",$(this).width()))
});
$(table).prepend(colgroup)
}}function updateHeaderSortCount(table,sortList){var c=table.config,l=sortList.length;
for(var i=0;
i<l;
i++){var s=sortList[i],o=c.headerList[s[0]];
o.count=s[1];
o.count++
}}function multisort(table,sortList,cache){if(table.config.debug){var sortTime=new Date()
}var dynamicExp="var sortWrapper = function(a,b) {",l=sortList.length;
for(var i=0;
i<l;
i++){var c=sortList[i][0];
var order=sortList[i][1];
var s=(table.config.parsers[c].type=="text")?((order==0)?makeSortFunction("text","asc",c):makeSortFunction("text","desc",c)):((order==0)?makeSortFunction("numeric","asc",c):makeSortFunction("numeric","desc",c));
var e="e"+i;
dynamicExp+="var "+e+" = "+s;
dynamicExp+="if("+e+") { return "+e+"; } ";
dynamicExp+="else { "
}var orgOrderCol=cache.normalized[0].length-1;
dynamicExp+="return a["+orgOrderCol+"]-b["+orgOrderCol+"];";
for(var i=0;
i<l;
i++){dynamicExp+="}; "
}dynamicExp+="return 0; ";
dynamicExp+="}; ";
if(table.config.debug){benchmark("Evaling expression:"+dynamicExp,new Date())
}eval(dynamicExp);
cache.normalized.sort(sortWrapper);
if(table.config.debug){benchmark("Sorting on "+sortList.toString()+" and dir "+order+" time:",sortTime)
}return cache
}function makeSortFunction(type,direction,index){var a="a["+index+"]",b="b["+index+"]";
if(type=="text"&&direction=="asc"){return"("+a+" == "+b+" ? 0 : ("+a+" === null ? Number.POSITIVE_INFINITY : ("+b+" === null ? Number.NEGATIVE_INFINITY : ("+a+" < "+b+") ? -1 : 1 )));"
}else{if(type=="text"&&direction=="desc"){return"("+a+" == "+b+" ? 0 : ("+a+" === null ? Number.POSITIVE_INFINITY : ("+b+" === null ? Number.NEGATIVE_INFINITY : ("+b+" < "+a+") ? -1 : 1 )));"
}else{if(type=="numeric"&&direction=="asc"){return"("+a+" === null && "+b+" === null) ? 0 :("+a+" === null ? Number.POSITIVE_INFINITY : ("+b+" === null ? Number.NEGATIVE_INFINITY : "+a+" - "+b+"));"
}else{if(type=="numeric"&&direction=="desc"){return"("+a+" === null && "+b+" === null) ? 0 :("+a+" === null ? Number.POSITIVE_INFINITY : ("+b+" === null ? Number.NEGATIVE_INFINITY : "+b+" - "+a+"));"
}}}}}function makeSortText(i){return"((a["+i+"] < b["+i+"]) ? -1 : ((a["+i+"] > b["+i+"]) ? 1 : 0));"
}function makeSortTextDesc(i){return"((b["+i+"] < a["+i+"]) ? -1 : ((b["+i+"] > a["+i+"]) ? 1 : 0));"
}function makeSortNumeric(i){return"a["+i+"]-b["+i+"];"
}function makeSortNumericDesc(i){return"b["+i+"]-a["+i+"];"
}function sortText(a,b){if(table.config.sortLocaleCompare){return a.localeCompare(b)
}return((a<b)?-1:((a>b)?1:0))
}function sortTextDesc(a,b){if(table.config.sortLocaleCompare){return b.localeCompare(a)
}return((b<a)?-1:((b>a)?1:0))
}function sortNumeric(a,b){return a-b
}function sortNumericDesc(a,b){return b-a
}function getCachedSortType(parsers,i){return parsers[i].type
}this.construct=function(settings){return this.each(function(){if(!this.tHead||!this.tBodies){return
}var $this,$document,$headers,cache,config,shiftDown=0,sortOrder;
this.config={};
config=$.extend(this.config,$.tablesorter.defaults,settings);
$this=$(this);
$.data(this,"tablesorter",config);
$headers=buildHeaders(this);
this.config.parsers=buildParserCache(this,$headers);
cache=buildCache(this);
var sortCSS=[config.cssDesc,config.cssAsc];
fixColumnWidth(this);
$headers.click(function(e){var totalRows=($this[0].tBodies[0]&&$this[0].tBodies[0].rows.length)||0;
if(!this.sortDisabled&&totalRows>0){$this.trigger("sortStart");
var $cell=$(this);
var i=this.column;
this.order=this.count++%2;
if(this.lockedOrder){this.order=this.lockedOrder
}if(!e[config.sortMultiSortKey]){config.sortList=[];
if(config.sortForce!=null){var a=config.sortForce;
for(var j=0;
j<a.length;
j++){if(a[j][0]!=i){config.sortList.push(a[j])
}}}config.sortList.push([i,this.order])
}else{if(isValueInArray(i,config.sortList)){for(var j=0;
j<config.sortList.length;
j++){var s=config.sortList[j],o=config.headerList[s[0]];
if(s[0]==i){o.count=s[1];
o.count++;
s[1]=o.count%2
}}}else{config.sortList.push([i,this.order])
}}setTimeout(function(){setHeadersCss($this[0],$headers,config.sortList,sortCSS);
appendToTable($this[0],multisort($this[0],config.sortList,cache))
},1);
return false
}}).mousedown(function(){if(config.cancelSelection){this.onselectstart=function(){return false
};
return false
}});
$this.bind("update",function(){var me=this;
setTimeout(function(){me.config.parsers=buildParserCache(me,$headers);
cache=buildCache(me)
},1)
}).bind("updateCell",function(e,cell){var config=this.config;
var pos=[(cell.parentNode.rowIndex-1),cell.cellIndex];
cache.normalized[pos[0]][pos[1]]=config.parsers[pos[1]].format(getElementText(config,cell),cell)
}).bind("sorton",function(e,list){$(this).trigger("sortStart");
config.sortList=list;
var sortList=config.sortList;
updateHeaderSortCount(this,sortList);
setHeadersCss(this,$headers,sortList,sortCSS);
appendToTable(this,multisort(this,sortList,cache))
}).bind("appendCache",function(){appendToTable(this,cache)
}).bind("applyWidgetId",function(e,id){getWidgetById(id).format(this)
}).bind("applyWidgets",function(){applyWidget(this)
});
if($.metadata&&($(this).metadata()&&$(this).metadata().sortlist)){config.sortList=$(this).metadata().sortlist
}if(config.sortList.length>0){$this.trigger("sorton",[config.sortList])
}applyWidget(this)
})
};
this.addParser=function(parser){var l=parsers.length,a=true;
for(var i=0;
i<l;
i++){if(parsers[i].id.toLowerCase()==parser.id.toLowerCase()){a=false
}}if(a){parsers.push(parser)
}};
this.addWidget=function(widget){widgets.push(widget)
};
this.formatFloat=function(s){var i=parseFloat(s);
return(isNaN(i))?0:i
};
this.formatInt=function(s){var i=parseInt(s);
return(isNaN(i))?0:i
};
this.isDigit=function(s,config){return/^[-+]?\d*$/.test($.trim(s.replace(/[,.']/g,"")))
};
this.clearTableBody=function(table){if($.browser.msie){function empty(){while(this.firstChild){this.removeChild(this.firstChild)
}}empty.apply(table.tBodies[0])
}else{table.tBodies[0].innerHTML=""
}}
}});
$.fn.extend({tablesorter:$.tablesorter.construct});
var ts=$.tablesorter;
ts.addParser({id:"text",is:function(s){return true
},format:function(s){return $.trim(s.toLocaleLowerCase())
},type:"text"});
ts.addParser({id:"digit",is:function(s,table){var c=table.config;
return $.tablesorter.isDigit(s,c)
},format:function(s){return $.tablesorter.formatFloat(s)
},type:"numeric"});
ts.addParser({id:"currency",is:function(s){return/^[£$€?.]/.test(s)
},format:function(s){return $.tablesorter.formatFloat(s.replace(new RegExp(/[£$€]/g),""))
},type:"numeric"});
ts.addParser({id:"ipAddress",is:function(s){return/^\d{2,3}[\.]\d{2,3}[\.]\d{2,3}[\.]\d{2,3}$/.test(s)
},format:function(s){var a=s.split("."),r="",l=a.length;
for(var i=0;
i<l;
i++){var item=a[i];
if(item.length==2){r+="0"+item
}else{r+=item
}}return $.tablesorter.formatFloat(r)
},type:"numeric"});
ts.addParser({id:"url",is:function(s){return/^(https?|ftp|file):\/\/$/.test(s)
},format:function(s){return jQuery.trim(s.replace(new RegExp(/(https?|ftp|file):\/\//),""))
},type:"text"});
ts.addParser({id:"isoDate",is:function(s){return/^\d{4}[\/-]\d{1,2}[\/-]\d{1,2}$/.test(s)
},format:function(s){return $.tablesorter.formatFloat((s!="")?new Date(s.replace(new RegExp(/-/g),"/")).getTime():"0")
},type:"numeric"});
ts.addParser({id:"percent",is:function(s){return/\%$/.test($.trim(s))
},format:function(s){return $.tablesorter.formatFloat(s.replace(new RegExp(/%/g),""))
},type:"numeric"});
ts.addParser({id:"usLongDate",is:function(s){return s.match(new RegExp(/^[A-Za-z]{3,10}\.? [0-9]{1,2}, ([0-9]{4}|'?[0-9]{2}) (([0-2]?[0-9]:[0-5][0-9])|([0-1]?[0-9]:[0-5][0-9]\s(AM|PM)))$/))
},format:function(s){return $.tablesorter.formatFloat(new Date(s).getTime())
},type:"numeric"});
ts.addParser({id:"shortDate",is:function(s){return/\d{1,2}[\/\-]\d{1,2}[\/\-]\d{2,4}/.test(s)
},format:function(s,table){var c=table.config;
s=s.replace(/\-/g,"/");
if(c.dateFormat=="us"){s=s.replace(/(\d{1,2})[\/\-](\d{1,2})[\/\-](\d{4})/,"$3/$1/$2")
}else{if(c.dateFormat=="uk"){s=s.replace(/(\d{1,2})[\/\-](\d{1,2})[\/\-](\d{4})/,"$3/$2/$1")
}else{if(c.dateFormat=="dd/mm/yy"||c.dateFormat=="dd-mm-yy"){s=s.replace(/(\d{1,2})[\/\-](\d{1,2})[\/\-](\d{2})/,"$1/$2/$3")
}}}return $.tablesorter.formatFloat(new Date(s).getTime())
},type:"numeric"});
ts.addParser({id:"time",is:function(s){return/^(([0-2]?[0-9]:[0-5][0-9])|([0-1]?[0-9]:[0-5][0-9]\s(am|pm)))$/.test(s)
},format:function(s){return $.tablesorter.formatFloat(new Date("2000/01/01 "+s).getTime())
},type:"numeric"});
ts.addParser({id:"metadata",is:function(s){return false
},format:function(s,table,cell){var c=table.config,p=(!c.parserMetadataName)?"sortValue":c.parserMetadataName;
return $(cell).metadata()[p]
},type:"numeric"});
ts.addWidget({id:"zebra",format:function(table){if(table.config.debug){var time=new Date()
}var $tr,row=-1,odd;
$("tr:visible",table.tBodies[0]).each(function(i){$tr=$(this);
if(!$tr.hasClass(table.config.cssChildRow)){row++
}odd=(row%2==0);
$tr.removeClass(table.config.widgetZebra.css[odd?0:1]).addClass(table.config.widgetZebra.css[odd?1:0])
});
if(table.config.debug){$.tablesorter.benchmark("Applying Zebra widget",time)
}}})
})(jQuery);
$(document).ready(function(){$(".tablesorter > tbody > tr").mouseenter(function(){$(this).css("backgroundColor","#e7f6eb")
}).mouseleave(function(){$(this).css("backgroundColor","")
})
});
(function(a,b){if(a.fn.tiStickyHeader==b){a.fn.tiStickyHeader=function(p){var w=a(".ti_chapterNav").height();
var k=a(window);
if(p==b){p=1
}p=parseInt(p);
if(!a.isNumeric(p)){return false
}var h=this,g=h.prop("tagName").toLowerCase();
if(g!="table"){return false
}var q=h.find("tr:lt("+p+")").clone(),d=h.prop("className"),j=h.find("tr:first").children("th,td"),x,s="ti-sticky-"+h.attr("data-lid"),l,t;
var n,f,v,u,y;
var o="0px";
h.before('<div id="'+s+'" class="ti-sticky-container"><table class="'+d+'"></table></div>');
l=a("#"+s);
t=l.children("table:first");
t.append("<thead>");
var r=t.children("thead");
r.append(q);
h.attr("sticky",s);
x=t.find("tr:first").children("th,td");
function e(z){u=k.scrollTop()+w;
y=k.scrollLeft();
n=l.outerHeight();
f=h.offset();
v=f.top+h.outerHeight();
l.css("left",(f.left-y)+"px");
if(u<f.top){l.css("visibility","hidden")
}else{if(u+n<v){l.css("top",w+"px");
l.css("visibility","visible");
m()
}else{l.css("visibility","hidden")
}}}function c(){x.each(function(z,B){j;
var A=a(B);
A.width(j.eq(z).outerWidth())
})
}k.scroll(function(z){l.width(h.outerWidth());
c();
e()
});
k.resize(function(z){l.width(h.outerWidth());
c();
e()
});
x.click(function(C){var A=a(this),B=A.index(),z=j.eq(B);
z.click();
x.not(this).removeClass("headerSortUp headerSortDown");
setTimeout(function(){if(z.hasClass("headerSortUp")){A.addClass("headerSortUp").removeClass("headerSortDown")
}else{A.addClass("headerSortDown").removeClass("headerSortUp")
}},50)
});
function m(){var B,z,A;
x.removeClass("headerSortUp headerSortDown");
j.each(function(){A=a(this);
B=A.index();
z=x.eq(B);
if(A.hasClass("headerSortUp")){z.addClass("headerSortUp")
}else{if(A.hasClass("headerSortDown")){z.addClass("headerSortDown")
}}})
}setTimeout(function(){l.show();
l.width(h.outerWidth());
c();
e()
},1000)
}
}}(jQuery));
$(document).ready(function(){$(".ti_table").each(function(){var a=$(this);
var b=a.data();
if(b.isPreview){if(b.sortable){a.tablesorter()
}if(a.data().stickyHeader){$(this).tiStickyHeader()
}}})
});
$(document).ready(function(){$("li").each(function(){var d=$(this).attr("navLinkFlag");
var c=$(this).attr("navAvaFlag");
if(c!=null&&c!=""&&typeof c!=="undefined"&&c=="Y"){if(d!=null&&d!=""&&typeof d!=="undefined"&&d=="N"){$(this).children("ul").addClass("active")
}}});
if(0!=null&&0!=""&&typeof 0!=="undefined"&&parseInt(0)>0){$("li[navAvailabiltyeeqCategName]").each(function(){var a=$(this).attr("navAvaFlag");
if(0==$(this).attr("eeqCategId")){if(a!=null&&a!=""&&typeof a!=="undefined"&&a=="N"){$(this).children("ul").addClass("active")
}}})
}if(-1!=null&&-1!=""&&typeof -1!=="undefined"&&parseInt(-1)>0){$("li[navAvailabiltyeeqCategName]").each(function(){var a=$(this).attr("navAvaFlag");
if(-1==$(this).attr("eeqCategId")){if(a!=null&&a!=""&&typeof a!=="undefined"&&a=="N"){$(this).children("ul").addClass("active")
}}})
}});
$(".js-productTree-collapse").click(function(){$(this).closest(".ti_apps-nav").toggleClass("collapsed")
});
$(".js-productTree-expand").click(function(){$(this).closest(".ti_apps-nav").toggleClass("collapsed")
});
function go_Search(){if(($("#searchTerm").val())!=null&&($("#searchTerm").val())!="Minimum of 3 characters required"&&($("#searchTerm").val())!=""&&typeof($("#searchTerm").val())!=="undefined"&&$.trim(($("#searchTerm").val()))!=""){return true
}else{return false
}}$(function(){function a(g){if($(g).data("hasblockrows")==null){var e=$(g).find("tr");
for(var b=0;
b<e.length;
){var f=e[b];
var c=1;
$(f).find("td, th").each(function(){var h=parseInt($(this).attr("rowspan")||"1",10);
if(h>c){c=h
}});
c+=b;
var d=[];
for(;
b<c;
b++){$(e[b]).data("blockrows",d);
d.push(e[b])
}}$(g).data("hasblockrows",1)
}}$(".ti_table td, .ti_table tbody th").hover(function(){$el=$(this);
a($el.closest("table"));
$.each($el.parent().data("blockrows"),function(){$(this).find("td").addClass("hover");
$(this).find("th").addClass("hover")
})
},function(){$el=$(this);
$.each($el.parent().data("blockrows"),function(){$(this).find("td").removeClass("hover");
$(this).find("th").removeClass("hover")
})
})
});
!function(d,c){"function"==typeof define&&define.amd?define([],function(){return d.svg4everybody=c()
}):"object"==typeof exports?module.exports=c():d.svg4everybody=c()
}(this,function(){function e(h,g){if(g){var l=document.createDocumentFragment(),k=!h.getAttribute("viewBox")&&g.getAttribute("viewBox");
k&&h.setAttribute("viewBox",k);
for(var j=g.cloneNode(!0);
j.childNodes.length;
){l.appendChild(j.firstChild)
}h.appendChild(l)
}}function d(a){a.onreadystatechange=function(){if(4===a.readyState){var b=a._cachedDocument;
b||(b=a._cachedDocument=document.implementation.createHTMLDocument(""),b.body.innerHTML=a.responseText,a._cachedTarget={}),a._embeds.splice(0).map(function(g){var c=a._cachedTarget[g.id];
c||(c=a._cachedTarget[g.id]=b.getElementById(g.id)),e(g.svg,c)
})
}},a.onreadystatechange()
}function f(t){function s(){for(var y=0;
y<a.length;
){var u=a[y],l=u.parentNode;
if(l&&/svg/i.test(l.nodeName)){var k=u.getAttribute("xlink:href")||u.getAttribute("href");
if(r&&(!q.validate||q.validate(k,l,u))){l.removeChild(u);
var j=k.split("#"),x=j.shift(),w=j.join("#");
if(x.length){var v=m[x];
v||(v=m[x]=new XMLHttpRequest,v.open("GET",x),v.send(),v._embeds=[]),v._embeds.push({svg:l,id:w}),d(v)
}else{e(l,document.getElementById(w))
}}}else{++y
}}b(s,67)
}var r,q=Object(t),p=/\bTrident\/[567]\b|\bMSIE (?:9|10)\.0\b/,o=/\bAppleWebKit\/(\d+)\b/,n=/\bEdge\/12\.(\d+)\b/;
r="polyfill" in q?q.polyfill:p.test(navigator.userAgent)||(navigator.userAgent.match(n)||[])[1]<10547||(navigator.userAgent.match(o)||[])[1]<537;
var m={},b=window.requestAnimationFrame||setTimeout,a=document.getElementsByTagName("use");
r&&s()
}return f
});
$(function(){$(".productFamilyApplications-section .ti_table").each(function(){$(this).find("tr").filter(function(){return $(this).children().length==3
}).filter(":even").addClass("mod-alt")
});
$("tr.mod-alt td[rowspan]").each(function(){$(this).parent().nextAll().slice(0,this.rowSpan-1).addClass("mod-alt")
})
});
$(function(){var a=$("#tiHeader").attr("data-language");
switch(a){case"en-us":$("html").addClass("en-us");
break;
case"zh-cn":$("html").addClass("zh-cn");
break;
case"ja-jp":$("html").addClass("ja-jp");
break;
case"de-de":$("html").addClass("de-de");
break;
case"ko-kr":$("html").addClass("ko-kr");
break
}});
(function(a,b){b.on("dialog-ready",function(){var e=a(".page-metricsdialog-validation");
var f=e.closest("form").attr("action");
a.ajax({url:f+".json",dataType:"json",async:false,success:function(g){if(g.familyId!=null||g.appId!=null){a(".metrics-tab").hide();
a("a").each(function(){if(a(this).text()=="Web Metrics"){a(this).hide()
}})
}else{a('input[name="./tiPageName"]').closest("form").find(".cq-dialog-submit").click(function(){var h=a('input[name="./tiPageName"]');
var j=a('input[name="./tiContentGroup"]');
var k=a('select[name="./familyId"]').val();
if(a('select[name="./marketId"]').val()=="13140"&&a('select[name="./sectorId"]').val()==""||a('select[name="./siloId"]').val()=="57"&&k==""||a('select[name="./siloId"]').val()==""){if(h.val().length<1||j.val().length<1){a(h).attr("aria-required",true);
a(j).attr("aria-required",true);
a('input[name="./tiPageName"]').addClass("is-invalid");
a('input[name="./tiContentGroup"]').addClass("is-invalid")
}}else{a(h).attr("aria-required",false);
a(j).attr("aria-required",false)
}})
}},error:function(){}});
if(self.location.href.indexOf("/content/texas-instruments/en-us/")<=0){a(".cq-dialog .coral-Form-field.coral-Textfield").each(function(){var g=this;
if(a(g).attr("maxlength")||a(g).attr("data-maxlength")){a(g).keydown(function(){c(this)
});
a(g).keyup(function(){d(this)
});
a(document).on("click",".cq-dialog-submit",function(h){c(g)
})
}});
function c(g){a(g).attr("maxlengthtmp",a(g).attr("maxlength")).removeAttr("maxlength");
a(g).attr("data-maxlengthtmp",a(g).attr("data-maxlength")).removeAttr("data-maxlength")
}function d(g){a(g).attr("maxlength",a(g).attr("maxlengthtmp")).removeAttr("maxlengthtmp");
a(g).attr("data-maxlength",a(g).attr("data-maxlengthtmp")).removeAttr("data-maxlengthtmp")
}}})
})($,$(document));